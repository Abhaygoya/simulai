Search.setIndex({"docnames": ["authors", "contributing", "history", "index", "installation", "modules", "readme", "simulai", "simulai.backup", "simulai.backup.Network", "simulai.backup.Optimization", "simulai.backup.Pipeline", "simulai.math", "simulai.models", "simulai.optimization", "simulai.regression", "simulai.regression.pytorch", "simulai.regression.tf", "simulai.residuals", "simulai.rom", "simulai.templates", "simulai.utilities", "simulai.workflows", "usage"], "filenames": ["authors.rst", "contributing.rst", "history.rst", "index.rst", "installation.rst", "modules.rst", "readme.rst", "simulai.rst", "simulai.backup.rst", "simulai.backup.Network.rst", "simulai.backup.Optimization.rst", "simulai.backup.Pipeline.rst", "simulai.math.rst", "simulai.models.rst", "simulai.optimization.rst", "simulai.regression.rst", "simulai.regression.pytorch.rst", "simulai.regression.tf.rst", "simulai.residuals.rst", "simulai.rom.rst", "simulai.templates.rst", "simulai.utilities.rst", "simulai.workflows.rst", "usage.rst"], "titles": ["Credits", "Contributing", "History", "Welcome to simulai\u2019s documentation!", "Installation", "simulai", "SimulAI", "simulai package", "simulai.backup package", "simulai.backup.Network package", "simulai.backup.Optimization package", "simulai.backup.Pipeline package", "simulai.math package", "simulai.models package", "simulai.optimization package", "simulai.regression package", "simulai.regression.pytorch package", "simulai.regression.tf package", "simulai.residuals package", "simulai.rom package", "simulai.templates package", "simulai.utilities package", "simulai.workflows package", "Usage"], "terms": {"alberto": [0, 6], "costa": 0, "nogueira": [0, 6], "jr": [0, 6], "albercn": [0, 6], "br": [0, 6], "ibm": [0, 1, 6, 10], "com": [0, 1, 4, 6, 10], "jo\u00e3o": [0, 6], "luca": [0, 6], "de": [0, 6], "sousa": [0, 6], "almeida": [0, 6], "leonardo": [0, 6], "pondian": 0, "tizzei": [0, 6], "ltizzei": [0, 1, 4, 6], "silveira": 0, "albuquerqu": 0, "martin": [0, 6], "none": [0, 7, 9, 10, 11, 12, 21], "yet": 0, "why": 0, "first": [0, 2], "ar": [1, 7], "welcom": 1, "thei": 1, "greatli": 1, "appreci": 1, "everi": [1, 7], "littl": 1, "bit": 1, "help": 1, "credit": [1, 3], "alwai": [1, 4], "given": 1, "you": [1, 4], "can": [1, 4, 6], "mani": 1, "wai": 1, "http": [1, 4, 6], "github": [1, 4, 6], "simulai": [1, 4, 23], "issu": 1, "If": [1, 4], "pleas": 1, "includ": 1, "your": [1, 4], "oper": [1, 6, 7, 12], "system": 1, "name": [1, 5, 7, 12, 21], "version": [1, 6, 7], "ani": 1, "detail": 1, "about": 1, "local": 1, "setup": [1, 4, 6, 8, 9, 10], "might": 1, "troubleshoot": 1, "step": [1, 7, 12], "reproduc": 1, "look": 1, "through": [1, 4], "anyth": 1, "tag": [1, 7], "want": 1, "i": [1, 4, 6, 7, 10, 12], "open": 1, "whoever": 1, "enhanc": 1, "could": 1, "us": [1, 6, 7, 12, 23], "more": [1, 6], "whether": 1, "part": 1, "offici": 1, "doc": [1, 6], "docstr": 1, "even": 1, "web": 1, "blog": 1, "post": 1, "articl": 1, "The": [1, 4, 6, 7, 10, 12], "best": 1, "send": 1, "file": [1, 5, 12], "an": [1, 7], "propos": 1, "explain": 1, "how": 1, "would": 1, "work": 1, "keep": 1, "scope": 1, "narrow": 1, "possibl": [1, 7], "make": 1, "easier": 1, "rememb": 1, "thi": [1, 4, 6, 7, 10], "volunt": 1, "driven": 1, "project": [1, 5, 6, 7, 8, 11, 23], "readi": 1, "here": [1, 7], "": [1, 12], "set": [1, 6, 9], "up": [1, 9, 12], "develop": [1, 3], "fork": 1, "repo": [1, 4], "clone": [1, 4, 6], "git": [1, 4, 6], "your_name_her": 1, "instal": [1, 3], "copi": [1, 4, 5, 7], "virtualenv": [1, 6], "assum": 1, "have": [1, 4], "virtualenvwrapp": 1, "mkvirtualenv": 1, "cd": 1, "python": [1, 4, 6, 7], "py": [1, 4, 6, 7], "creat": [1, 6, 7, 10, 21], "branch": 1, "checkout": 1, "b": 1, "bugfix": 1, "now": 1, "chang": 1, "when": 1, "re": 1, "done": [1, 6], "check": 1, "pass": [1, 7, 10], "flake8": 1, "test": [1, 3, 5, 7, 9], "other": [1, 7], "tox": 1, "pytest": [1, 6], "To": [1, 4, 23], "just": [1, 7], "pip": [1, 4, 6], "them": [1, 7], "commit": 1, "push": 1, "add": 1, "m": [1, 6], "descript": 1, "origin": [1, 12], "websit": 1, "befor": [1, 9], "meet": 1, "should": [1, 7], "function": [1, 7, 9, 10, 12], "updat": [1, 6], "put": [1, 10], "new": [1, 6, 10], "list": [1, 7, 12, 21], "readm": 1, "rst": 1, "3": [1, 6, 21], "5": [1, 7], "6": [1, 6], "7": [1, 6], "8": [1, 10], "pypi": [1, 2], "travi": 1, "ci": 1, "org": [1, 6], "pull_request": 1, "sure": 1, "all": [1, 7, 12], "support": 1, "run": [1, 4, 5, 6, 7, 12, 21], "subset": 1, "test_simulai": 1, "A": [1, 6], "remind": 1, "maintain": 1, "entri": 1, "histori": [1, 3, 7], "Then": 1, "bump2vers": 1, "patch": 1, "major": 1, "minor": 1, "releas": [2, 3, 6], "usag": 3, "unit": 3, "licens": 3, "contact": 3, "citat": 3, "stabl": 3, "from": [3, 10, 12], "sourc": [3, 6, 7, 9, 11, 12, 21], "packag": [3, 5, 6], "contribut": [3, 6], "type": [3, 7, 12, 21], "get": [3, 7, 12], "start": 3, "pull": 3, "request": 3, "guidelin": 3, "tip": 3, "deploi": 3, "team": 3, "contributor": 3, "0": [3, 6, 7, 10, 12, 21], "1": [3, 7, 10, 12, 21], "2020": 3, "01": [3, 7], "31": 3, "index": [3, 12], "modul": [3, 5], "search": 3, "page": [3, 6], "command": 4, "termin": 4, "prefer": 4, "method": [4, 9], "most": 4, "recent": 4, "don": 4, "t": [4, 7, 12, 21], "guid": 4, "process": [4, 7, 10], "download": 4, "either": 4, "public": 4, "repositori": [4, 6], "Or": [4, 6], "tarbal": 4, "curl": 4, "ojl": 4, "master": [4, 6], "onc": 4, "subpackag": 5, "backup": [5, 7], "submodul": 5, "test_autoencod": [5, 7], "content": 5, "math": [5, 7], "differenti": [5, 7], "express": [5, 7, 21], "filter": [5, 7], "integr": [5, 7], "kansa": [5, 7], "product": [5, 7], "progress": [5, 7], "quadratur": [5, 7], "space": [5, 7], "model": [5, 6, 7, 21], "optim": [5, 7, 8], "regress": [5, 7], "residu": [5, 7], "rom": [5, 7, 12], "templat": [5, 6, 7], "util": [5, 7], "lorenz_solv": [5, 7], "lotka_volterra_solv": [5, 7], "opinf_devi": [5, 7], "oscillator_solv": [5, 7], "problem_class": [5, 7], "workflow": [5, 7], "abstract": 5, "baseframework": [5, 7], "eval": [5, 7, 12, 21], "eval_batch": [5, 7], "fit": [5, 7], "save": [5, 7, 12, 21], "bypassintegr": [5, 7], "dataprepar": [5, 7], "prepare_input_data": [5, 7], "prepare_input_structured_data": [5, 7], "prepare_output_data": [5, 7], "prepare_output_structured_data": [5, 7], "purpos": [5, 7, 12], "normal": 5, "reconstruct": [5, 7], "transform": [5, 7], "transform_inv": [5, 7], "activ": [5, 6], "siren": [5, 7], "forward": [5, 7], "share_to_host": [5, 7], "train": [5, 7], "sin": [5, 7], "batch": 5, "batchwisesampl": [5, 7], "input_data": [5, 7, 12], "input_shap": [5, 7], "minmax": [5, 7], "target_data": [5, 7], "batchdomain_constructor": [5, 7], "indices_batchdomain_constructor": [5, 7], "spfile": [5, 7], "read": [5, 7], "write": [5, 7], "load_pkl": [5, 7], "initi": [5, 12], "io": 5, "batchcopi": [5, 7], "batchwiseextrapol": [5, 7], "bypassprepar": [5, 7], "gaussiannois": [5, 7], "data": [5, 7, 12], "intersectingbatch": [5, 7], "get_indic": [5, 7], "maketensor": [5, 7], "mapvalid": [5, 7], "movingwindow": [5, 7], "bypass": [5, 7], "get_last_item": [5, 7], "reshap": [5, 7], "sampl": [5, 7], "indic": [5, 7, 12], "scalerreshap": [5, 7], "slidingwindow": [5, 7], "mesh": [5, 12], "structuredmesh": [5, 7], "internal_boundary_product": [5, 7], "internal_product": [5, 7], "map_to_boundary_el": [5, 7], "map_to_el": [5, 7], "metric": 5, "cumulativenorm": [5, 7], "determinationcoeff": [5, 7], "featurewiseerrornorm": [5, 7], "l2norm": [5, 7], "lyapunovunit": [5, 7], "meanevalu": [5, 7], "memorysizeev": [5, 7], "available_memory_in_gb": [5, 7], "minmaxevalu": [5, 7], "eval_h5": [5, 7], "perturbationmethod": [5, 7], "pointwiseerror": [5, 7], "rosensteinkantz": [5, 7], "samplewiseerrornorm": [5, 7], "batchnorm": [5, 7], "standardnorm": [5, 7], "apply_desc": [5, 7], "apply_resc": [5, 7], "rescal": [5, 7], "unitarynorm": [5, 7], "apply_transform": [5, 7], "update_global_paramet": [5, 7], "unitarysymmetricalnorm": [5, 7], "output": [5, 10, 12], "meshformatterhelp": [5, 7], "plot_figures2d": [5, 7], "parallel": 5, "pipelinempi": [5, 7], "inner_typ": [5, 7], "success": [5, 7, 10], "simul": [5, 6, 21], "pipelin": [5, 6, 7, 8], "batchwise_pipeline_loop": [5, 7], "exec": [5, 7, 12], "pipeline_loop": [5, 7], "predict": [5, 7], "project_data": [5, 7], "reconstruct_data": [5, 7], "special": [5, 12], "scatter": [5, 7], "bidimensional_map_lin": [5, 7], "bidimensional_map_nonlin_1": [5, 7], "bidimensional_map_nonlin_2": [5, 7], "bidimensional_map_nonlin_3": [5, 7], "bidimensional_map_nonlin_4": [5, 7], "bidimensional_map_nonlin_5": [5, 7], "bidimensional_map_nonlin_6": [5, 7], "reservoir_gener": [5, 7], "time_funct": [5, 7], "token": 5, "co": [5, 7], "default_assumpt": [5, 7], "d": [5, 7], "div": [5, 7], "ident": [5, 7], "kroneck": [5, 7, 12], "l": [5, 7], "tanh": [5, 7], "diff_op": [5, 7], "make_op": [5, 7], "librari": 6, "machin": 6, "learn": 6, "comput": [6, 7], "toolkit": 6, "provid": 6, "easi": 6, "access": 6, "sota": 6, "methodologi": 6, "current": 6, "physic": 6, "inform": 6, "piml": 6, "neural": 6, "network": [6, 7, 8], "pinn": [6, 10], "deep": 6, "deeponet": 6, "variat": 6, "encod": [6, 10], "decod": 6, "ved": 6, "koopman": 6, "autoencod": 6, "infer": 6, "opinf": 6, "continu": [6, 7], "extend": 6, "commun": 6, "pre": [6, 7, 12], "requir": 6, "10": [6, 10, 12], "environ": 6, "see": [6, 7], "venv": 6, "html": 6, "python3": 6, "path": [6, 7, 12, 21], "virtual": 6, "n": [6, 7, 9, 12], "environment_nam": 6, "x": [6, 7, 9, 10, 12], "bin": 6, "go": 6, "home": 6, "directori": [6, 7, 21], "execut": [6, 7, 12], "r": 6, "txt": 6, "share": 6, "pythonpath": 6, "export": 6, "simulai_up_dir": 6, "For": 6, "do": 6, "e": [6, 21], "ssh": 6, "egg": 6, "upgrad": 6, "one": [6, 7, 10], "id": 6, "mpi": 6, "necessari": [6, 7], "guarante": 6, "some": 6, "distribut": 6, "mpich": 6, "openmpi": 6, "In": 6, "case": 6, "seen": 6, "below": 6, "c": [6, 7], "forg": 6, "gcc": 6, "mpi4pi": 6, "env": 6, "f": [6, 7, 10, 12], "simulai_env": 6, "yaml": 6, "exampl": [6, 7, 10], "notebook": 6, "simulai_notebook": 6, "applic": 6, "relat": [6, 7], "turbul": 6, "joao": 6, "deepturbulenceclosur": 6, "api": 6, "root": [6, 7], "unit_test": [6, 10], "test_dense_net_tf_predict": [6, 7, 8], "softwar": 6, "under": 6, "apach": 6, "2": [6, 10, 21], "p": [6, 21], "wa": [6, 21], "cookiecutt": 6, "audreyr": 6, "pypackag": 6, "referenc": 6, "author": 6, "research": 6, "titl": 6, "url": 6, "date": 6, "test_convolution_net": [7, 8], "test_deeponet": [7, 8], "test_densenetwork": [7, 8], "test_lstm_net_predict": [7, 8], "test_nomad": [7, 8], "test_optuna_redi": [7, 8], "test_pipelin": [7, 8], "centeredderiv": [7, 12], "solv": [7, 12], "collocationderiv": [7, 12], "interpolate_and_solv": [7, 12], "deriv": [7, 12], "lelederiv": [7, 12], "delta_0": [7, 12], "delta_1": [7, 12], "delta_2": [7, 12], "delta_3": [7, 12], "delta_4": [7, 12], "delta_5": [7, 12], "spacederiv": [7, 12], "timederiv": [7, 12], "fromsymbol2flambda": [7, 12], "clean_engin": [7, 12], "convert": [7, 12], "hardpositivitylimit": [7, 12], "svdthreshold": [7, 12], "marcenko_pastur_integr": [7, 12], "medianmarcenkopastur": [7, 12], "appli": [7, 12], "beta_paramet": [7, 12], "integrand": [7, 12], "lambda_funct": [7, 12], "lambda_speci": [7, 12], "timeaverag": [7, 12], "timeseriesextrem": [7, 12], "classwrapp": [7, 12], "explicitintegr": [7, 12], "step_with_forc": [7, 12], "step_with_forcings_separ": [7, 12], "functionwrapp": [7, 12], "lsoda": [7, 12], "rk4": [7, 12, 21], "gen_f1": [7, 12], "get_cross_derivative_matrix": [7, 12], "get_cross_derivative_matrix_optim": [7, 12], "get_first_derivative_matrix": [7, 12], "get_first_derivative_matrix_aux": [7, 12], "get_first_derivative_matrix_optim": [7, 12], "get_interpolation_matrix": [7, 12], "get_interpolation_matrix_optim": [7, 12], "get_laplacian_matrix": [7, 12], "get_second_derivative_matrix": [7, 12], "get_second_derivative_matrix_optim": [7, 12], "kernel": [7, 12], "kernel_dx": [7, 12], "kernel_dxx": [7, 12], "kernel_dxi": [7, 12], "kernel_laplacian": [7, 12], "gp": [7, 12], "gausslegendr": [7, 12], "generate_boundari": [7, 12], "generate_domain": [7, 12], "gaussianrandomfield": [7, 12], "generate_u": [7, 12], "random_u": [7, 12], "pytorch": [7, 15], "tf": [7, 15], "lorenz_solver_forc": [7, 21], "lotkavolterra": [7, 21], "opinfdevi": [7, 21], "compil": [7, 21], "eval_error": [7, 21], "eval_jacobian": [7, 21], "lambdifi": [7, 21], "main": [7, 21], "oscillator_solver_forc": [7, 21], "lorenzsystem": [7, 21], "jacobian": [7, 21], "nonlinearoscil": [7, 21], "class": [7, 9, 10, 11, 12, 21], "base": [7, 9, 11, 12, 21], "object": [7, 9, 10, 12, 21], "It": [7, 12], "doe": 7, "noth": [7, 12, 21], "no_post_process_op": 7, "raw": 7, "proper": 7, "format": [7, 10], "order": 7, "via": 7, "algorithm": 7, "ml": 7, "parent": [7, 12], "option": [7, 12, 21], "ndarrai": [7, 12, 21], "paramet": [7, 12], "np": [7, 12, 21], "return": [7, 10, 12], "kwarg": [7, 21], "omega_0": 7, "float": [7, 12, 21], "input": [7, 12], "tensor": 7, "defin": [7, 12], "perform": [7, 12], "call": 7, "overridden": 7, "subclass": 7, "although": 7, "recip": 7, "need": 7, "within": 7, "instanc": 7, "afterward": 7, "instead": 7, "sinc": 7, "former": 7, "take": 7, "care": 7, "regist": 7, "hook": [7, 9], "while": 7, "latter": 7, "silent": 7, "ignor": 7, "properti": 7, "dict": [7, 12], "bool": [7, 12, 21], "dataset": [7, 12], "group": 7, "input_vari": 7, "str": [7, 10, 12, 21], "target_vari": 7, "input_norm": 7, "callabl": [7, 12, 21], "target_norm": 7, "channels_first": 7, "batch_siz": [7, 12], "int": [7, 10, 12, 21], "data_interv": 7, "batch_indic": 7, "compact": 7, "fals": [7, 10, 21], "model_path": 7, "networktempl": 7, "complet": [7, 21], "restor": 7, "memori": 7, "child": 7, "torch": 7, "nn": 7, "save_dir": 7, "devic": 7, "absolut": 7, "instanti": 7, "which": [7, 12], "must": [7, 10], "locat": 7, "gpu": 7, "cpu": 7, "load": 7, "pickl": 7, "channels_last": 7, "h5py": [7, 12], "_hl": 7, "dump_path": 7, "lambda": [7, 12], "op": 7, "auxiliary_data": 7, "batchwiseextrapl": 7, "time": [7, 12], "seri": [7, 12], "gener": 7, "extrapol": 7, "fill": 7, "blank": 7, "no_prepar": 7, "recarrai": 7, "stddev": 7, "union": [7, 12], "skip_siz": 7, "full": [7, 21], "true": [7, 10, 11, 12], "over": 7, "arrai": [7, 21], "2d": 7, "graphic": 7, "dim": [7, 10], "shift": 7, "total": [7, 12], "dimens": 7, "input_nam": 7, "output_nam": 7, "config": [7, 12], "mask": 7, "dimension": 7, "two": 7, "ones": 7, "valid": 7, "valu": [7, 12], "map": 7, "shape": [7, 12], "n0": 7, "n1": 7, "nm": 7, "n_valid": 7, "k": 7, "warn": 7, "invalid": 7, "posit": 7, "expect": 7, "static": 7, "map_valid": 7, "intern": 7, "prepar": 7, "each": 7, "label": 7, "structur": 7, "default": [7, 10], "n_sampl": 7, "other_dimens": 7, "featur": [7, 12], "numpi": [7, 12], "history_s": 7, "horizon_s": 7, "full_output": 7, "augment": 7, "lstm": 7, "replic": 7, "window": 7, "horizon": 7, "singl": [7, 10], "choices_fract": 7, "shuffl": 7, "bia": 7, "scale": 7, "arg": 7, "differ": [7, 12], "between": 7, "intersect": 7, "sequenti": 7, "dim_bound": 7, "dim_gdl": 7, "boundary_dim_gdl": 7, "dim_tag": 7, "vector": 7, "point": [7, 12], "reference_interv": 7, "el": 7, "no_metr": 7, "do_clean_data": 7, "large_numb": 7, "1000000000000000": 7, "default_data": 7, "l2_norm": 7, "lyapunov_unit": 7, "tol": [7, 12], "time_scal": 7, "norm_criteria": 7, "cumulative_norm": 7, "memory_tol_perc": 7, "data_prepar": [7, 11], "axi": [7, 12], "kei": 7, "jacobian_evalu": 7, "epsilon": [7, 21], "lyapunov_expon": 7, "norm": 7, "map_dict": 7, "standard": 7, "value_max": 7, "value_min": 7, "4": 7, "unitari": 7, "unitary_symmetr": 7, "lbound": 7, "delta": [7, 21], "u": [7, 9, 21], "z": 7, "nt": 7, "nx": 7, "nz": 7, "plot": 7, "uni": 7, "timestamp": 7, "param": [7, 10, 12, 21], "final": 7, "extra_param": [7, 21], "collect": 7, "show_log": 7, "obj": [7, 10], "stage": 7, "manag": 7, "multipl": 7, "reference_data": 7, "extra_kwarg": 7, "with_project": 7, "with_reconstruct": 7, "data_gener": 7, "fit_kwarg": 7, "post_process_op": 7, "variables_list": 7, "mean_compon": [7, 11], "save_path": 7, "model_nam": 7, "scatter_op": 7, "scatter_data": 7, "h": [7, 12], "y": 7, "x_0": 7, "y_0": 7, "number_of_reservoir": 7, "sparsity_level": 7, "reservoir_dim": 7, "appliedundef": 7, "symbol": 7, "var": 7, "func": 7, "testautoencod": [8, 9], "test_convolution_2d": [8, 9], "antideriv": [8, 9], "nonlinearod": [8, 9], "testdeeponet": [8, 9], "generate_grf_data": [8, 9], "test_deeponet_scalar_scatt": [8, 9], "sin2x_forc": [8, 9], "sinx_forc": [8, 9], "solver": [8, 9, 21], "x_forc": [8, 9], "testdensenetwork": [8, 9], "test_identity_dense_network_default_named_output": [8, 9], "test_identity_dense_network_without_nam": [8, 9], "testdensenettfpredict": [8, 9], "test_dense_net_tf_predictions_lorenz": [8, 9], "test_dense_net_tf_predictions_oscil": [8, 9], "testpipelin": [8, 11], "test_data_preparer_pod_pipeline_linear_comb": [8, 11], "test_if_projection_is_equ": [8, 11], "test_mini_batch": [8, 11], "test_sampling_batch_indices_copy_mean_data_preparer_ipod_pipelin": [8, 11], "test_sampling_copy_mean_data_preparer_ipod_pipelin": [8, 11], "test_sampling_copy_mean_data_preparer_ipod_pipeline_linear_comb": [8, 11], "methodnam": [9, 11], "runtest": [9, 11], "testcas": [9, 10, 11], "fixtur": 9, "exercis": 9, "x_interv": [9, 12], "n_tot": 9, "n_featur": [9, 12], "dx": 9, "unittest": 10, "import": [10, 23], "pynomad": 10, "testnomadinterfac": 10, "def": 10, "self": 10, "clear": 10, "exist": 10, "studi": 10, "test_nomad_interfac": 10, "blackbox": 10, "evalpoint": 10, "argument": 10, "bb": 10, "size": [10, 12], "sum": 10, "get_coord": 10, "rang": 10, "setbbo": 10, "utf": 10, "fail": 10, "evalu": [10, 12, 21], "x0": 10, "71": 10, "51": 10, "lb": 10, "ub": 10, "bb_output_typ": 10, "max_bb_ev": 10, "100": 10, "upper_bound": 10, "display_degre": 10, "display_all_ev": 10, "display_stat": 10, "bbe": 10, "x_return": 10, "f_return": 10, "h_return": 10, "nb_eval": 10, "nb_iter": 10, "stopflag": 10, "print": 10, "nomad": 10, "x_sol": 10, "f_sol": 10, "h_sol": 10, "asserttru": 10, "finish": 10, "o": 10, "optuna": 10, "redis_password": 10, "getenv": 10, "redis_serv": 10, "brl": 10, "sl": 10, "cloud9": 10, "redis_port": 10, "6379": 10, "storag": 10, "redi": 10, "study_nam": 10, "ping": 10, "host": 10, "port": 10, "usernam": 10, "password": 10, "trial": 10, "suggest_float": 10, "testdistributedoptuna": 10, "create_studi": 10, "load_if_exist": 10, "delete_studi": 10, "load_studi": 10, "n_trial": 10, "best_valu": 10, "center": 12, "x_grid": 12, "colloc": 12, "grid": 12, "interpol": 12, "pair": 12, "along": 12, "chosen": 12, "identif": 12, "j": 12, "term": 12, "lele": 12, "node": 12, "number": 12, "discret": 12, "variabl": 12, "numer": 12, "engin": 12, "clean": 12, "receiv": 12, "string": 12, "mathemat": 12, "contain": 12, "definit": 12, "equival": 12, "rtype": [12, 21], "1e": 12, "beta": [12, 21], "marcenko": 12, "pastur": 12, "median": 12, "pca": 12, "data_shap": 12, "tupl": 12, "singular_valu": 12, "gamma": [12, 21], "averag": 12, "hdf5": 12, "correspond": 12, "extrem": 12, "gradient_input_data": 12, "column": 12, "class_inst": 12, "coeff": 12, "weight": 12, "right_oper": 12, "variables_state_initi": 12, "dt": [12, 21], "march": 12, "state": [12, 21], "timestep": 12, "its": 12, "forcing_st": 12, "concaten": 12, "forc": [12, 21], "being": 12, "separ": 12, "extra_dim": 12, "current_st": 12, "rk4_int": 12, "sigma2": 12, "auto": 12, "gaussian": 12, "ep": 12, "08": 12, "var_index1": 12, "var_index2": 12, "var_index": 12, "r2": 12, "kernel_typ": 12, "rx": 12, "rx2": 12, "ry": 12, "init": 12, "factor": 12, "p_order": 12, "rbf": 12, "length_scal": 12, "interp": 12, "cubic": 12, "sensor": 12, "rho": 21, "sigma": 21, "data_path": 21, "initial_st": 21, "store": 21, "result": 21, "alpha": 21, "a_hat": 21, "h_hat": 21, "error": 21, "refer": 21, "solut": 21, "associ": 21, "matrixexpr": 21, "use_t": 21, "w": 21, "alpha1": 21, "alpha2": 21, "beta1": 21, "beta2": 21}, "objects": {"": [[7, 0, 0, "-", "simulai"]], "simulai": [[7, 0, 0, "-", "abstract"], [7, 0, 0, "-", "activations"], [8, 0, 0, "-", "backup"], [7, 0, 0, "-", "batching"], [7, 0, 0, "-", "file"], [7, 0, 0, "-", "io"], [12, 0, 0, "-", "math"], [7, 0, 0, "-", "mesh"], [7, 0, 0, "-", "metrics"], [13, 0, 0, "-", "models"], [7, 0, 0, "-", "normalization"], [14, 0, 0, "-", "optimization"], [7, 0, 0, "-", "output"], [7, 0, 0, "-", "parallel"], [15, 0, 0, "-", "regression"], [18, 0, 0, "-", "residuals"], [19, 0, 0, "-", "rom"], [7, 0, 0, "-", "simulation"], [7, 0, 0, "-", "special"], [20, 0, 0, "-", "templates"], [7, 0, 0, "-", "tokens"], [21, 0, 0, "-", "utilities"], [22, 0, 0, "-", "workflows"]], "simulai.abstract": [[7, 1, 1, "", "BaseFramework"], [7, 1, 1, "", "ByPassIntegrator"], [7, 1, 1, "", "DataPreparer"], [7, 1, 1, "", "Integral"], [7, 1, 1, "", "Model"], [7, 1, 1, "", "Normalization"], [7, 1, 1, "", "ROM"], [7, 1, 1, "", "Regression"], [7, 1, 1, "", "Transformation"]], "simulai.abstract.BaseFramework": [[7, 2, 1, "", "eval"], [7, 2, 1, "", "eval_batch"], [7, 2, 1, "", "fit"], [7, 2, 1, "", "save"], [7, 2, 1, "", "test"]], "simulai.abstract.ByPassIntegrator": [[7, 3, 1, "", "name"]], "simulai.abstract.DataPreparer": [[7, 2, 1, "", "prepare_input_data"], [7, 2, 1, "", "prepare_input_structured_data"], [7, 2, 1, "", "prepare_output_data"], [7, 2, 1, "", "prepare_output_structured_data"]], "simulai.abstract.Integral": [[7, 3, 1, "", "purpose"]], "simulai.abstract.ROM": [[7, 2, 1, "", "fit"], [7, 2, 1, "", "project"], [7, 2, 1, "", "reconstruct"], [7, 2, 1, "", "transform"], [7, 2, 1, "", "transform_inv"]], "simulai.abstract.Transformation": [[7, 2, 1, "", "transform"], [7, 2, 1, "", "transform_inv"]], "simulai.activations": [[7, 1, 1, "", "Siren"], [7, 1, 1, "", "sin"]], "simulai.activations.Siren": [[7, 2, 1, "", "forward"], [7, 3, 1, "", "name"], [7, 4, 1, "", "share_to_host"], [7, 3, 1, "", "training"]], "simulai.activations.sin": [[7, 2, 1, "", "forward"], [7, 3, 1, "", "name"], [7, 3, 1, "", "training"]], "simulai.backup": [[9, 0, 0, "-", "Network"], [10, 0, 0, "-", "Optimization"], [11, 0, 0, "-", "Pipeline"]], "simulai.backup.Network": [[9, 0, 0, "-", "test_convolution_net"], [9, 0, 0, "-", "test_deeponet"], [9, 0, 0, "-", "test_densenetwork"], [9, 0, 0, "-", "test_lstm_net_prediction"]], "simulai.backup.Network.test_convolution_net": [[9, 1, 1, "", "TestAutoencoder"]], "simulai.backup.Network.test_convolution_net.TestAutoencoder": [[9, 2, 1, "", "setUp"], [9, 2, 1, "", "test_convolution_2D"]], "simulai.backup.Network.test_deeponet": [[9, 1, 1, "", "Antiderivative"], [9, 1, 1, "", "NonlinearODE"], [9, 1, 1, "", "TestDeepONet"], [9, 5, 1, "", "sin2x_forcing"], [9, 5, 1, "", "sinx_forcing"], [9, 5, 1, "", "solver"], [9, 5, 1, "", "x_forcing"]], "simulai.backup.Network.test_deeponet.TestDeepONet": [[9, 2, 1, "", "generate_GRF_data"], [9, 2, 1, "", "setUp"], [9, 2, 1, "", "test_deeponet_scalar_scattered"]], "simulai.backup.Network.test_densenetwork": [[9, 1, 1, "", "TestDenseNetwork"]], "simulai.backup.Network.test_densenetwork.TestDenseNetwork": [[9, 2, 1, "", "setUp"], [9, 2, 1, "", "test_identity_dense_network_default_named_outputs"], [9, 2, 1, "", "test_identity_dense_network_without_names"]], "simulai.backup.Network.test_lstm_net_prediction": [[9, 1, 1, "", "TestDenseNetTFPrediction"]], "simulai.backup.Network.test_lstm_net_prediction.TestDenseNetTFPrediction": [[9, 2, 1, "", "setUp"], [9, 2, 1, "", "test_dense_net_tf_predictions_lorenz"], [9, 2, 1, "", "test_dense_net_tf_predictions_oscillator"]], "simulai.backup.Optimization": [[10, 0, 0, "-", "test_nomad"], [10, 0, 0, "-", "test_optuna_redis"]], "simulai.backup.Pipeline": [[11, 0, 0, "-", "test_pipeline"]], "simulai.backup.Pipeline.test_pipeline": [[11, 1, 1, "", "TestPipeline"]], "simulai.backup.Pipeline.test_pipeline.TestPipeline": [[11, 2, 1, "", "projection"], [11, 2, 1, "", "test_data_preparer_POD_pipeline_linear_comb"], [11, 2, 1, "", "test_if_projection_is_equal"], [11, 2, 1, "", "test_mini_batching"], [11, 2, 1, "", "test_pipeline"], [11, 2, 1, "", "test_sampling_batch_indices_copy_mean_data_preparer_IPOD_pipeline"], [11, 2, 1, "", "test_sampling_copy_mean_data_preparer_IPOD_pipeline"], [11, 2, 1, "", "test_sampling_copy_mean_data_preparer_IPOD_pipeline_linear_comb"]], "simulai.batching": [[7, 1, 1, "", "BatchwiseSampler"], [7, 5, 1, "", "batchdomain_constructor"], [7, 5, 1, "", "indices_batchdomain_constructor"]], "simulai.batching.BatchwiseSampler": [[7, 2, 1, "", "input_data"], [7, 4, 1, "", "input_shape"], [7, 2, 1, "", "minmax"], [7, 2, 1, "", "target_data"]], "simulai.file": [[7, 1, 1, "", "SPFile"], [7, 5, 1, "", "load_pkl"]], "simulai.file.SPFile": [[7, 2, 1, "", "read"], [7, 2, 1, "", "write"]], "simulai.io": [[7, 1, 1, "", "BatchCopy"], [7, 1, 1, "", "BatchwiseExtrapolation"], [7, 1, 1, "", "ByPassPreparer"], [7, 1, 1, "", "GaussianNoise"], [7, 1, 1, "", "IntersectingBatches"], [7, 1, 1, "", "MakeTensor"], [7, 1, 1, "", "MapValid"], [7, 1, 1, "", "MovingWindow"], [7, 1, 1, "", "Reshaper"], [7, 1, 1, "", "Sampling"], [7, 1, 1, "", "ScalerReshaper"], [7, 1, 1, "", "SlidingWindow"]], "simulai.io.BatchCopy": [[7, 2, 1, "", "copy"]], "simulai.io.ByPassPreparer": [[7, 3, 1, "", "name"], [7, 2, 1, "", "prepare_input_data"], [7, 2, 1, "", "prepare_input_structured_data"], [7, 2, 1, "", "prepare_output_data"], [7, 2, 1, "", "prepare_output_structured_data"]], "simulai.io.GaussianNoise": [[7, 4, 1, "", "data"]], "simulai.io.IntersectingBatches": [[7, 2, 1, "", "get_indices"]], "simulai.io.MapValid": [[7, 3, 1, "", "name"], [7, 2, 1, "", "prepare_input_data"], [7, 2, 1, "", "prepare_input_structured_data"], [7, 2, 1, "", "prepare_output_data"], [7, 2, 1, "", "prepare_output_structured_data"]], "simulai.io.MovingWindow": [[7, 2, 1, "", "bypass"], [7, 2, 1, "", "get_last_item"]], "simulai.io.Reshaper": [[7, 3, 1, "", "name"], [7, 2, 1, "", "prepare_input_data"], [7, 2, 1, "", "prepare_input_structured_data"], [7, 2, 1, "", "prepare_output_data"], [7, 2, 1, "", "prepare_output_structured_data"]], "simulai.io.Sampling": [[7, 4, 1, "", "indices"], [7, 3, 1, "", "name"], [7, 2, 1, "", "prepare_input_data"], [7, 2, 1, "", "prepare_input_structured_data"]], "simulai.io.ScalerReshaper": [[7, 3, 1, "", "name"], [7, 2, 1, "", "prepare_input_data"], [7, 2, 1, "", "prepare_input_structured_data"], [7, 2, 1, "", "prepare_output_data"], [7, 2, 1, "", "prepare_output_structured_data"]], "simulai.math": [[12, 0, 0, "-", "differentiation"], [12, 0, 0, "-", "expressions"], [12, 0, 0, "-", "filtering"], [12, 0, 0, "-", "integration"], [12, 0, 0, "-", "kansas"], [12, 0, 0, "-", "products"], [12, 0, 0, "-", "progression"], [12, 0, 0, "-", "quadratures"], [12, 0, 0, "-", "spaces"]], "simulai.math.differentiation": [[12, 1, 1, "", "CenteredDerivative"], [12, 1, 1, "", "CollocationDerivative"], [12, 1, 1, "", "Derivative"], [12, 1, 1, "", "LeleDerivative"], [12, 1, 1, "", "SpaceDerivative"], [12, 1, 1, "", "TimeDerivative"]], "simulai.math.differentiation.CenteredDerivative": [[12, 2, 1, "", "solve"]], "simulai.math.differentiation.CollocationDerivative": [[12, 2, 1, "", "interpolate_and_solve"], [12, 2, 1, "", "solve"]], "simulai.math.differentiation.LeleDerivative": [[12, 2, 1, "", "delta_0"], [12, 2, 1, "", "delta_1"], [12, 2, 1, "", "delta_2"], [12, 2, 1, "", "delta_3"], [12, 2, 1, "", "delta_4"], [12, 2, 1, "", "delta_5"], [12, 2, 1, "", "solve"]], "simulai.math.expressions": [[12, 1, 1, "", "FromSymbol2FLambda"]], "simulai.math.expressions.FromSymbol2FLambda": [[12, 2, 1, "", "clean_engines"], [12, 2, 1, "", "convert"]], "simulai.math.filtering": [[12, 1, 1, "", "HardPositivityLimiting"], [12, 1, 1, "", "SVDThreshold"], [12, 1, 1, "", "TimeAveraging"], [12, 1, 1, "", "TimeSeriesExtremes"]], "simulai.math.filtering.SVDThreshold": [[12, 2, 1, "", "Marcenko_Pastur_integral"], [12, 2, 1, "", "MedianMarcenkoPastur"], [12, 2, 1, "", "apply"], [12, 2, 1, "", "beta_parameter"], [12, 2, 1, "", "exec"], [12, 2, 1, "", "integrand"], [12, 2, 1, "", "lambda_function"], [12, 2, 1, "", "lambda_special"]], "simulai.math.filtering.TimeAveraging": [[12, 2, 1, "", "exec"]], "simulai.math.filtering.TimeSeriesExtremes": [[12, 2, 1, "", "apply"]], "simulai.math.integration": [[12, 1, 1, "", "ClassWrapper"], [12, 1, 1, "", "ExplicitIntegrator"], [12, 1, 1, "", "FunctionWrapper"], [12, 1, 1, "", "LSODA"], [12, 1, 1, "", "RK4"]], "simulai.math.integration.ClassWrapper": [[12, 2, 1, "", "eval"]], "simulai.math.integration.ExplicitIntegrator": [[12, 3, 1, "", "name"], [12, 2, 1, "", "step"], [12, 2, 1, "", "step_with_forcings"], [12, 2, 1, "", "step_with_forcings_separated"]], "simulai.math.integration.LSODA": [[12, 2, 1, "", "run"]], "simulai.math.integration.RK4": [[12, 3, 1, "", "name"]], "simulai.math.kansas": [[12, 1, 1, "", "Kansas"]], "simulai.math.kansas.Kansas": [[12, 2, 1, "", "gen_f1"], [12, 2, 1, "", "get_cross_derivative_matrix"], [12, 2, 1, "", "get_cross_derivative_matrix_optimized"], [12, 2, 1, "", "get_first_derivative_matrix"], [12, 2, 1, "", "get_first_derivative_matrix_aux"], [12, 2, 1, "", "get_first_derivative_matrix_optimized"], [12, 2, 1, "", "get_interpolation_matrix"], [12, 2, 1, "", "get_interpolation_matrix_optimized"], [12, 2, 1, "", "get_laplacian_matrix"], [12, 2, 1, "", "get_second_derivative_matrix"], [12, 2, 1, "", "get_second_derivative_matrix_optimized"], [12, 2, 1, "", "kernel"], [12, 2, 1, "", "kernel_Dx"], [12, 2, 1, "", "kernel_Dxx"], [12, 2, 1, "", "kernel_Dxy"], [12, 2, 1, "", "kernel_Laplacian"]], "simulai.math.products": [[12, 5, 1, "", "kronecker"]], "simulai.math.progression": [[12, 5, 1, "", "gp"]], "simulai.math.quadratures": [[12, 1, 1, "", "GaussLegendre"]], "simulai.math.quadratures.GaussLegendre": [[12, 2, 1, "", "generate_boundaries"], [12, 2, 1, "", "generate_domain"]], "simulai.math.spaces": [[12, 1, 1, "", "GaussianRandomFields"]], "simulai.math.spaces.GaussianRandomFields": [[12, 2, 1, "", "generate_u"], [12, 2, 1, "", "random_u"]], "simulai.mesh": [[7, 1, 1, "", "StructuredMesh"]], "simulai.mesh.StructuredMesh": [[7, 2, 1, "", "internal_boundary_product"], [7, 2, 1, "", "internal_product"], [7, 2, 1, "", "map_to_boundary_element"], [7, 2, 1, "", "map_to_element"]], "simulai.metrics": [[7, 1, 1, "", "ByPass"], [7, 1, 1, "", "CumulativeNorm"], [7, 1, 1, "", "DeterminationCoeff"], [7, 1, 1, "", "FeatureWiseErrorNorm"], [7, 1, 1, "", "L2Norm"], [7, 1, 1, "", "LyapunovUnits"], [7, 1, 1, "", "MeanEvaluation"], [7, 1, 1, "", "MemorySizeEval"], [7, 1, 1, "", "MinMaxEvaluation"], [7, 1, 1, "", "PerturbationMethod"], [7, 1, 1, "", "PointwiseError"], [7, 1, 1, "", "RosensteinKantz"], [7, 1, 1, "", "SampleWiseErrorNorm"]], "simulai.metrics.ByPass": [[7, 3, 1, "", "name"]], "simulai.metrics.FeatureWiseErrorNorm": [[7, 3, 1, "", "name"]], "simulai.metrics.L2Norm": [[7, 3, 1, "", "name"]], "simulai.metrics.MemorySizeEval": [[7, 4, 1, "", "available_memory_in_GB"]], "simulai.metrics.MinMaxEvaluation": [[7, 2, 1, "", "eval_h5"]], "simulai.metrics.RosensteinKantz": [[7, 3, 1, "", "name"]], "simulai.metrics.SampleWiseErrorNorm": [[7, 3, 1, "", "name"]], "simulai.normalization": [[7, 1, 1, "", "BatchNormalization"], [7, 1, 1, "", "StandardNormalization"], [7, 1, 1, "", "UnitaryNormalization"], [7, 1, 1, "", "UnitarySymmetricalNormalization"]], "simulai.normalization.BatchNormalization": [[7, 2, 1, "", "transform"]], "simulai.normalization.StandardNormalization": [[7, 2, 1, "", "apply_descaling"], [7, 2, 1, "", "apply_rescaling"], [7, 3, 1, "", "name"], [7, 2, 1, "", "rescale"]], "simulai.normalization.UnitaryNormalization": [[7, 2, 1, "", "apply_descaling"], [7, 2, 1, "", "apply_rescaling"], [7, 2, 1, "", "apply_transform"], [7, 3, 1, "", "name"], [7, 2, 1, "", "rescale"], [7, 2, 1, "", "transform"], [7, 2, 1, "", "update_global_parameters"]], "simulai.normalization.UnitarySymmetricalNormalization": [[7, 3, 1, "", "name"], [7, 2, 1, "", "rescale"], [7, 2, 1, "", "transform"], [7, 2, 1, "", "transform_inv"]], "simulai.output": [[7, 1, 1, "", "MeshFormatterHelper"], [7, 5, 1, "", "plot_figures2D"]], "simulai.parallel": [[7, 1, 1, "", "PipelineMPI"]], "simulai.parallel.PipelineMPI": [[7, 2, 1, "", "inner_type"], [7, 2, 1, "", "run"], [7, 4, 1, "", "success"]], "simulai.regression": [[16, 0, 0, "-", "pytorch"], [17, 0, 0, "-", "tf"]], "simulai.simulation": [[7, 1, 1, "", "Pipeline"]], "simulai.simulation.Pipeline": [[7, 2, 1, "", "batchwise_pipeline_loop"], [7, 2, 1, "", "eval"], [7, 2, 1, "", "exec"], [7, 4, 1, "", "input_data"], [7, 2, 1, "", "pipeline_loop"], [7, 2, 1, "", "predict"], [7, 2, 1, "", "project_data"], [7, 2, 1, "", "reconstruct_data"], [7, 2, 1, "", "save"], [7, 2, 1, "", "test"]], "simulai.special": [[7, 1, 1, "", "Scattering"], [7, 5, 1, "", "bidimensional_map_lin"], [7, 5, 1, "", "bidimensional_map_nonlin_1"], [7, 5, 1, "", "bidimensional_map_nonlin_2"], [7, 5, 1, "", "bidimensional_map_nonlin_3"], [7, 5, 1, "", "bidimensional_map_nonlin_4"], [7, 5, 1, "", "bidimensional_map_nonlin_5"], [7, 5, 1, "", "bidimensional_map_nonlin_6"], [7, 5, 1, "", "reservoir_generator"], [7, 5, 1, "", "time_function"]], "simulai.special.Scattering": [[7, 2, 1, "", "exec"]], "simulai.tokens": [[7, 1, 1, "", "Cos"], [7, 1, 1, "", "D"], [7, 5, 1, "", "Div"], [7, 1, 1, "", "Identity"], [7, 1, 1, "", "Kronecker"], [7, 5, 1, "", "L"], [7, 1, 1, "", "Sin"], [7, 1, 1, "", "Tanh"], [7, 5, 1, "", "diff_op"], [7, 5, 1, "", "make_op"]], "simulai.tokens.Cos": [[7, 3, 1, "", "default_assumptions"], [7, 3, 1, "", "name"]], "simulai.tokens.D": [[7, 3, 1, "", "default_assumptions"], [7, 3, 1, "", "name"]], "simulai.tokens.Identity": [[7, 3, 1, "", "default_assumptions"], [7, 3, 1, "", "name"]], "simulai.tokens.Kronecker": [[7, 3, 1, "", "default_assumptions"], [7, 3, 1, "", "name"]], "simulai.tokens.Sin": [[7, 3, 1, "", "default_assumptions"], [7, 3, 1, "", "name"]], "simulai.tokens.Tanh": [[7, 3, 1, "", "default_assumptions"], [7, 3, 1, "", "name"]], "simulai.utilities": [[21, 0, 0, "-", "lorenz_solver"], [21, 0, 0, "-", "lotka_volterra_solver"], [21, 0, 0, "-", "opinf_deviation"], [21, 0, 0, "-", "oscillator_solver"], [21, 0, 0, "-", "problem_classes"]], "simulai.utilities.lorenz_solver": [[21, 5, 1, "", "lorenz_solver"], [21, 5, 1, "", "lorenz_solver_forcing"]], "simulai.utilities.lotka_volterra_solver": [[21, 1, 1, "", "LotkaVolterra"]], "simulai.utilities.lotka_volterra_solver.LotkaVolterra": [[21, 2, 1, "", "eval"], [21, 2, 1, "", "run"]], "simulai.utilities.opinf_deviation": [[21, 1, 1, "", "OpInfDeviation"]], "simulai.utilities.opinf_deviation.OpInfDeviation": [[21, 2, 1, "", "compile"], [21, 2, 1, "", "eval_error"], [21, 2, 1, "", "eval_jacobian"], [21, 2, 1, "", "lambdify"], [21, 2, 1, "", "save"]], "simulai.utilities.oscillator_solver": [[21, 5, 1, "", "main"], [21, 5, 1, "", "oscillator_solver"], [21, 5, 1, "", "oscillator_solver_forcing"]], "simulai.utilities.problem_classes": [[21, 1, 1, "", "LorenzSystem"], [21, 1, 1, "", "NonlinearOscillator"]], "simulai.utilities.problem_classes.LorenzSystem": [[21, 2, 1, "", "jacobian"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"credit": [0, 6], "develop": [0, 6], "team": 0, "contributor": 0, "contribut": 1, "type": 1, "report": 1, "bug": 1, "fix": 1, "implement": 1, "featur": 1, "write": 1, "document": [1, 3, 6], "submit": 1, "feedback": 1, "get": 1, "start": 1, "pull": 1, "request": 1, "guidelin": 1, "tip": 1, "deploi": 1, "histori": 2, "0": 2, "1": 2, "2020": 2, "01": 2, "31": 2, "welcom": 3, "simulai": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "": 3, "content": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "indic": 3, "tabl": 3, "instal": [4, 6], "stabl": 4, "releas": 4, "from": 4, "sourc": 4, "user": 6, "conda": 6, "experiment": 6, "usag": [6, 23], "unit": 6, "test": 6, "licens": 6, "contact": 6, "citat": 6, "packag": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "subpackag": [7, 8, 15], "submodul": [7, 8, 9, 10, 11, 12, 21], "abstract": 7, "modul": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "activ": 7, "batch": 7, "file": 7, "initi": 7, "io": 7, "mesh": 7, "metric": 7, "normal": 7, "output": 7, "parallel": 7, "simul": 7, "special": 7, "token": 7, "backup": [8, 9, 10, 11], "test_autoencod": 8, "network": 9, "test_convolution_net": 9, "test_deeponet": 9, "test_dense_net_tf_predict": 9, "test_densenetwork": 9, "test_lstm_net_predict": 9, "optim": [10, 14], "test_nomad": 10, "test_optuna_redi": 10, "pipelin": 11, "test_pipelin": 11, "math": 12, "differenti": 12, "express": 12, "filter": 12, "integr": 12, "kansa": 12, "product": 12, "progress": 12, "quadratur": 12, "space": 12, "model": 13, "regress": [15, 16, 17], "pytorch": 16, "tf": 17, "residu": 18, "rom": 19, "templat": 20, "util": 21, "lorenz_solv": 21, "paramet": 21, "return": 21, "lotka_volterra_solv": 21, "opinf_devi": 21, "oscillator_solv": 21, "problem_class": 21, "workflow": 22}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Credits": [[0, "credits"], [6, "credits"]], "Development Team": [[0, "development-team"]], "Contributors": [[0, "contributors"]], "Contributing": [[1, "contributing"]], "Types of Contributions": [[1, "types-of-contributions"]], "Report Bugs": [[1, "report-bugs"]], "Fix Bugs": [[1, "fix-bugs"]], "Implement Features": [[1, "implement-features"]], "Write Documentation": [[1, "write-documentation"]], "Submit Feedback": [[1, "submit-feedback"]], "Get Started!": [[1, "get-started"]], "Pull Request Guidelines": [[1, "pull-request-guidelines"]], "Tips": [[1, "tips"]], "Deploying": [[1, "deploying"]], "History": [[2, "history"]], "0.1.0 (2020-01-31)": [[2, "id1"]], "Welcome to simulai\u2019s documentation!": [[3, "welcome-to-simulai-s-documentation"]], "Contents:": [[3, null]], "Indices and tables": [[3, "indices-and-tables"]], "Installation": [[4, "installation"], [6, "installation"]], "Stable release": [[4, "stable-release"]], "From sources": [[4, "from-sources"]], "simulai": [[5, "simulai"]], "SimulAI": [[6, "simulai"]], "Developer": [[6, "developer"]], "User": [[6, "user"]], "Conda (Experimental)": [[6, "conda-experimental"]], "Usage": [[6, "usage"], [23, "usage"]], "Documentation": [[6, "documentation"]], "Unit testing (for developers)": [[6, "unit-testing-for-developers"]], "License": [[6, "license"]], "Contact": [[6, "contact"]], "Citation": [[6, "citation"]], "simulai package": [[7, "simulai-package"]], "Subpackages": [[7, "subpackages"], [8, "subpackages"], [15, "subpackages"]], "Submodules": [[7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [21, "submodules"]], "simulai.abstract module": [[7, "module-simulai.abstract"]], "simulai.activations module": [[7, "module-simulai.activations"]], "simulai.batching module": [[7, "module-simulai.batching"]], "simulai.file module": [[7, "module-simulai.file"]], "simulai.initialization module": [[7, "simulai-initialization-module"]], "simulai.io module": [[7, "module-simulai.io"]], "simulai.mesh module": [[7, "module-simulai.mesh"]], "simulai.metrics module": [[7, "module-simulai.metrics"]], "simulai.normalization module": [[7, "module-simulai.normalization"]], "simulai.output module": [[7, "module-simulai.output"]], "simulai.parallel module": [[7, "module-simulai.parallel"]], "simulai.simulation module": [[7, "module-simulai.simulation"]], "simulai.special module": [[7, "module-simulai.special"]], "simulai.tokens module": [[7, "module-simulai.tokens"]], "Module contents": [[7, "module-simulai"], [8, "module-simulai.backup"], [9, "module-simulai.backup.Network"], [10, "module-simulai.backup.Optimization"], [11, "module-simulai.backup.Pipeline"], [12, "module-simulai.math"], [13, "module-simulai.models"], [14, "module-simulai.optimization"], [15, "module-simulai.regression"], [16, "module-simulai.regression.pytorch"], [17, "module-simulai.regression.tf"], [18, "module-simulai.residuals"], [19, "module-simulai.rom"], [20, "module-simulai.templates"], [21, "module-simulai.utilities"], [22, "module-simulai.workflows"]], "simulai.backup package": [[8, "simulai-backup-package"]], "simulai.backup.test_autoencoder module": [[8, "simulai-backup-test-autoencoder-module"]], "simulai.backup.Network package": [[9, "simulai-backup-network-package"]], "simulai.backup.Network.test_convolution_net module": [[9, "module-simulai.backup.Network.test_convolution_net"]], "simulai.backup.Network.test_deeponet module": [[9, "module-simulai.backup.Network.test_deeponet"]], "simulai.backup.Network.test_dense_net_tf_prediction module": [[9, "simulai-backup-network-test-dense-net-tf-prediction-module"]], "simulai.backup.Network.test_densenetwork module": [[9, "module-simulai.backup.Network.test_densenetwork"]], "simulai.backup.Network.test_lstm_net_prediction module": [[9, "module-simulai.backup.Network.test_lstm_net_prediction"]], "simulai.backup.Optimization package": [[10, "simulai-backup-optimization-package"]], "simulai.backup.Optimization.test_nomad module": [[10, "module-simulai.backup.Optimization.test_nomad"]], "simulai.backup.Optimization.test_optuna_redis module": [[10, "module-simulai.backup.Optimization.test_optuna_redis"]], "simulai.backup.Pipeline package": [[11, "simulai-backup-pipeline-package"]], "simulai.backup.Pipeline.test_pipeline module": [[11, "module-simulai.backup.Pipeline.test_pipeline"]], "simulai.math package": [[12, "simulai-math-package"]], "simulai.math.differentiation module": [[12, "module-simulai.math.differentiation"]], "simulai.math.expressions module": [[12, "module-simulai.math.expressions"]], "simulai.math.filtering module": [[12, "module-simulai.math.filtering"]], "simulai.math.integration module": [[12, "module-simulai.math.integration"]], "simulai.math.kansas module": [[12, "module-simulai.math.kansas"]], "simulai.math.products module": [[12, "module-simulai.math.products"]], "simulai.math.progression module": [[12, "module-simulai.math.progression"]], "simulai.math.quadratures module": [[12, "module-simulai.math.quadratures"]], "simulai.math.spaces module": [[12, "module-simulai.math.spaces"]], "simulai.models package": [[13, "simulai-models-package"]], "simulai.optimization package": [[14, "simulai-optimization-package"]], "simulai.regression package": [[15, "simulai-regression-package"]], "simulai.regression.pytorch package": [[16, "simulai-regression-pytorch-package"]], "simulai.regression.tf package": [[17, "simulai-regression-tf-package"]], "simulai.residuals package": [[18, "simulai-residuals-package"]], "simulai.rom package": [[19, "simulai-rom-package"]], "simulai.templates package": [[20, "simulai-templates-package"]], "simulai.utilities package": [[21, "simulai-utilities-package"]], "simulai.utilities.lorenz_solver module": [[21, "module-simulai.utilities.lorenz_solver"]], "Parameters": [[21, "parameters"], [21, "id1"], [21, "id3"], [21, "id5"]], "Returns": [[21, "returns"], [21, "id2"], [21, "id4"], [21, "id6"]], "simulai.utilities.lotka_volterra_solver module": [[21, "module-simulai.utilities.lotka_volterra_solver"]], "simulai.utilities.opinf_deviation module": [[21, "module-simulai.utilities.opinf_deviation"]], "simulai.utilities.oscillator_solver module": [[21, "module-simulai.utilities.oscillator_solver"]], "simulai.utilities.problem_classes module": [[21, "module-simulai.utilities.problem_classes"]], "simulai.workflows package": [[22, "simulai-workflows-package"]]}, "indexentries": {"baseframework (class in simulai.abstract)": [[7, "simulai.abstract.BaseFramework"]], "batchcopy (class in simulai.io)": [[7, "simulai.io.BatchCopy"]], "batchnormalization (class in simulai.normalization)": [[7, "simulai.normalization.BatchNormalization"]], "batchwiseextrapolation (class in simulai.io)": [[7, "simulai.io.BatchwiseExtrapolation"]], "batchwisesampler (class in simulai.batching)": [[7, "simulai.batching.BatchwiseSampler"]], "bypass (class in simulai.metrics)": [[7, "simulai.metrics.ByPass"]], "bypassintegrator (class in simulai.abstract)": [[7, "simulai.abstract.ByPassIntegrator"]], "bypasspreparer (class in simulai.io)": [[7, "simulai.io.ByPassPreparer"]], "cos (class in simulai.tokens)": [[7, "simulai.tokens.Cos"]], "cumulativenorm (class in simulai.metrics)": [[7, "simulai.metrics.CumulativeNorm"]], "d (class in simulai.tokens)": [[7, "simulai.tokens.D"]], "datapreparer (class in simulai.abstract)": [[7, "simulai.abstract.DataPreparer"]], "determinationcoeff (class in simulai.metrics)": [[7, "simulai.metrics.DeterminationCoeff"]], "div() (in module simulai.tokens)": [[7, "simulai.tokens.Div"]], "featurewiseerrornorm (class in simulai.metrics)": [[7, "simulai.metrics.FeatureWiseErrorNorm"]], "gaussiannoise (class in simulai.io)": [[7, "simulai.io.GaussianNoise"]], "identity (class in simulai.tokens)": [[7, "simulai.tokens.Identity"]], "integral (class in simulai.abstract)": [[7, "simulai.abstract.Integral"]], "intersectingbatches (class in simulai.io)": [[7, "simulai.io.IntersectingBatches"]], "kronecker (class in simulai.tokens)": [[7, "simulai.tokens.Kronecker"]], "l() (in module simulai.tokens)": [[7, "simulai.tokens.L"]], "l2norm (class in simulai.metrics)": [[7, "simulai.metrics.L2Norm"]], "lyapunovunits (class in simulai.metrics)": [[7, "simulai.metrics.LyapunovUnits"]], "maketensor (class in simulai.io)": [[7, "simulai.io.MakeTensor"]], "mapvalid (class in simulai.io)": [[7, "simulai.io.MapValid"]], "meanevaluation (class in simulai.metrics)": [[7, "simulai.metrics.MeanEvaluation"]], "memorysizeeval (class in simulai.metrics)": [[7, "simulai.metrics.MemorySizeEval"]], "meshformatterhelper (class in simulai.output)": [[7, "simulai.output.MeshFormatterHelper"]], "minmaxevaluation (class in simulai.metrics)": [[7, "simulai.metrics.MinMaxEvaluation"]], "model (class in simulai.abstract)": [[7, "simulai.abstract.Model"]], "movingwindow (class in simulai.io)": [[7, "simulai.io.MovingWindow"]], "normalization (class in simulai.abstract)": [[7, "simulai.abstract.Normalization"]], "perturbationmethod (class in simulai.metrics)": [[7, "simulai.metrics.PerturbationMethod"]], "pipeline (class in simulai.simulation)": [[7, "simulai.simulation.Pipeline"]], "pipelinempi (class in simulai.parallel)": [[7, "simulai.parallel.PipelineMPI"]], "pointwiseerror (class in simulai.metrics)": [[7, "simulai.metrics.PointwiseError"]], "rom (class in simulai.abstract)": [[7, "simulai.abstract.ROM"]], "regression (class in simulai.abstract)": [[7, "simulai.abstract.Regression"]], "reshaper (class in simulai.io)": [[7, "simulai.io.Reshaper"]], "rosensteinkantz (class in simulai.metrics)": [[7, "simulai.metrics.RosensteinKantz"]], "spfile (class in simulai.file)": [[7, "simulai.file.SPFile"]], "samplewiseerrornorm (class in simulai.metrics)": [[7, "simulai.metrics.SampleWiseErrorNorm"]], "sampling (class in simulai.io)": [[7, "simulai.io.Sampling"]], "scalerreshaper (class in simulai.io)": [[7, "simulai.io.ScalerReshaper"]], "scattering (class in simulai.special)": [[7, "simulai.special.Scattering"]], "sin (class in simulai.tokens)": [[7, "simulai.tokens.Sin"]], "siren (class in simulai.activations)": [[7, "simulai.activations.Siren"]], "slidingwindow (class in simulai.io)": [[7, "simulai.io.SlidingWindow"]], "standardnormalization (class in simulai.normalization)": [[7, "simulai.normalization.StandardNormalization"]], "structuredmesh (class in simulai.mesh)": [[7, "simulai.mesh.StructuredMesh"]], "tanh (class in simulai.tokens)": [[7, "simulai.tokens.Tanh"]], "transformation (class in simulai.abstract)": [[7, "simulai.abstract.Transformation"]], "unitarynormalization (class in simulai.normalization)": [[7, "simulai.normalization.UnitaryNormalization"]], "unitarysymmetricalnormalization (class in simulai.normalization)": [[7, "simulai.normalization.UnitarySymmetricalNormalization"]], "apply_descaling() (simulai.normalization.standardnormalization method)": [[7, "simulai.normalization.StandardNormalization.apply_descaling"]], "apply_descaling() (simulai.normalization.unitarynormalization method)": [[7, "simulai.normalization.UnitaryNormalization.apply_descaling"]], "apply_rescaling() (simulai.normalization.standardnormalization method)": [[7, "simulai.normalization.StandardNormalization.apply_rescaling"]], "apply_rescaling() (simulai.normalization.unitarynormalization method)": [[7, "simulai.normalization.UnitaryNormalization.apply_rescaling"]], "apply_transform() (simulai.normalization.unitarynormalization method)": [[7, "simulai.normalization.UnitaryNormalization.apply_transform"]], "available_memory_in_gb (simulai.metrics.memorysizeeval property)": [[7, "simulai.metrics.MemorySizeEval.available_memory_in_GB"]], "batchdomain_constructor() (in module simulai.batching)": [[7, "simulai.batching.batchdomain_constructor"]], "batchwise_pipeline_loop() (simulai.simulation.pipeline method)": [[7, "simulai.simulation.Pipeline.batchwise_pipeline_loop"]], "bidimensional_map_lin() (in module simulai.special)": [[7, "simulai.special.bidimensional_map_lin"]], "bidimensional_map_nonlin_1() (in module simulai.special)": [[7, "simulai.special.bidimensional_map_nonlin_1"]], "bidimensional_map_nonlin_2() (in module simulai.special)": [[7, "simulai.special.bidimensional_map_nonlin_2"]], "bidimensional_map_nonlin_3() (in module simulai.special)": [[7, "simulai.special.bidimensional_map_nonlin_3"]], "bidimensional_map_nonlin_4() (in module simulai.special)": [[7, "simulai.special.bidimensional_map_nonlin_4"]], "bidimensional_map_nonlin_5() (in module simulai.special)": [[7, "simulai.special.bidimensional_map_nonlin_5"]], "bidimensional_map_nonlin_6() (in module simulai.special)": [[7, "simulai.special.bidimensional_map_nonlin_6"]], "bypass() (simulai.io.movingwindow method)": [[7, "simulai.io.MovingWindow.bypass"]], "copy() (simulai.io.batchcopy method)": [[7, "simulai.io.BatchCopy.copy"]], "data (simulai.io.gaussiannoise property)": [[7, "simulai.io.GaussianNoise.data"]], "default_assumptions (simulai.tokens.cos attribute)": [[7, "simulai.tokens.Cos.default_assumptions"]], "default_assumptions (simulai.tokens.d attribute)": [[7, "simulai.tokens.D.default_assumptions"]], "default_assumptions (simulai.tokens.identity attribute)": [[7, "simulai.tokens.Identity.default_assumptions"]], "default_assumptions (simulai.tokens.kronecker attribute)": [[7, "simulai.tokens.Kronecker.default_assumptions"]], "default_assumptions (simulai.tokens.sin attribute)": [[7, "simulai.tokens.Sin.default_assumptions"]], "default_assumptions (simulai.tokens.tanh attribute)": [[7, "simulai.tokens.Tanh.default_assumptions"]], "diff_op() (in module simulai.tokens)": [[7, "simulai.tokens.diff_op"]], "eval() (simulai.abstract.baseframework method)": [[7, "simulai.abstract.BaseFramework.eval"]], "eval() (simulai.simulation.pipeline method)": [[7, "simulai.simulation.Pipeline.eval"]], "eval_batch() (simulai.abstract.baseframework method)": [[7, "simulai.abstract.BaseFramework.eval_batch"]], "eval_h5() (simulai.metrics.minmaxevaluation method)": [[7, "simulai.metrics.MinMaxEvaluation.eval_h5"]], "exec() (simulai.simulation.pipeline method)": [[7, "simulai.simulation.Pipeline.exec"]], "exec() (simulai.special.scattering method)": [[7, "simulai.special.Scattering.exec"]], "fit() (simulai.abstract.baseframework method)": [[7, "simulai.abstract.BaseFramework.fit"]], "fit() (simulai.abstract.rom method)": [[7, "simulai.abstract.ROM.fit"]], "forward() (simulai.activations.siren method)": [[7, "simulai.activations.Siren.forward"]], "forward() (simulai.activations.sin method)": [[7, "simulai.activations.sin.forward"]], "get_indices() (simulai.io.intersectingbatches method)": [[7, "simulai.io.IntersectingBatches.get_indices"]], "get_last_item() (simulai.io.movingwindow method)": [[7, "simulai.io.MovingWindow.get_last_item"]], "indices (simulai.io.sampling property)": [[7, "simulai.io.Sampling.indices"]], "indices_batchdomain_constructor() (in module simulai.batching)": [[7, "simulai.batching.indices_batchdomain_constructor"]], "inner_type() (simulai.parallel.pipelinempi static method)": [[7, "simulai.parallel.PipelineMPI.inner_type"]], "input_data (simulai.simulation.pipeline property)": [[7, "simulai.simulation.Pipeline.input_data"]], "input_data() (simulai.batching.batchwisesampler method)": [[7, "simulai.batching.BatchwiseSampler.input_data"]], "input_shape (simulai.batching.batchwisesampler property)": [[7, "simulai.batching.BatchwiseSampler.input_shape"]], "internal_boundary_product() (simulai.mesh.structuredmesh method)": [[7, "simulai.mesh.StructuredMesh.internal_boundary_product"]], "internal_product() (simulai.mesh.structuredmesh method)": [[7, "simulai.mesh.StructuredMesh.internal_product"]], "load_pkl() (in module simulai.file)": [[7, "simulai.file.load_pkl"]], "make_op() (in module simulai.tokens)": [[7, "simulai.tokens.make_op"]], "map_to_boundary_element() (simulai.mesh.structuredmesh method)": [[7, "simulai.mesh.StructuredMesh.map_to_boundary_element"]], "map_to_element() (simulai.mesh.structuredmesh method)": [[7, "simulai.mesh.StructuredMesh.map_to_element"]], "minmax() (simulai.batching.batchwisesampler method)": [[7, "simulai.batching.BatchwiseSampler.minmax"]], "module": [[7, "module-simulai"], [7, "module-simulai.abstract"], [7, "module-simulai.activations"], [7, "module-simulai.batching"], [7, "module-simulai.file"], [7, "module-simulai.io"], [7, "module-simulai.mesh"], [7, "module-simulai.metrics"], [7, "module-simulai.normalization"], [7, "module-simulai.output"], [7, "module-simulai.parallel"], [7, "module-simulai.simulation"], [7, "module-simulai.special"], [7, "module-simulai.tokens"], [8, "module-simulai.backup"], [9, "module-simulai.backup.Network"], [9, "module-simulai.backup.Network.test_convolution_net"], [9, "module-simulai.backup.Network.test_deeponet"], [9, "module-simulai.backup.Network.test_densenetwork"], [9, "module-simulai.backup.Network.test_lstm_net_prediction"], [10, "module-simulai.backup.Optimization"], [10, "module-simulai.backup.Optimization.test_nomad"], [10, "module-simulai.backup.Optimization.test_optuna_redis"], [11, "module-simulai.backup.Pipeline"], [11, "module-simulai.backup.Pipeline.test_pipeline"], [12, "module-simulai.math"], [12, "module-simulai.math.differentiation"], [12, "module-simulai.math.expressions"], [12, "module-simulai.math.filtering"], [12, "module-simulai.math.integration"], [12, "module-simulai.math.kansas"], [12, "module-simulai.math.products"], [12, "module-simulai.math.progression"], [12, "module-simulai.math.quadratures"], [12, "module-simulai.math.spaces"], [13, "module-simulai.models"], [14, "module-simulai.optimization"], [15, "module-simulai.regression"], [16, "module-simulai.regression.pytorch"], [17, "module-simulai.regression.tf"], [18, "module-simulai.residuals"], [19, "module-simulai.rom"], [20, "module-simulai.templates"], [21, "module-simulai.utilities"], [21, "module-simulai.utilities.lorenz_solver"], [21, "module-simulai.utilities.lotka_volterra_solver"], [21, "module-simulai.utilities.opinf_deviation"], [21, "module-simulai.utilities.oscillator_solver"], [21, "module-simulai.utilities.problem_classes"], [22, "module-simulai.workflows"]], "name (simulai.abstract.bypassintegrator attribute)": [[7, "simulai.abstract.ByPassIntegrator.name"]], "name (simulai.activations.siren attribute)": [[7, "simulai.activations.Siren.name"]], "name (simulai.activations.sin attribute)": [[7, "simulai.activations.sin.name"]], "name (simulai.io.bypasspreparer attribute)": [[7, "simulai.io.ByPassPreparer.name"]], "name (simulai.io.mapvalid attribute)": [[7, "simulai.io.MapValid.name"]], "name (simulai.io.reshaper attribute)": [[7, "simulai.io.Reshaper.name"]], "name (simulai.io.sampling attribute)": [[7, "simulai.io.Sampling.name"]], "name (simulai.io.scalerreshaper attribute)": [[7, "simulai.io.ScalerReshaper.name"]], "name (simulai.metrics.bypass attribute)": [[7, "simulai.metrics.ByPass.name"]], "name (simulai.metrics.featurewiseerrornorm attribute)": [[7, "simulai.metrics.FeatureWiseErrorNorm.name"]], "name (simulai.metrics.l2norm attribute)": [[7, "simulai.metrics.L2Norm.name"]], "name (simulai.metrics.rosensteinkantz attribute)": [[7, "simulai.metrics.RosensteinKantz.name"]], "name (simulai.metrics.samplewiseerrornorm attribute)": [[7, "simulai.metrics.SampleWiseErrorNorm.name"]], "name (simulai.normalization.standardnormalization attribute)": [[7, "simulai.normalization.StandardNormalization.name"]], "name (simulai.normalization.unitarynormalization attribute)": [[7, "simulai.normalization.UnitaryNormalization.name"]], "name (simulai.normalization.unitarysymmetricalnormalization attribute)": [[7, "simulai.normalization.UnitarySymmetricalNormalization.name"]], "name (simulai.tokens.cos attribute)": [[7, "simulai.tokens.Cos.name"]], "name (simulai.tokens.d attribute)": [[7, "simulai.tokens.D.name"]], "name (simulai.tokens.identity attribute)": [[7, "simulai.tokens.Identity.name"]], "name (simulai.tokens.kronecker attribute)": [[7, "simulai.tokens.Kronecker.name"]], "name (simulai.tokens.sin attribute)": [[7, "simulai.tokens.Sin.name"]], "name (simulai.tokens.tanh attribute)": [[7, "simulai.tokens.Tanh.name"]], "pipeline_loop() (simulai.simulation.pipeline method)": [[7, "simulai.simulation.Pipeline.pipeline_loop"]], "plot_figures2d() (in module simulai.output)": [[7, "simulai.output.plot_figures2D"]], "predict() (simulai.simulation.pipeline method)": [[7, "simulai.simulation.Pipeline.predict"]], "prepare_input_data() (simulai.abstract.datapreparer method)": [[7, "simulai.abstract.DataPreparer.prepare_input_data"]], "prepare_input_data() (simulai.io.bypasspreparer method)": [[7, "simulai.io.ByPassPreparer.prepare_input_data"]], "prepare_input_data() (simulai.io.mapvalid method)": [[7, "simulai.io.MapValid.prepare_input_data"]], "prepare_input_data() (simulai.io.reshaper method)": [[7, "simulai.io.Reshaper.prepare_input_data"]], "prepare_input_data() (simulai.io.sampling method)": [[7, "simulai.io.Sampling.prepare_input_data"]], "prepare_input_data() (simulai.io.scalerreshaper method)": [[7, "simulai.io.ScalerReshaper.prepare_input_data"]], "prepare_input_structured_data() (simulai.abstract.datapreparer method)": [[7, "simulai.abstract.DataPreparer.prepare_input_structured_data"]], "prepare_input_structured_data() (simulai.io.bypasspreparer method)": [[7, "simulai.io.ByPassPreparer.prepare_input_structured_data"]], "prepare_input_structured_data() (simulai.io.mapvalid method)": [[7, "simulai.io.MapValid.prepare_input_structured_data"]], "prepare_input_structured_data() (simulai.io.reshaper method)": [[7, "simulai.io.Reshaper.prepare_input_structured_data"]], "prepare_input_structured_data() (simulai.io.sampling method)": [[7, "simulai.io.Sampling.prepare_input_structured_data"]], "prepare_input_structured_data() (simulai.io.scalerreshaper method)": [[7, "simulai.io.ScalerReshaper.prepare_input_structured_data"]], "prepare_output_data() (simulai.abstract.datapreparer method)": [[7, "simulai.abstract.DataPreparer.prepare_output_data"]], "prepare_output_data() (simulai.io.bypasspreparer method)": [[7, "simulai.io.ByPassPreparer.prepare_output_data"]], "prepare_output_data() (simulai.io.mapvalid method)": [[7, "simulai.io.MapValid.prepare_output_data"]], "prepare_output_data() (simulai.io.reshaper method)": [[7, "simulai.io.Reshaper.prepare_output_data"]], "prepare_output_data() (simulai.io.scalerreshaper method)": [[7, "simulai.io.ScalerReshaper.prepare_output_data"]], "prepare_output_structured_data() (simulai.abstract.datapreparer method)": [[7, "simulai.abstract.DataPreparer.prepare_output_structured_data"]], "prepare_output_structured_data() (simulai.io.bypasspreparer method)": [[7, "simulai.io.ByPassPreparer.prepare_output_structured_data"]], "prepare_output_structured_data() (simulai.io.mapvalid method)": [[7, "simulai.io.MapValid.prepare_output_structured_data"]], "prepare_output_structured_data() (simulai.io.reshaper method)": [[7, "simulai.io.Reshaper.prepare_output_structured_data"]], "prepare_output_structured_data() (simulai.io.scalerreshaper method)": [[7, "simulai.io.ScalerReshaper.prepare_output_structured_data"]], "project() (simulai.abstract.rom method)": [[7, "simulai.abstract.ROM.project"]], "project_data() (simulai.simulation.pipeline method)": [[7, "simulai.simulation.Pipeline.project_data"]], "purpose (simulai.abstract.integral attribute)": [[7, "simulai.abstract.Integral.purpose"]], "read() (simulai.file.spfile method)": [[7, "simulai.file.SPFile.read"]], "reconstruct() (simulai.abstract.rom method)": [[7, "simulai.abstract.ROM.reconstruct"]], "reconstruct_data() (simulai.simulation.pipeline method)": [[7, "simulai.simulation.Pipeline.reconstruct_data"]], "rescale() (simulai.normalization.standardnormalization method)": [[7, "simulai.normalization.StandardNormalization.rescale"]], "rescale() (simulai.normalization.unitarynormalization method)": [[7, "simulai.normalization.UnitaryNormalization.rescale"]], "rescale() (simulai.normalization.unitarysymmetricalnormalization method)": [[7, "simulai.normalization.UnitarySymmetricalNormalization.rescale"]], "reservoir_generator() (in module simulai.special)": [[7, "simulai.special.reservoir_generator"]], "run() (simulai.parallel.pipelinempi method)": [[7, "simulai.parallel.PipelineMPI.run"]], "save() (simulai.abstract.baseframework method)": [[7, "simulai.abstract.BaseFramework.save"]], "save() (simulai.simulation.pipeline method)": [[7, "simulai.simulation.Pipeline.save"]], "share_to_host (simulai.activations.siren property)": [[7, "simulai.activations.Siren.share_to_host"]], "simulai": [[7, "module-simulai"]], "simulai.abstract": [[7, "module-simulai.abstract"]], "simulai.activations": [[7, "module-simulai.activations"]], "simulai.batching": [[7, "module-simulai.batching"]], "simulai.file": [[7, "module-simulai.file"]], "simulai.io": [[7, "module-simulai.io"]], "simulai.mesh": [[7, "module-simulai.mesh"]], "simulai.metrics": [[7, "module-simulai.metrics"]], "simulai.normalization": [[7, "module-simulai.normalization"]], "simulai.output": [[7, "module-simulai.output"]], "simulai.parallel": [[7, "module-simulai.parallel"]], "simulai.simulation": [[7, "module-simulai.simulation"]], "simulai.special": [[7, "module-simulai.special"]], "simulai.tokens": [[7, "module-simulai.tokens"]], "sin (class in simulai.activations)": [[7, "simulai.activations.sin"]], "success (simulai.parallel.pipelinempi property)": [[7, "simulai.parallel.PipelineMPI.success"]], "target_data() (simulai.batching.batchwisesampler method)": [[7, "simulai.batching.BatchwiseSampler.target_data"]], "test() (simulai.abstract.baseframework method)": [[7, "simulai.abstract.BaseFramework.test"]], "test() (simulai.simulation.pipeline method)": [[7, "simulai.simulation.Pipeline.test"]], "time_function() (in module simulai.special)": [[7, "simulai.special.time_function"]], "training (simulai.activations.siren attribute)": [[7, "simulai.activations.Siren.training"]], "training (simulai.activations.sin attribute)": [[7, "simulai.activations.sin.training"]], "transform() (simulai.abstract.rom method)": [[7, "simulai.abstract.ROM.transform"]], "transform() (simulai.abstract.transformation method)": [[7, "simulai.abstract.Transformation.transform"]], "transform() (simulai.normalization.batchnormalization method)": [[7, "simulai.normalization.BatchNormalization.transform"]], "transform() (simulai.normalization.unitarynormalization method)": [[7, "simulai.normalization.UnitaryNormalization.transform"]], "transform() (simulai.normalization.unitarysymmetricalnormalization method)": [[7, "simulai.normalization.UnitarySymmetricalNormalization.transform"]], "transform_inv() (simulai.abstract.rom method)": [[7, "simulai.abstract.ROM.transform_inv"]], "transform_inv() (simulai.abstract.transformation method)": [[7, "simulai.abstract.Transformation.transform_inv"]], "transform_inv() (simulai.normalization.unitarysymmetricalnormalization method)": [[7, "simulai.normalization.UnitarySymmetricalNormalization.transform_inv"]], "update_global_parameters() (simulai.normalization.unitarynormalization method)": [[7, "simulai.normalization.UnitaryNormalization.update_global_parameters"]], "write() (simulai.file.spfile method)": [[7, "simulai.file.SPFile.write"]], "simulai.backup": [[8, "module-simulai.backup"]], "antiderivative (class in simulai.backup.network.test_deeponet)": [[9, "simulai.backup.Network.test_deeponet.Antiderivative"]], "nonlinearode (class in simulai.backup.network.test_deeponet)": [[9, "simulai.backup.Network.test_deeponet.NonlinearODE"]], "testautoencoder (class in simulai.backup.network.test_convolution_net)": [[9, "simulai.backup.Network.test_convolution_net.TestAutoencoder"]], "testdeeponet (class in simulai.backup.network.test_deeponet)": [[9, "simulai.backup.Network.test_deeponet.TestDeepONet"]], "testdensenettfprediction (class in simulai.backup.network.test_lstm_net_prediction)": [[9, "simulai.backup.Network.test_lstm_net_prediction.TestDenseNetTFPrediction"]], "testdensenetwork (class in simulai.backup.network.test_densenetwork)": [[9, "simulai.backup.Network.test_densenetwork.TestDenseNetwork"]], "generate_grf_data() (simulai.backup.network.test_deeponet.testdeeponet method)": [[9, "simulai.backup.Network.test_deeponet.TestDeepONet.generate_GRF_data"]], "setup() (simulai.backup.network.test_convolution_net.testautoencoder method)": [[9, "simulai.backup.Network.test_convolution_net.TestAutoencoder.setUp"]], "setup() (simulai.backup.network.test_deeponet.testdeeponet method)": [[9, "simulai.backup.Network.test_deeponet.TestDeepONet.setUp"]], "setup() (simulai.backup.network.test_densenetwork.testdensenetwork method)": [[9, "simulai.backup.Network.test_densenetwork.TestDenseNetwork.setUp"]], "setup() (simulai.backup.network.test_lstm_net_prediction.testdensenettfprediction method)": [[9, "simulai.backup.Network.test_lstm_net_prediction.TestDenseNetTFPrediction.setUp"]], "simulai.backup.network": [[9, "module-simulai.backup.Network"]], "simulai.backup.network.test_convolution_net": [[9, "module-simulai.backup.Network.test_convolution_net"]], "simulai.backup.network.test_deeponet": [[9, "module-simulai.backup.Network.test_deeponet"]], "simulai.backup.network.test_densenetwork": [[9, "module-simulai.backup.Network.test_densenetwork"]], "simulai.backup.network.test_lstm_net_prediction": [[9, "module-simulai.backup.Network.test_lstm_net_prediction"]], "sin2x_forcing() (in module simulai.backup.network.test_deeponet)": [[9, "simulai.backup.Network.test_deeponet.sin2x_forcing"]], "sinx_forcing() (in module simulai.backup.network.test_deeponet)": [[9, "simulai.backup.Network.test_deeponet.sinx_forcing"]], "solver() (in module simulai.backup.network.test_deeponet)": [[9, "simulai.backup.Network.test_deeponet.solver"]], "test_convolution_2d() (simulai.backup.network.test_convolution_net.testautoencoder method)": [[9, "simulai.backup.Network.test_convolution_net.TestAutoencoder.test_convolution_2D"]], "test_deeponet_scalar_scattered() (simulai.backup.network.test_deeponet.testdeeponet method)": [[9, "simulai.backup.Network.test_deeponet.TestDeepONet.test_deeponet_scalar_scattered"]], "test_dense_net_tf_predictions_lorenz() (simulai.backup.network.test_lstm_net_prediction.testdensenettfprediction method)": [[9, "simulai.backup.Network.test_lstm_net_prediction.TestDenseNetTFPrediction.test_dense_net_tf_predictions_lorenz"]], "test_dense_net_tf_predictions_oscillator() (simulai.backup.network.test_lstm_net_prediction.testdensenettfprediction method)": [[9, "simulai.backup.Network.test_lstm_net_prediction.TestDenseNetTFPrediction.test_dense_net_tf_predictions_oscillator"]], "test_identity_dense_network_default_named_outputs() (simulai.backup.network.test_densenetwork.testdensenetwork method)": [[9, "simulai.backup.Network.test_densenetwork.TestDenseNetwork.test_identity_dense_network_default_named_outputs"]], "test_identity_dense_network_without_names() (simulai.backup.network.test_densenetwork.testdensenetwork method)": [[9, "simulai.backup.Network.test_densenetwork.TestDenseNetwork.test_identity_dense_network_without_names"]], "x_forcing() (in module simulai.backup.network.test_deeponet)": [[9, "simulai.backup.Network.test_deeponet.x_forcing"]], "simulai.backup.optimization": [[10, "module-simulai.backup.Optimization"]], "simulai.backup.optimization.test_nomad": [[10, "module-simulai.backup.Optimization.test_nomad"]], "simulai.backup.optimization.test_optuna_redis": [[10, "module-simulai.backup.Optimization.test_optuna_redis"]], "testpipeline (class in simulai.backup.pipeline.test_pipeline)": [[11, "simulai.backup.Pipeline.test_pipeline.TestPipeline"]], "projection() (simulai.backup.pipeline.test_pipeline.testpipeline method)": [[11, "simulai.backup.Pipeline.test_pipeline.TestPipeline.projection"]], "simulai.backup.pipeline": [[11, "module-simulai.backup.Pipeline"]], "simulai.backup.pipeline.test_pipeline": [[11, "module-simulai.backup.Pipeline.test_pipeline"]], "test_data_preparer_pod_pipeline_linear_comb() (simulai.backup.pipeline.test_pipeline.testpipeline method)": [[11, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_data_preparer_POD_pipeline_linear_comb"]], "test_if_projection_is_equal() (simulai.backup.pipeline.test_pipeline.testpipeline method)": [[11, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_if_projection_is_equal"]], "test_mini_batching() (simulai.backup.pipeline.test_pipeline.testpipeline method)": [[11, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_mini_batching"]], "test_pipeline() (simulai.backup.pipeline.test_pipeline.testpipeline method)": [[11, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_pipeline"]], "test_sampling_batch_indices_copy_mean_data_preparer_ipod_pipeline() (simulai.backup.pipeline.test_pipeline.testpipeline method)": [[11, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_sampling_batch_indices_copy_mean_data_preparer_IPOD_pipeline"]], "test_sampling_copy_mean_data_preparer_ipod_pipeline() (simulai.backup.pipeline.test_pipeline.testpipeline method)": [[11, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_sampling_copy_mean_data_preparer_IPOD_pipeline"]], "test_sampling_copy_mean_data_preparer_ipod_pipeline_linear_comb() (simulai.backup.pipeline.test_pipeline.testpipeline method)": [[11, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_sampling_copy_mean_data_preparer_IPOD_pipeline_linear_comb"]], "centeredderivative (class in simulai.math.differentiation)": [[12, "simulai.math.differentiation.CenteredDerivative"]], "classwrapper (class in simulai.math.integration)": [[12, "simulai.math.integration.ClassWrapper"]], "collocationderivative (class in simulai.math.differentiation)": [[12, "simulai.math.differentiation.CollocationDerivative"]], "derivative (class in simulai.math.differentiation)": [[12, "simulai.math.differentiation.Derivative"]], "explicitintegrator (class in simulai.math.integration)": [[12, "simulai.math.integration.ExplicitIntegrator"]], "fromsymbol2flambda (class in simulai.math.expressions)": [[12, "simulai.math.expressions.FromSymbol2FLambda"]], "functionwrapper (class in simulai.math.integration)": [[12, "simulai.math.integration.FunctionWrapper"]], "gausslegendre (class in simulai.math.quadratures)": [[12, "simulai.math.quadratures.GaussLegendre"]], "gaussianrandomfields (class in simulai.math.spaces)": [[12, "simulai.math.spaces.GaussianRandomFields"]], "hardpositivitylimiting (class in simulai.math.filtering)": [[12, "simulai.math.filtering.HardPositivityLimiting"]], "kansas (class in simulai.math.kansas)": [[12, "simulai.math.kansas.Kansas"]], "lsoda (class in simulai.math.integration)": [[12, "simulai.math.integration.LSODA"]], "lelederivative (class in simulai.math.differentiation)": [[12, "simulai.math.differentiation.LeleDerivative"]], "marcenko_pastur_integral() (simulai.math.filtering.svdthreshold method)": [[12, "simulai.math.filtering.SVDThreshold.Marcenko_Pastur_integral"]], "medianmarcenkopastur() (simulai.math.filtering.svdthreshold method)": [[12, "simulai.math.filtering.SVDThreshold.MedianMarcenkoPastur"]], "rk4 (class in simulai.math.integration)": [[12, "simulai.math.integration.RK4"]], "svdthreshold (class in simulai.math.filtering)": [[12, "simulai.math.filtering.SVDThreshold"]], "spacederivative (class in simulai.math.differentiation)": [[12, "simulai.math.differentiation.SpaceDerivative"]], "timeaveraging (class in simulai.math.filtering)": [[12, "simulai.math.filtering.TimeAveraging"]], "timederivative (class in simulai.math.differentiation)": [[12, "simulai.math.differentiation.TimeDerivative"]], "timeseriesextremes (class in simulai.math.filtering)": [[12, "simulai.math.filtering.TimeSeriesExtremes"]], "apply() (simulai.math.filtering.svdthreshold method)": [[12, "simulai.math.filtering.SVDThreshold.apply"]], "apply() (simulai.math.filtering.timeseriesextremes method)": [[12, "simulai.math.filtering.TimeSeriesExtremes.apply"]], "beta_parameter() (simulai.math.filtering.svdthreshold method)": [[12, "simulai.math.filtering.SVDThreshold.beta_parameter"]], "clean_engines() (simulai.math.expressions.fromsymbol2flambda method)": [[12, "simulai.math.expressions.FromSymbol2FLambda.clean_engines"]], "convert() (simulai.math.expressions.fromsymbol2flambda method)": [[12, "simulai.math.expressions.FromSymbol2FLambda.convert"]], "delta_0() (simulai.math.differentiation.lelederivative method)": [[12, "simulai.math.differentiation.LeleDerivative.delta_0"]], "delta_1() (simulai.math.differentiation.lelederivative method)": [[12, "simulai.math.differentiation.LeleDerivative.delta_1"]], "delta_2() (simulai.math.differentiation.lelederivative method)": [[12, "simulai.math.differentiation.LeleDerivative.delta_2"]], "delta_3() (simulai.math.differentiation.lelederivative method)": [[12, "simulai.math.differentiation.LeleDerivative.delta_3"]], "delta_4() (simulai.math.differentiation.lelederivative method)": [[12, "simulai.math.differentiation.LeleDerivative.delta_4"]], "delta_5() (simulai.math.differentiation.lelederivative method)": [[12, "simulai.math.differentiation.LeleDerivative.delta_5"]], "eval() (simulai.math.integration.classwrapper method)": [[12, "simulai.math.integration.ClassWrapper.eval"]], "exec() (simulai.math.filtering.svdthreshold method)": [[12, "simulai.math.filtering.SVDThreshold.exec"]], "exec() (simulai.math.filtering.timeaveraging method)": [[12, "simulai.math.filtering.TimeAveraging.exec"]], "gen_f1() (simulai.math.kansas.kansas method)": [[12, "simulai.math.kansas.Kansas.gen_f1"]], "generate_boundaries() (simulai.math.quadratures.gausslegendre method)": [[12, "simulai.math.quadratures.GaussLegendre.generate_boundaries"]], "generate_domain() (simulai.math.quadratures.gausslegendre method)": [[12, "simulai.math.quadratures.GaussLegendre.generate_domain"]], "generate_u() (simulai.math.spaces.gaussianrandomfields method)": [[12, "simulai.math.spaces.GaussianRandomFields.generate_u"]], "get_cross_derivative_matrix() (simulai.math.kansas.kansas method)": [[12, "simulai.math.kansas.Kansas.get_cross_derivative_matrix"]], "get_cross_derivative_matrix_optimized() (simulai.math.kansas.kansas method)": [[12, "simulai.math.kansas.Kansas.get_cross_derivative_matrix_optimized"]], "get_first_derivative_matrix() (simulai.math.kansas.kansas method)": [[12, "simulai.math.kansas.Kansas.get_first_derivative_matrix"]], "get_first_derivative_matrix_aux() (simulai.math.kansas.kansas method)": [[12, "simulai.math.kansas.Kansas.get_first_derivative_matrix_aux"]], "get_first_derivative_matrix_optimized() (simulai.math.kansas.kansas method)": [[12, "simulai.math.kansas.Kansas.get_first_derivative_matrix_optimized"]], "get_interpolation_matrix() (simulai.math.kansas.kansas method)": [[12, "simulai.math.kansas.Kansas.get_interpolation_matrix"]], "get_interpolation_matrix_optimized() (simulai.math.kansas.kansas method)": [[12, "simulai.math.kansas.Kansas.get_interpolation_matrix_optimized"]], "get_laplacian_matrix() (simulai.math.kansas.kansas method)": [[12, "simulai.math.kansas.Kansas.get_laplacian_matrix"]], "get_second_derivative_matrix() (simulai.math.kansas.kansas method)": [[12, "simulai.math.kansas.Kansas.get_second_derivative_matrix"]], "get_second_derivative_matrix_optimized() (simulai.math.kansas.kansas method)": [[12, "simulai.math.kansas.Kansas.get_second_derivative_matrix_optimized"]], "gp() (in module simulai.math.progression)": [[12, "simulai.math.progression.gp"]], "integrand() (simulai.math.filtering.svdthreshold method)": [[12, "simulai.math.filtering.SVDThreshold.integrand"]], "interpolate_and_solve() (simulai.math.differentiation.collocationderivative method)": [[12, "simulai.math.differentiation.CollocationDerivative.interpolate_and_solve"]], "kernel() (simulai.math.kansas.kansas method)": [[12, "simulai.math.kansas.Kansas.kernel"]], "kernel_dx() (simulai.math.kansas.kansas method)": [[12, "simulai.math.kansas.Kansas.kernel_Dx"]], "kernel_dxx() (simulai.math.kansas.kansas method)": [[12, "simulai.math.kansas.Kansas.kernel_Dxx"]], "kernel_dxy() (simulai.math.kansas.kansas method)": [[12, "simulai.math.kansas.Kansas.kernel_Dxy"]], "kernel_laplacian() (simulai.math.kansas.kansas method)": [[12, "simulai.math.kansas.Kansas.kernel_Laplacian"]], "kronecker() (in module simulai.math.products)": [[12, "simulai.math.products.kronecker"]], "lambda_function() (simulai.math.filtering.svdthreshold method)": [[12, "simulai.math.filtering.SVDThreshold.lambda_function"]], "lambda_special() (simulai.math.filtering.svdthreshold method)": [[12, "simulai.math.filtering.SVDThreshold.lambda_special"]], "name (simulai.math.integration.explicitintegrator attribute)": [[12, "simulai.math.integration.ExplicitIntegrator.name"]], "name (simulai.math.integration.rk4 attribute)": [[12, "simulai.math.integration.RK4.name"]], "random_u() (simulai.math.spaces.gaussianrandomfields method)": [[12, "simulai.math.spaces.GaussianRandomFields.random_u"]], "run() (simulai.math.integration.lsoda method)": [[12, "simulai.math.integration.LSODA.run"]], "simulai.math": [[12, "module-simulai.math"]], "simulai.math.differentiation": [[12, "module-simulai.math.differentiation"]], "simulai.math.expressions": [[12, "module-simulai.math.expressions"]], "simulai.math.filtering": [[12, "module-simulai.math.filtering"]], "simulai.math.integration": [[12, "module-simulai.math.integration"]], "simulai.math.kansas": [[12, "module-simulai.math.kansas"]], "simulai.math.products": [[12, "module-simulai.math.products"]], "simulai.math.progression": [[12, "module-simulai.math.progression"]], "simulai.math.quadratures": [[12, "module-simulai.math.quadratures"]], "simulai.math.spaces": [[12, "module-simulai.math.spaces"]], "solve() (simulai.math.differentiation.centeredderivative method)": [[12, "simulai.math.differentiation.CenteredDerivative.solve"]], "solve() (simulai.math.differentiation.collocationderivative method)": [[12, "simulai.math.differentiation.CollocationDerivative.solve"]], "solve() (simulai.math.differentiation.lelederivative method)": [[12, "simulai.math.differentiation.LeleDerivative.solve"]], "step() (simulai.math.integration.explicitintegrator method)": [[12, "simulai.math.integration.ExplicitIntegrator.step"]], "step_with_forcings() (simulai.math.integration.explicitintegrator method)": [[12, "simulai.math.integration.ExplicitIntegrator.step_with_forcings"]], "step_with_forcings_separated() (simulai.math.integration.explicitintegrator method)": [[12, "simulai.math.integration.ExplicitIntegrator.step_with_forcings_separated"]], "simulai.models": [[13, "module-simulai.models"]], "simulai.optimization": [[14, "module-simulai.optimization"]], "simulai.regression": [[15, "module-simulai.regression"]], "simulai.regression.pytorch": [[16, "module-simulai.regression.pytorch"]], "simulai.regression.tf": [[17, "module-simulai.regression.tf"]], "simulai.residuals": [[18, "module-simulai.residuals"]], "simulai.rom": [[19, "module-simulai.rom"]], "simulai.templates": [[20, "module-simulai.templates"]], "lorenzsystem (class in simulai.utilities.problem_classes)": [[21, "simulai.utilities.problem_classes.LorenzSystem"]], "lotkavolterra (class in simulai.utilities.lotka_volterra_solver)": [[21, "simulai.utilities.lotka_volterra_solver.LotkaVolterra"]], "nonlinearoscillator (class in simulai.utilities.problem_classes)": [[21, "simulai.utilities.problem_classes.NonlinearOscillator"]], "opinfdeviation (class in simulai.utilities.opinf_deviation)": [[21, "simulai.utilities.opinf_deviation.OpInfDeviation"]], "compile() (simulai.utilities.opinf_deviation.opinfdeviation method)": [[21, "simulai.utilities.opinf_deviation.OpInfDeviation.compile"]], "eval() (simulai.utilities.lotka_volterra_solver.lotkavolterra method)": [[21, "simulai.utilities.lotka_volterra_solver.LotkaVolterra.eval"]], "eval_error() (simulai.utilities.opinf_deviation.opinfdeviation method)": [[21, "simulai.utilities.opinf_deviation.OpInfDeviation.eval_error"]], "eval_jacobian() (simulai.utilities.opinf_deviation.opinfdeviation method)": [[21, "simulai.utilities.opinf_deviation.OpInfDeviation.eval_jacobian"]], "jacobian() (simulai.utilities.problem_classes.lorenzsystem method)": [[21, "simulai.utilities.problem_classes.LorenzSystem.jacobian"]], "lambdify() (simulai.utilities.opinf_deviation.opinfdeviation method)": [[21, "simulai.utilities.opinf_deviation.OpInfDeviation.lambdify"]], "lorenz_solver() (in module simulai.utilities.lorenz_solver)": [[21, "simulai.utilities.lorenz_solver.lorenz_solver"]], "lorenz_solver_forcing() (in module simulai.utilities.lorenz_solver)": [[21, "simulai.utilities.lorenz_solver.lorenz_solver_forcing"]], "main() (in module simulai.utilities.oscillator_solver)": [[21, "simulai.utilities.oscillator_solver.main"]], "oscillator_solver() (in module simulai.utilities.oscillator_solver)": [[21, "simulai.utilities.oscillator_solver.oscillator_solver"]], "oscillator_solver_forcing() (in module simulai.utilities.oscillator_solver)": [[21, "simulai.utilities.oscillator_solver.oscillator_solver_forcing"]], "run() (simulai.utilities.lotka_volterra_solver.lotkavolterra method)": [[21, "simulai.utilities.lotka_volterra_solver.LotkaVolterra.run"]], "save() (simulai.utilities.opinf_deviation.opinfdeviation method)": [[21, "simulai.utilities.opinf_deviation.OpInfDeviation.save"]], "simulai.utilities": [[21, "module-simulai.utilities"]], "simulai.utilities.lorenz_solver": [[21, "module-simulai.utilities.lorenz_solver"]], "simulai.utilities.lotka_volterra_solver": [[21, "module-simulai.utilities.lotka_volterra_solver"]], "simulai.utilities.opinf_deviation": [[21, "module-simulai.utilities.opinf_deviation"]], "simulai.utilities.oscillator_solver": [[21, "module-simulai.utilities.oscillator_solver"]], "simulai.utilities.problem_classes": [[21, "module-simulai.utilities.problem_classes"]], "simulai.workflows": [[22, "module-simulai.workflows"]]}})