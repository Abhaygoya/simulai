Search.setIndex({"docnames": ["index", "legacy/authors", "legacy/contributing", "legacy/history", "legacy/index", "legacy/installation", "legacy/modules", "legacy/readme", "legacy/simulai", "legacy/simulai.backup", "legacy/simulai.backup.Network", "legacy/simulai.backup.Optimization", "legacy/simulai.backup.Pipeline", "legacy/simulai.math", "legacy/simulai.models", "legacy/simulai.optimization", "legacy/simulai.regression", "legacy/simulai.regression.pytorch", "legacy/simulai.regression.tf", "legacy/simulai.residuals", "legacy/simulai.rom", "legacy/simulai.templates", "legacy/simulai.utilities", "legacy/simulai.workflows", "legacy/usage", "modules", "simulai", "simulai.backup", "simulai.backup.Network", "simulai.backup.Optimization", "simulai.backup.Pipeline", "simulai.math", "simulai.models", "simulai.optimization", "simulai.regression", "simulai.regression.pytorch", "simulai.regression.tf", "simulai.residuals", "simulai.rom", "simulai.templates", "simulai.utilities", "simulai.workflows"], "filenames": ["index.rst", "legacy/authors.rst", "legacy/contributing.rst", "legacy/history.rst", "legacy/index.rst", "legacy/installation.rst", "legacy/modules.rst", "legacy/readme.rst", "legacy/simulai.rst", "legacy/simulai.backup.rst", "legacy/simulai.backup.Network.rst", "legacy/simulai.backup.Optimization.rst", "legacy/simulai.backup.Pipeline.rst", "legacy/simulai.math.rst", "legacy/simulai.models.rst", "legacy/simulai.optimization.rst", "legacy/simulai.regression.rst", "legacy/simulai.regression.pytorch.rst", "legacy/simulai.regression.tf.rst", "legacy/simulai.residuals.rst", "legacy/simulai.rom.rst", "legacy/simulai.templates.rst", "legacy/simulai.utilities.rst", "legacy/simulai.workflows.rst", "legacy/usage.rst", "modules.rst", "simulai.rst", "simulai.backup.rst", "simulai.backup.Network.rst", "simulai.backup.Optimization.rst", "simulai.backup.Pipeline.rst", "simulai.math.rst", "simulai.models.rst", "simulai.optimization.rst", "simulai.regression.rst", "simulai.regression.pytorch.rst", "simulai.regression.tf.rst", "simulai.residuals.rst", "simulai.rom.rst", "simulai.templates.rst", "simulai.utilities.rst", "simulai.workflows.rst"], "titles": ["Welcome to simulai\u2019s documentation!", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Welcome to simulai\u2019s documentation!", "Installation", "simulai", "&lt;no title&gt;", "simulai package", "simulai.backup package", "simulai.backup.Network package", "simulai.backup.Optimization package", "simulai.backup.Pipeline package", "simulai.math package", "simulai.models package", "simulai.optimization package", "simulai.regression package", "simulai.regression.pytorch package", "simulai.regression.tf package", "simulai.residuals package", "simulai.rom package", "simulai.templates package", "simulai.utilities package", "simulai.workflows package", "Usage", "simulai", "simulai package", "simulai.backup package", "simulai.backup.Network package", "simulai.backup.Optimization package", "simulai.backup.Pipeline package", "simulai.math package", "simulai.models package", "simulai.optimization package", "simulai.regression package", "simulai.regression.pytorch package", "simulai.regression.tf package", "simulai.residuals package", "simulai.rom package", "simulai.templates package", "simulai.utilities package", "simulai.workflows package"], "terms": {"packag": [0, 4, 6, 25], "index": [0, 4, 13, 31], "modul": [0, 4, 6, 25], "search": [0, 4], "page": [0, 4], "instal": 4, "stabl": 4, "releas": 4, "from": [4, 11, 13, 29, 31], "sourc": [4, 8, 10, 12, 13, 22, 26, 28, 30, 31, 40], "usag": 4, "To": [5, 24], "simulai": [5, 24], "run": [5, 6, 8, 13, 22, 25, 26, 31, 40], "thi": [5, 8, 11, 26, 29], "command": 5, "your": 5, "termin": 5, "pip": 5, "i": [5, 8, 11, 13, 26, 29, 31], "prefer": 5, "method": [5, 10, 28], "alwai": 5, "most": 5, "recent": 5, "If": 5, "you": 5, "don": 5, "t": [5, 8, 13, 22, 26, 31, 40], "have": 5, "python": [5, 8, 26], "guid": 5, "can": 5, "through": 5, "process": [5, 8, 11, 26, 29], "The": [5, 8, 11, 13, 26, 29, 31], "download": 5, "github": 5, "repo": 5, "either": 5, "clone": 5, "public": 5, "repositori": 5, "git": 5, "com": [5, 11, 29], "ltizzei": 5, "Or": 5, "tarbal": 5, "curl": 5, "ojl": 5, "http": 5, "master": 5, "onc": 5, "copi": [5, 6, 8, 25, 26], "setup": [5, 9, 10, 11, 27, 28, 29], "py": [5, 8, 26], "subpackag": [6, 25], "backup": [6, 8, 25, 26], "submodul": [6, 25], "test_autoencod": [6, 8, 25, 26], "content": [6, 25], "math": [6, 8, 25, 26], "differenti": [6, 8, 25, 26], "express": [6, 8, 22, 25, 26, 40], "filter": [6, 8, 25, 26], "integr": [6, 8, 25, 26], "kansa": [6, 8, 25, 26], "product": [6, 8, 25, 26], "progress": [6, 8, 25, 26], "quadratur": [6, 8, 25, 26], "space": [6, 8, 25, 26], "model": [6, 8, 22, 25, 26, 40], "optim": [6, 8, 9, 25, 26, 27], "regress": [6, 8, 25, 26], "residu": [6, 8, 25, 26], "rom": [6, 8, 13, 25, 26, 31], "templat": [6, 8, 25, 26], "util": [6, 8, 25, 26], "lorenz_solv": [6, 8, 25, 26], "lotka_volterra_solv": [6, 8, 25, 26], "opinf_devi": [6, 8, 25, 26], "oscillator_solv": [6, 8, 25, 26], "problem_class": [6, 8, 25, 26], "workflow": [6, 8, 25, 26], "abstract": [6, 25], "baseframework": [6, 8, 25, 26], "eval": [6, 8, 13, 22, 25, 26, 31, 40], "eval_batch": [6, 8, 25, 26], "fit": [6, 8, 25, 26], "save": [6, 8, 13, 22, 25, 26, 31, 40], "test": [6, 8, 10, 25, 26, 28], "bypassintegr": [6, 8, 25, 26], "name": [6, 8, 13, 22, 25, 26, 31, 40], "dataprepar": [6, 8, 25, 26], "prepare_input_data": [6, 8, 25, 26], "prepare_input_structured_data": [6, 8, 25, 26], "prepare_output_data": [6, 8, 25, 26], "prepare_output_structured_data": [6, 8, 25, 26], "dataset": [6, 8, 13, 25, 26, 31], "purpos": [6, 8, 13, 25, 26, 31], "normal": [6, 25], "project": [6, 8, 9, 12, 24, 25, 26, 27, 30], "reconstruct": [6, 8, 25, 26], "transform": [6, 8, 25, 26], "transform_inv": [6, 8, 25, 26], "activ": [6, 25], "siren": [6, 8, 25, 26], "forward": [6, 8, 25, 26], "share_to_host": [6, 8, 25, 26], "train": [6, 8, 25, 26], "sin": [6, 8, 25, 26], "batch": [6, 25], "batchwisesampl": [6, 8, 25, 26], "input_data": [6, 8, 13, 25, 26, 31], "input_shap": [6, 8, 25, 26], "minmax": [6, 8, 25, 26], "target_data": [6, 8, 25, 26], "batchdomain_constructor": [6, 8, 25, 26], "indices_batchdomain_constructor": [6, 8, 25, 26], "file": [6, 13, 25, 31], "spfile": [6, 8, 25, 26], "read": [6, 8, 25, 26], "write": [6, 8, 25, 26], "load_pkl": [6, 8, 25, 26], "initi": [6, 13, 25, 31], "io": [6, 25], "batchcopi": [6, 8, 25, 26], "batchwiseextrapol": [6, 8, 25, 26], "bypassprepar": [6, 8, 25, 26], "gaussiannois": [6, 8, 25, 26], "size": [6, 8, 11, 13, 25, 26, 29, 31], "intersectingbatch": [6, 8, 25, 26], "get_indic": [6, 8, 25, 26], "maketensor": [6, 8, 25, 26], "mapvalid": [6, 8, 25, 26], "movingwindow": [6, 8, 25, 26], "bypass": [6, 8, 25, 26], "get_last_item": [6, 8, 25, 26], "reshap": [6, 8, 25, 26], "sampl": [6, 8, 25, 26], "indic": [6, 8, 13, 25, 26, 31], "scalerreshap": [6, 8, 25, 26], "slidingwindow": [6, 8, 25, 26], "mesh": [6, 13, 25, 31], "structuredmesh": [6, 8, 25, 26], "internal_boundary_product": [6, 8, 25, 26], "internal_product": [6, 8, 25, 26], "map_to_boundary_el": [6, 8, 25, 26], "map_to_el": [6, 8, 25, 26], "metric": [6, 25], "cumulativenorm": [6, 8, 25, 26], "determinationcoeff": [6, 8, 25, 26], "featurewiseerrornorm": [6, 8, 25, 26], "l2norm": [6, 8, 25, 26], "lyapunovunit": [6, 8, 25, 26], "meanevalu": [6, 8, 25, 26], "memorysizeev": [6, 8, 25, 26], "available_memory_in_gb": [6, 8, 25, 26], "minmaxevalu": [6, 8, 25, 26], "eval_h5": [6, 8, 25, 26], "perturbationmethod": [6, 8, 25, 26], "pointwiseerror": [6, 8, 25, 26], "rosensteinkantz": [6, 8, 25, 26], "samplewiseerrornorm": [6, 8, 25, 26], "batchnorm": [6, 8, 25, 26], "standardnorm": [6, 8, 25, 26], "apply_desc": [6, 8, 25, 26], "apply_resc": [6, 8, 25, 26], "rescal": [6, 8, 25, 26], "unitarynorm": [6, 8, 25, 26], "apply_transform": [6, 8, 25, 26], "update_global_paramet": [6, 8, 25, 26], "unitarysymmetricalnorm": [6, 8, 25, 26], "output": [6, 11, 13, 25, 29, 31], "meshformatterhelp": [6, 8, 25, 26], "plot_figures2d": [6, 8, 25, 26], "parallel": [6, 25], "pipelinempi": [6, 8, 25, 26], "inner_typ": [6, 8, 25, 26], "success": [6, 8, 11, 25, 26, 29], "simul": [6, 22, 25, 40], "pipelin": [6, 8, 9, 25, 26, 27], "batchwise_pipeline_loop": [6, 8, 25, 26], "exec": [6, 8, 13, 25, 26, 31], "pipeline_loop": [6, 8, 25, 26], "predict": [6, 8, 25, 26], "project_data": [6, 8, 25, 26], "reconstruct_data": [6, 8, 25, 26], "special": [6, 13, 25, 31], "scatter": [6, 8, 25, 26], "bidimensional_map_lin": [6, 8, 25, 26], "bidimensional_map_nonlin_1": [6, 8, 25, 26], "bidimensional_map_nonlin_2": [6, 8, 25, 26], "bidimensional_map_nonlin_3": [6, 8, 25, 26], "bidimensional_map_nonlin_4": [6, 8, 25, 26], "bidimensional_map_nonlin_5": [6, 8, 25, 26], "bidimensional_map_nonlin_6": [6, 8, 25, 26], "reservoir_gener": [6, 8, 25, 26], "time_funct": [6, 8, 25, 26], "token": [6, 25], "co": [6, 8, 25, 26], "default_assumpt": [6, 8, 25, 26], "d": [6, 8, 25, 26], "div": [6, 8, 25, 26], "ident": [6, 8, 25, 26], "kroneck": [6, 8, 13, 25, 26, 31], "l": [6, 8, 25, 26], "tanh": [6, 8, 25, 26], "diff_op": [6, 8, 25, 26], "make_op": [6, 8, 25, 26], "network": [8, 9, 26, 27], "test_convolution_net": [8, 9, 26, 27], "test_deeponet": [8, 9, 26, 27], "test_dense_net_tf_predict": [8, 9, 26, 27], "test_densenetwork": [8, 9, 26, 27], "test_lstm_net_predict": [8, 9, 26, 27], "test_nomad": [8, 9, 26, 27], "test_optuna_redi": [8, 9, 26, 27], "test_pipelin": [8, 9, 26, 27], "centeredderiv": [8, 13, 26, 31], "solv": [8, 13, 26, 31], "collocationderiv": [8, 13, 26, 31], "interpolate_and_solv": [8, 13, 26, 31], "deriv": [8, 13, 26, 31], "lelederiv": [8, 13, 26, 31], "delta_0": [8, 13, 26, 31], "delta_1": [8, 13, 26, 31], "delta_2": [8, 13, 26, 31], "delta_3": [8, 13, 26, 31], "delta_4": [8, 13, 26, 31], "delta_5": [8, 13, 26, 31], "spacederiv": [8, 13, 26, 31], "timederiv": [8, 13, 26, 31], "fromsymbol2flambda": [8, 13, 26, 31], "clean_engin": [8, 13, 26, 31], "convert": [8, 13, 26, 31], "hardpositivitylimit": [8, 13, 26, 31], "svdthreshold": [8, 13, 26, 31], "marcenko_pastur_integr": [8, 13, 26, 31], "medianmarcenkopastur": [8, 13, 26, 31], "appli": [8, 13, 26, 31], "beta_paramet": [8, 13, 26, 31], "integrand": [8, 13, 26, 31], "lambda_funct": [8, 13, 26, 31], "lambda_speci": [8, 13, 26, 31], "timeaverag": [8, 13, 26, 31], "timeseriesextrem": [8, 13, 26, 31], "classwrapp": [8, 13, 26, 31], "explicitintegr": [8, 13, 26, 31], "step": [8, 13, 26, 31], "step_with_forc": [8, 13, 26, 31], "step_with_forcings_separ": [8, 13, 26, 31], "functionwrapp": [8, 13, 26, 31], "lsoda": [8, 13, 26, 31], "rk4": [8, 13, 22, 26, 31, 40], "gen_f1": [8, 13, 26, 31], "get_cross_derivative_matrix": [8, 13, 26, 31], "get_cross_derivative_matrix_optim": [8, 13, 26, 31], "get_first_derivative_matrix": [8, 13, 26, 31], "get_first_derivative_matrix_aux": [8, 13, 26, 31], "get_first_derivative_matrix_optim": [8, 13, 26, 31], "get_interpolation_matrix": [8, 13, 26, 31], "get_interpolation_matrix_optim": [8, 13, 26, 31], "get_laplacian_matrix": [8, 13, 26, 31], "get_second_derivative_matrix": [8, 13, 26, 31], "get_second_derivative_matrix_optim": [8, 13, 26, 31], "kernel": [8, 13, 26, 31], "kernel_dx": [8, 13, 26, 31], "kernel_dxx": [8, 13, 26, 31], "kernel_dxi": [8, 13, 26, 31], "kernel_laplacian": [8, 13, 26, 31], "gp": [8, 13, 26, 31], "gausslegendr": [8, 13, 26, 31], "generate_boundari": [8, 13, 26, 31], "generate_domain": [8, 13, 26, 31], "gaussianrandomfield": [8, 13, 26, 31], "generate_u": [8, 13, 26, 31], "random_u": [8, 13, 26, 31], "pytorch": [8, 16, 26, 34], "tf": [8, 16, 26, 34], "lorenz_solver_forc": [8, 22, 26, 40], "lotkavolterra": [8, 22, 26, 40], "opinfdevi": [8, 22, 26, 40], "compil": [8, 22, 26, 40], "eval_error": [8, 22, 26, 40], "eval_jacobian": [8, 22, 26, 40], "lambdifi": [8, 22, 26, 40], "main": [8, 22, 26, 40], "oscillator_solver_forc": [8, 22, 26, 40], "lorenzsystem": [8, 22, 26, 40], "jacobian": [8, 22, 26, 40], "nonlinearoscil": [8, 22, 26, 40], "class": [8, 10, 11, 12, 13, 22, 26, 28, 29, 30, 31, 40], "base": [8, 10, 12, 13, 22, 26, 28, 30, 31, 40], "object": [8, 10, 11, 13, 22, 26, 28, 29, 31, 40], "It": [8, 13, 26, 31], "doe": [8, 26], "noth": [8, 13, 22, 26, 31, 40], "no_post_process_op": [8, 26], "ar": [8, 26], "us": [8, 13, 24, 26, 31], "raw": [8, 26], "data": [8, 13, 26, 31], "proper": [8, 26], "format": [8, 11, 26, 29], "order": [8, 26], "via": [8, 26], "other": [8, 26], "algorithm": [8, 26], "ml": [8, 26], "parent": [8, 13, 26, 31], "option": [8, 13, 22, 26, 31, 40], "ndarrai": [8, 13, 22, 26, 31, 40], "none": [8, 10, 11, 12, 13, 22, 26, 28, 29, 30, 31, 40], "paramet": [8, 13, 26, 31], "np": [8, 13, 22, 26, 31, 40], "return": [8, 11, 13, 26, 29, 31], "kwarg": [8, 22, 26, 40], "omega_0": [8, 26], "float": [8, 13, 22, 26, 31, 40], "c": [8, 26], "input": [8, 13, 26, 31], "tensor": [8, 26], "defin": [8, 13, 26, 31], "comput": [8, 26], "perform": [8, 13, 26, 31], "everi": [8, 26], "call": [8, 26], "should": [8, 26], "overridden": [8, 26], "all": [8, 13, 26, 31], "subclass": [8, 26], "although": [8, 26], "recip": [8, 26], "pass": [8, 11, 26, 29], "need": [8, 26], "within": [8, 26], "function": [8, 10, 11, 13, 26, 28, 29, 31], "one": [8, 11, 26, 29], "instanc": [8, 26], "afterward": [8, 26], "instead": [8, 26], "sinc": [8, 26], "former": [8, 26], "take": [8, 26], "care": [8, 26], "regist": [8, 26], "hook": [8, 10, 26, 28], "while": [8, 26], "latter": [8, 26], "silent": [8, 26], "ignor": [8, 26], "them": [8, 26], "properti": [8, 26], "dict": [8, 13, 26, 31], "bool": [8, 13, 22, 26, 31, 40], "group": [8, 26], "input_vari": [8, 26], "list": [8, 13, 22, 26, 31, 40], "str": [8, 11, 13, 22, 26, 29, 31, 40], "target_vari": [8, 26], "input_norm": [8, 26], "callabl": [8, 13, 22, 26, 31, 40], "target_norm": [8, 26], "channels_first": [8, 26], "batch_siz": [8, 13, 26, 31], "int": [8, 11, 13, 22, 26, 29, 31, 40], "data_interv": [8, 26], "batch_indic": [8, 26], "compact": [8, 26], "fals": [8, 11, 22, 26, 29, 40], "model_path": [8, 26], "networktempl": [8, 26], "complet": [8, 22, 26, 40], "path": [8, 13, 22, 26, 31, 40], "restor": [8, 26], "memori": [8, 26], "type": [8, 13, 22, 26, 31, 40], "child": [8, 26], "torch": [8, 26], "nn": [8, 26], "save_dir": [8, 26], "devic": [8, 26], "absolut": [8, 26], "directori": [8, 22, 26, 40], "instanti": [8, 26], "version": [8, 26], "which": [8, 13, 26, 31], "must": [8, 11, 26, 29], "locat": [8, 26], "gpu": [8, 26], "cpu": [8, 26], "load": [8, 26], "pickl": [8, 26], "possibl": [8, 26], "channels_last": [8, 26], "h5py": [8, 13, 26, 31], "_hl": [8, 26], "dump_path": [8, 26], "lambda": [8, 13, 26, 31], "op": [8, 26], "auxiliary_data": [8, 26], "batchwiseextrapl": [8, 26], "time": [8, 13, 26, 31], "seri": [8, 13, 26, 31], "gener": [8, 26], "continu": [8, 26], "extrapol": [8, 26], "fill": [8, 26], "blank": [8, 26], "no_prepar": [8, 26], "recarrai": [8, 26], "stddev": [8, 26], "0": [8, 11, 13, 22, 26, 29, 31, 40], "01": [8, 26], "union": [8, 13, 26, 31], "skip_siz": [8, 26], "1": [8, 11, 13, 22, 26, 29, 31, 40], "full": [8, 22, 26, 40], "true": [8, 11, 12, 13, 26, 29, 30, 31], "over": [8, 26], "arrai": [8, 22, 26, 40], "2d": [8, 26], "see": [8, 26], "graphic": [8, 26], "exampl": [8, 11, 26, 29], "n": [8, 10, 13, 26, 28, 31], "dim": [8, 11, 26, 29], "get": [8, 13, 26, 31], "just": [8, 26], "shift": [8, 26], "total": [8, 13, 26, 31], "dimens": [8, 26], "input_nam": [8, 26], "output_nam": [8, 26], "config": [8, 13, 26, 31], "mask": [8, 26], "dimension": [8, 26], "two": [8, 26], "ones": [8, 26], "valid": [8, 26], "valu": [8, 13, 26, 31], "map": [8, 26], "oper": [8, 13, 26, 31], "f": [8, 11, 13, 26, 29, 31], "shape": [8, 13, 26, 31], "n0": [8, 26], "n1": [8, 26], "nm": [8, 26], "n_valid": [8, 26], "k": [8, 26], "warn": [8, 26], "invalid": [8, 26], "posit": [8, 26], "expect": [8, 26], "static": [8, 26], "relat": [8, 26], "map_valid": [8, 26], "intern": [8, 26], "prepar": [8, 26], "execut": [8, 13, 26, 31], "each": [8, 26], "label": [8, 26], "structur": [8, 26], "default": [8, 11, 26, 29], "n_sampl": [8, 26], "other_dimens": [8, 26], "featur": [8, 13, 26, 31], "numpi": [8, 13, 26, 31], "history_s": [8, 26], "horizon_s": [8, 26], "full_output": [8, 26], "creat": [8, 11, 22, 26, 29, 40], "necessari": [8, 26], "augment": [8, 26], "lstm": [8, 26], "replic": [8, 26], "window": [8, 26], "histori": [8, 26], "horizon": [8, 26], "singl": [8, 11, 26, 29], "choices_fract": [8, 26], "shuffl": [8, 26], "bia": [8, 26], "scale": [8, 26], "arg": [8, 26], "differ": [8, 13, 26, 31], "between": [8, 26], "here": [8, 26], "intersect": [8, 26], "sequenti": [8, 26], "an": [8, 26], "dim_bound": [8, 26], "dim_gdl": [8, 26], "boundary_dim_gdl": [8, 26], "dim_tag": [8, 26], "vector": [8, 26], "point": [8, 13, 26, 31], "reference_interv": [8, 26], "el": [8, 26], "tag": [8, 26], "no_metr": [8, 26], "do_clean_data": [8, 26], "large_numb": [8, 26], "1000000000000000": [8, 26], "default_data": [8, 26], "l2_norm": [8, 26], "lyapunov_unit": [8, 26], "tol": [8, 13, 26, 31], "time_scal": [8, 26], "norm_criteria": [8, 26], "cumulative_norm": [8, 26], "memory_tol_perc": [8, 26], "5": [8, 26], "data_prepar": [8, 12, 26, 30], "axi": [8, 13, 26, 31], "kei": [8, 26], "jacobian_evalu": [8, 26], "epsilon": [8, 22, 26, 40], "lyapunov_expon": [8, 26], "norm": [8, 26], "map_dict": [8, 26], "standard": [8, 26], "value_max": [8, 26], "value_min": [8, 26], "4": [8, 26], "unitari": [8, 26], "unitary_symmetr": [8, 26], "lbound": [8, 26], "delta": [8, 22, 26, 40], "u": [8, 10, 22, 26, 28, 40], "x": [8, 10, 11, 13, 26, 28, 29, 31], "z": [8, 26], "nt": [8, 26], "nx": [8, 26], "nz": [8, 26], "plot": [8, 26], "uni": [8, 26], "timestamp": [8, 26], "param": [8, 11, 13, 22, 26, 29, 31, 40], "final": [8, 26], "extra_param": [8, 22, 26, 40], "collect": [8, 26], "show_log": [8, 26], "obj": [8, 11, 26, 29], "stage": [8, 26], "manag": [8, 26], "multipl": [8, 26], "pre": [8, 13, 26, 31], "reference_data": [8, 26], "extra_kwarg": [8, 26], "with_project": [8, 26], "with_reconstruct": [8, 26], "data_gener": [8, 26], "fit_kwarg": [8, 26], "post_process_op": [8, 26], "variables_list": [8, 26], "mean_compon": [8, 12, 26, 30], "save_path": [8, 26], "model_nam": [8, 26], "root": [8, 26], "scatter_op": [8, 26], "scatter_data": [8, 26], "h": [8, 13, 26, 31], "y": [8, 26], "x_0": [8, 26], "y_0": [8, 26], "number_of_reservoir": [8, 26], "sparsity_level": [8, 26], "reservoir_dim": [8, 26], "appliedundef": [8, 26], "symbol": [8, 26], "var": [8, 26], "func": [8, 26], "testautoencod": [9, 10, 27, 28], "test_convolution_2d": [9, 10, 27, 28], "antideriv": [9, 10, 27, 28], "nonlinearod": [9, 10, 27, 28], "testdeeponet": [9, 10, 27, 28], "generate_grf_data": [9, 10, 27, 28], "test_deeponet_scalar_scatt": [9, 10, 27, 28], "sin2x_forc": [9, 10, 27, 28], "sinx_forc": [9, 10, 27, 28], "solver": [9, 10, 22, 27, 28, 40], "x_forc": [9, 10, 27, 28], "testdensenetwork": [9, 10, 27, 28], "test_identity_dense_network_default_named_output": [9, 10, 27, 28], "test_identity_dense_network_without_nam": [9, 10, 27, 28], "testdensenettfpredict": [9, 10, 27, 28], "test_dense_net_tf_predictions_lorenz": [9, 10, 27, 28], "test_dense_net_tf_predictions_oscil": [9, 10, 27, 28], "testpipelin": [9, 12, 27, 30], "test_data_preparer_pod_pipeline_linear_comb": [9, 12, 27, 30], "test_if_projection_is_equ": [9, 12, 27, 30], "test_mini_batch": [9, 12, 27, 30], "test_sampling_batch_indices_copy_mean_data_preparer_ipod_pipelin": [9, 12, 27, 30], "test_sampling_copy_mean_data_preparer_ipod_pipelin": [9, 12, 27, 30], "test_sampling_copy_mean_data_preparer_ipod_pipeline_linear_comb": [9, 12, 27, 30], "methodnam": [10, 12, 28, 30], "runtest": [10, 12, 28, 30], "testcas": [10, 11, 12, 28, 29, 30], "set": [10, 28], "up": [10, 13, 28, 31], "fixtur": [10, 28], "befor": [10, 28], "exercis": [10, 28], "x_interv": [10, 13, 28, 31], "n_tot": [10, 28], "n_featur": [10, 13, 28, 31], "dx": [10, 28], "unittest": [11, 29], "import": [11, 24, 29], "pynomad": [11, 29], "testnomadinterfac": [11, 29], "def": [11, 29], "self": [11, 29], "clear": [11, 29], "exist": [11, 29], "studi": [11, 29], "new": [11, 29], "test_nomad_interfac": [11, 29], "blackbox": [11, 29], "put": [11, 29], "evalpoint": [11, 29], "argument": [11, 29], "bb": [11, 29], "sum": [11, 29], "get_coord": [11, 29], "2": [11, 22, 29, 40], "rang": [11, 29], "setbbo": [11, 29], "encod": [11, 29], "utf": [11, 29], "8": [11, 29], "fail": [11, 29], "evalu": [11, 13, 22, 29, 31, 40], "x0": [11, 29], "71": [11, 29], "51": [11, 29], "lb": [11, 29], "ub": [11, 29], "bb_output_typ": [11, 29], "max_bb_ev": [11, 29], "100": [11, 29], "upper_bound": [11, 29], "display_degre": [11, 29], "display_all_ev": [11, 29], "display_stat": [11, 29], "bbe": [11, 29], "x_return": [11, 29], "f_return": [11, 29], "h_return": [11, 29], "nb_eval": [11, 29], "nb_iter": [11, 29], "stopflag": [11, 29], "print": [11, 29], "nomad": [11, 29], "x_sol": [11, 29], "f_sol": [11, 29], "h_sol": [11, 29], "asserttru": [11, 29], "finish": [11, 29], "o": [11, 29], "optuna": [11, 29], "redis_password": [11, 29], "getenv": [11, 29], "redis_serv": [11, 29], "brl": [11, 29], "pinn": [11, 29], "sl": [11, 29], "cloud9": [11, 29], "ibm": [11, 29], "redis_port": [11, 29], "6379": [11, 29], "storag": [11, 29], "redi": [11, 29], "study_nam": [11, 29], "unit_test": [11, 29], "ping": [11, 29], "host": [11, 29], "port": [11, 29], "usernam": [11, 29], "password": [11, 29], "trial": [11, 29], "suggest_float": [11, 29], "10": [11, 13, 29, 31], "testdistributedoptuna": [11, 29], "create_studi": [11, 29], "load_if_exist": [11, 29], "delete_studi": [11, 29], "load_studi": [11, 29], "n_trial": [11, 29], "best_valu": [11, 29], "center": [13, 31], "x_grid": [13, 31], "colloc": [13, 31], "grid": [13, 31], "interpol": [13, 31], "pair": [13, 31], "along": [13, 31], "chosen": [13, 31], "identif": [13, 31], "j": [13, 31], "term": [13, 31], "lele": [13, 31], "": [13, 31], "node": [13, 31], "number": [13, 31], "discret": [13, 31], "variabl": [13, 31], "numer": [13, 31], "engin": [13, 31], "clean": [13, 31], "receiv": [13, 31], "string": [13, 31], "mathemat": [13, 31], "contain": [13, 31], "definit": [13, 31], "equival": [13, 31], "rtype": [13, 22, 31, 40], "1e": [13, 31], "beta": [13, 22, 31, 40], "marcenko": [13, 31], "pastur": [13, 31], "median": [13, 31], "pca": [13, 31], "data_shap": [13, 31], "tupl": [13, 31], "singular_valu": [13, 31], "gamma": [13, 22, 31, 40], "averag": [13, 31], "hdf5": [13, 31], "origin": [13, 31], "correspond": [13, 31], "extrem": [13, 31], "gradient_input_data": [13, 31], "column": [13, 31], "class_inst": [13, 31], "coeff": [13, 31], "weight": [13, 31], "right_oper": [13, 31], "variables_state_initi": [13, 31], "dt": [13, 22, 31, 40], "march": [13, 31], "state": [13, 22, 31, 40], "timestep": [13, 31], "its": [13, 31], "forcing_st": [13, 31], "concaten": [13, 31], "forc": [13, 22, 31, 40], "being": [13, 31], "separ": [13, 31], "extra_dim": [13, 31], "current_st": [13, 31], "rk4_int": [13, 31], "sigma2": [13, 31], "auto": [13, 31], "gaussian": [13, 31], "ep": [13, 31], "08": [13, 31], "var_index1": [13, 31], "var_index2": [13, 31], "var_index": [13, 31], "r2": [13, 31], "kernel_typ": [13, 31], "rx": [13, 31], "rx2": [13, 31], "ry": [13, 31], "init": [13, 31], "factor": [13, 31], "p_order": [13, 31], "rbf": [13, 31], "length_scal": [13, 31], "interp": [13, 31], "cubic": [13, 31], "sensor": [13, 31], "rho": [22, 40], "sigma": [22, 40], "data_path": [22, 40], "initial_st": [22, 40], "wa": [22, 40], "store": [22, 40], "result": [22, 40], "alpha": [22, 40], "a_hat": [22, 40], "h_hat": [22, 40], "error": [22, 40], "refer": [22, 40], "solut": [22, 40], "associ": [22, 40], "matrixexpr": [22, 40], "p": [22, 40], "3": [22, 40], "use_t": [22, 40], "e": [22, 40], "w": [22, 40], "alpha1": [22, 40], "alpha2": [22, 40], "beta1": [22, 40], "beta2": [22, 40]}, "objects": {"": [[26, 0, 0, "-", "simulai"]], "simulai": [[26, 0, 0, "-", "abstract"], [26, 0, 0, "-", "activations"], [27, 0, 0, "-", "backup"], [26, 0, 0, "-", "batching"], [26, 0, 0, "-", "file"], [26, 0, 0, "-", "io"], [31, 0, 0, "-", "math"], [26, 0, 0, "-", "mesh"], [26, 0, 0, "-", "metrics"], [32, 0, 0, "-", "models"], [26, 0, 0, "-", "normalization"], [33, 0, 0, "-", "optimization"], [26, 0, 0, "-", "output"], [26, 0, 0, "-", "parallel"], [34, 0, 0, "-", "regression"], [37, 0, 0, "-", "residuals"], [38, 0, 0, "-", "rom"], [26, 0, 0, "-", "simulation"], [26, 0, 0, "-", "special"], [39, 0, 0, "-", "templates"], [26, 0, 0, "-", "tokens"], [40, 0, 0, "-", "utilities"], [41, 0, 0, "-", "workflows"]], "simulai.abstract": [[26, 1, 1, "", "BaseFramework"], [26, 1, 1, "", "ByPassIntegrator"], [26, 1, 1, "", "DataPreparer"], [26, 1, 1, "", "Dataset"], [26, 1, 1, "", "Integral"], [26, 1, 1, "", "Model"], [26, 1, 1, "", "Normalization"], [26, 1, 1, "", "ROM"], [26, 1, 1, "", "Regression"], [26, 1, 1, "", "Transformation"]], "simulai.abstract.BaseFramework": [[26, 2, 1, "", "eval"], [26, 2, 1, "", "eval_batch"], [26, 2, 1, "", "fit"], [26, 2, 1, "", "save"], [26, 2, 1, "", "test"]], "simulai.abstract.ByPassIntegrator": [[26, 3, 1, "", "name"]], "simulai.abstract.DataPreparer": [[26, 2, 1, "", "prepare_input_data"], [26, 2, 1, "", "prepare_input_structured_data"], [26, 2, 1, "", "prepare_output_data"], [26, 2, 1, "", "prepare_output_structured_data"]], "simulai.abstract.Integral": [[26, 3, 1, "", "purpose"]], "simulai.abstract.ROM": [[26, 2, 1, "", "fit"], [26, 2, 1, "", "project"], [26, 2, 1, "", "reconstruct"], [26, 2, 1, "", "transform"], [26, 2, 1, "", "transform_inv"]], "simulai.abstract.Transformation": [[26, 2, 1, "", "transform"], [26, 2, 1, "", "transform_inv"]], "simulai.activations": [[26, 1, 1, "", "Siren"], [26, 1, 1, "", "sin"]], "simulai.activations.Siren": [[26, 2, 1, "", "forward"], [26, 3, 1, "", "name"], [26, 4, 1, "", "share_to_host"], [26, 3, 1, "", "training"]], "simulai.activations.sin": [[26, 2, 1, "", "forward"], [26, 3, 1, "", "name"], [26, 3, 1, "", "training"]], "simulai.backup": [[28, 0, 0, "-", "Network"], [29, 0, 0, "-", "Optimization"], [30, 0, 0, "-", "Pipeline"]], "simulai.backup.Network": [[28, 0, 0, "-", "test_convolution_net"], [28, 0, 0, "-", "test_deeponet"], [28, 0, 0, "-", "test_densenetwork"], [28, 0, 0, "-", "test_lstm_net_prediction"]], "simulai.backup.Network.test_convolution_net": [[28, 1, 1, "", "TestAutoencoder"]], "simulai.backup.Network.test_convolution_net.TestAutoencoder": [[28, 2, 1, "", "setUp"], [28, 2, 1, "", "test_convolution_2D"]], "simulai.backup.Network.test_deeponet": [[28, 1, 1, "", "Antiderivative"], [28, 1, 1, "", "NonlinearODE"], [28, 1, 1, "", "TestDeepONet"], [28, 5, 1, "", "sin2x_forcing"], [28, 5, 1, "", "sinx_forcing"], [28, 5, 1, "", "solver"], [28, 5, 1, "", "x_forcing"]], "simulai.backup.Network.test_deeponet.TestDeepONet": [[28, 2, 1, "", "generate_GRF_data"], [28, 2, 1, "", "setUp"], [28, 2, 1, "", "test_deeponet_scalar_scattered"]], "simulai.backup.Network.test_densenetwork": [[28, 1, 1, "", "TestDenseNetwork"]], "simulai.backup.Network.test_densenetwork.TestDenseNetwork": [[28, 2, 1, "", "setUp"], [28, 2, 1, "", "test_identity_dense_network_default_named_outputs"], [28, 2, 1, "", "test_identity_dense_network_without_names"]], "simulai.backup.Network.test_lstm_net_prediction": [[28, 1, 1, "", "TestDenseNetTFPrediction"]], "simulai.backup.Network.test_lstm_net_prediction.TestDenseNetTFPrediction": [[28, 2, 1, "", "setUp"], [28, 2, 1, "", "test_dense_net_tf_predictions_lorenz"], [28, 2, 1, "", "test_dense_net_tf_predictions_oscillator"]], "simulai.backup.Optimization": [[29, 0, 0, "-", "test_nomad"], [29, 0, 0, "-", "test_optuna_redis"]], "simulai.backup.Pipeline": [[30, 0, 0, "-", "test_pipeline"]], "simulai.backup.Pipeline.test_pipeline": [[30, 1, 1, "", "TestPipeline"]], "simulai.backup.Pipeline.test_pipeline.TestPipeline": [[30, 2, 1, "", "projection"], [30, 2, 1, "", "test_data_preparer_POD_pipeline_linear_comb"], [30, 2, 1, "", "test_if_projection_is_equal"], [30, 2, 1, "", "test_mini_batching"], [30, 2, 1, "", "test_pipeline"], [30, 2, 1, "", "test_sampling_batch_indices_copy_mean_data_preparer_IPOD_pipeline"], [30, 2, 1, "", "test_sampling_copy_mean_data_preparer_IPOD_pipeline"], [30, 2, 1, "", "test_sampling_copy_mean_data_preparer_IPOD_pipeline_linear_comb"]], "simulai.batching": [[26, 1, 1, "", "BatchwiseSampler"], [26, 5, 1, "", "batchdomain_constructor"], [26, 5, 1, "", "indices_batchdomain_constructor"]], "simulai.batching.BatchwiseSampler": [[26, 2, 1, "", "input_data"], [26, 4, 1, "", "input_shape"], [26, 2, 1, "", "minmax"], [26, 2, 1, "", "target_data"]], "simulai.file": [[26, 1, 1, "", "SPFile"], [26, 5, 1, "", "load_pkl"]], "simulai.file.SPFile": [[26, 2, 1, "", "read"], [26, 2, 1, "", "write"]], "simulai.io": [[26, 1, 1, "", "BatchCopy"], [26, 1, 1, "", "BatchwiseExtrapolation"], [26, 1, 1, "", "ByPassPreparer"], [26, 1, 1, "", "GaussianNoise"], [26, 1, 1, "", "IntersectingBatches"], [26, 1, 1, "", "MakeTensor"], [26, 1, 1, "", "MapValid"], [26, 1, 1, "", "MovingWindow"], [26, 1, 1, "", "Reshaper"], [26, 1, 1, "", "Sampling"], [26, 1, 1, "", "ScalerReshaper"], [26, 1, 1, "", "SlidingWindow"]], "simulai.io.BatchCopy": [[26, 2, 1, "", "copy"]], "simulai.io.ByPassPreparer": [[26, 3, 1, "", "name"], [26, 2, 1, "", "prepare_input_data"], [26, 2, 1, "", "prepare_input_structured_data"], [26, 2, 1, "", "prepare_output_data"], [26, 2, 1, "", "prepare_output_structured_data"]], "simulai.io.GaussianNoise": [[26, 2, 1, "", "size"]], "simulai.io.IntersectingBatches": [[26, 2, 1, "", "get_indices"]], "simulai.io.MapValid": [[26, 3, 1, "", "name"], [26, 2, 1, "", "prepare_input_data"], [26, 2, 1, "", "prepare_input_structured_data"], [26, 2, 1, "", "prepare_output_data"], [26, 2, 1, "", "prepare_output_structured_data"]], "simulai.io.MovingWindow": [[26, 2, 1, "", "bypass"], [26, 2, 1, "", "get_last_item"]], "simulai.io.Reshaper": [[26, 3, 1, "", "name"], [26, 2, 1, "", "prepare_input_data"], [26, 2, 1, "", "prepare_input_structured_data"], [26, 2, 1, "", "prepare_output_data"], [26, 2, 1, "", "prepare_output_structured_data"]], "simulai.io.Sampling": [[26, 4, 1, "", "indices"], [26, 3, 1, "", "name"], [26, 2, 1, "", "prepare_input_data"], [26, 2, 1, "", "prepare_input_structured_data"]], "simulai.io.ScalerReshaper": [[26, 3, 1, "", "name"], [26, 2, 1, "", "prepare_input_data"], [26, 2, 1, "", "prepare_input_structured_data"], [26, 2, 1, "", "prepare_output_data"], [26, 2, 1, "", "prepare_output_structured_data"]], "simulai.math": [[31, 0, 0, "-", "differentiation"], [31, 0, 0, "-", "expressions"], [31, 0, 0, "-", "filtering"], [31, 0, 0, "-", "integration"], [31, 0, 0, "-", "kansas"], [31, 0, 0, "-", "products"], [31, 0, 0, "-", "progression"], [31, 0, 0, "-", "quadratures"], [31, 0, 0, "-", "spaces"]], "simulai.math.differentiation": [[31, 1, 1, "", "CenteredDerivative"], [31, 1, 1, "", "CollocationDerivative"], [31, 1, 1, "", "Derivative"], [31, 1, 1, "", "LeleDerivative"], [31, 1, 1, "", "SpaceDerivative"], [31, 1, 1, "", "TimeDerivative"]], "simulai.math.differentiation.CenteredDerivative": [[31, 2, 1, "", "solve"]], "simulai.math.differentiation.CollocationDerivative": [[31, 2, 1, "", "interpolate_and_solve"], [31, 2, 1, "", "solve"]], "simulai.math.differentiation.LeleDerivative": [[31, 2, 1, "", "delta_0"], [31, 2, 1, "", "delta_1"], [31, 2, 1, "", "delta_2"], [31, 2, 1, "", "delta_3"], [31, 2, 1, "", "delta_4"], [31, 2, 1, "", "delta_5"], [31, 2, 1, "", "solve"]], "simulai.math.expressions": [[31, 1, 1, "", "FromSymbol2FLambda"]], "simulai.math.expressions.FromSymbol2FLambda": [[31, 2, 1, "", "clean_engines"], [31, 2, 1, "", "convert"]], "simulai.math.filtering": [[31, 1, 1, "", "HardPositivityLimiting"], [31, 1, 1, "", "SVDThreshold"], [31, 1, 1, "", "TimeAveraging"], [31, 1, 1, "", "TimeSeriesExtremes"]], "simulai.math.filtering.SVDThreshold": [[31, 2, 1, "", "Marcenko_Pastur_integral"], [31, 2, 1, "", "MedianMarcenkoPastur"], [31, 2, 1, "", "apply"], [31, 2, 1, "", "beta_parameter"], [31, 2, 1, "", "exec"], [31, 2, 1, "", "integrand"], [31, 2, 1, "", "lambda_function"], [31, 2, 1, "", "lambda_special"]], "simulai.math.filtering.TimeAveraging": [[31, 2, 1, "", "exec"]], "simulai.math.filtering.TimeSeriesExtremes": [[31, 2, 1, "", "apply"]], "simulai.math.integration": [[31, 1, 1, "", "ClassWrapper"], [31, 1, 1, "", "ExplicitIntegrator"], [31, 1, 1, "", "FunctionWrapper"], [31, 1, 1, "", "LSODA"], [31, 1, 1, "", "RK4"]], "simulai.math.integration.ClassWrapper": [[31, 2, 1, "", "eval"]], "simulai.math.integration.ExplicitIntegrator": [[31, 3, 1, "", "name"], [31, 2, 1, "", "step"], [31, 2, 1, "", "step_with_forcings"], [31, 2, 1, "", "step_with_forcings_separated"]], "simulai.math.integration.LSODA": [[31, 2, 1, "", "run"]], "simulai.math.integration.RK4": [[31, 3, 1, "", "name"]], "simulai.math.kansas": [[31, 1, 1, "", "Kansas"]], "simulai.math.kansas.Kansas": [[31, 2, 1, "", "gen_f1"], [31, 2, 1, "", "get_cross_derivative_matrix"], [31, 2, 1, "", "get_cross_derivative_matrix_optimized"], [31, 2, 1, "", "get_first_derivative_matrix"], [31, 2, 1, "", "get_first_derivative_matrix_aux"], [31, 2, 1, "", "get_first_derivative_matrix_optimized"], [31, 2, 1, "", "get_interpolation_matrix"], [31, 2, 1, "", "get_interpolation_matrix_optimized"], [31, 2, 1, "", "get_laplacian_matrix"], [31, 2, 1, "", "get_second_derivative_matrix"], [31, 2, 1, "", "get_second_derivative_matrix_optimized"], [31, 2, 1, "", "kernel"], [31, 2, 1, "", "kernel_Dx"], [31, 2, 1, "", "kernel_Dxx"], [31, 2, 1, "", "kernel_Dxy"], [31, 2, 1, "", "kernel_Laplacian"]], "simulai.math.products": [[31, 5, 1, "", "kronecker"]], "simulai.math.progression": [[31, 5, 1, "", "gp"]], "simulai.math.quadratures": [[31, 1, 1, "", "GaussLegendre"]], "simulai.math.quadratures.GaussLegendre": [[31, 2, 1, "", "generate_boundaries"], [31, 2, 1, "", "generate_domain"]], "simulai.math.spaces": [[31, 1, 1, "", "GaussianRandomFields"]], "simulai.math.spaces.GaussianRandomFields": [[31, 2, 1, "", "generate_u"], [31, 2, 1, "", "random_u"]], "simulai.mesh": [[26, 1, 1, "", "StructuredMesh"]], "simulai.mesh.StructuredMesh": [[26, 2, 1, "", "internal_boundary_product"], [26, 2, 1, "", "internal_product"], [26, 2, 1, "", "map_to_boundary_element"], [26, 2, 1, "", "map_to_element"]], "simulai.metrics": [[26, 1, 1, "", "ByPass"], [26, 1, 1, "", "CumulativeNorm"], [26, 1, 1, "", "DeterminationCoeff"], [26, 1, 1, "", "FeatureWiseErrorNorm"], [26, 1, 1, "", "L2Norm"], [26, 1, 1, "", "LyapunovUnits"], [26, 1, 1, "", "MeanEvaluation"], [26, 1, 1, "", "MemorySizeEval"], [26, 1, 1, "", "MinMaxEvaluation"], [26, 1, 1, "", "PerturbationMethod"], [26, 1, 1, "", "PointwiseError"], [26, 1, 1, "", "RosensteinKantz"], [26, 1, 1, "", "SampleWiseErrorNorm"]], "simulai.metrics.ByPass": [[26, 3, 1, "", "name"]], "simulai.metrics.FeatureWiseErrorNorm": [[26, 3, 1, "", "name"]], "simulai.metrics.L2Norm": [[26, 3, 1, "", "name"]], "simulai.metrics.MemorySizeEval": [[26, 4, 1, "", "available_memory_in_GB"]], "simulai.metrics.MinMaxEvaluation": [[26, 2, 1, "", "eval_h5"]], "simulai.metrics.RosensteinKantz": [[26, 3, 1, "", "name"]], "simulai.metrics.SampleWiseErrorNorm": [[26, 3, 1, "", "name"]], "simulai.normalization": [[26, 1, 1, "", "BatchNormalization"], [26, 1, 1, "", "StandardNormalization"], [26, 1, 1, "", "UnitaryNormalization"], [26, 1, 1, "", "UnitarySymmetricalNormalization"]], "simulai.normalization.BatchNormalization": [[26, 2, 1, "", "transform"]], "simulai.normalization.StandardNormalization": [[26, 2, 1, "", "apply_descaling"], [26, 2, 1, "", "apply_rescaling"], [26, 3, 1, "", "name"], [26, 2, 1, "", "rescale"]], "simulai.normalization.UnitaryNormalization": [[26, 2, 1, "", "apply_descaling"], [26, 2, 1, "", "apply_rescaling"], [26, 2, 1, "", "apply_transform"], [26, 3, 1, "", "name"], [26, 2, 1, "", "rescale"], [26, 2, 1, "", "transform"], [26, 2, 1, "", "update_global_parameters"]], "simulai.normalization.UnitarySymmetricalNormalization": [[26, 3, 1, "", "name"], [26, 2, 1, "", "rescale"], [26, 2, 1, "", "transform"], [26, 2, 1, "", "transform_inv"]], "simulai.output": [[26, 1, 1, "", "MeshFormatterHelper"], [26, 5, 1, "", "plot_figures2D"]], "simulai.parallel": [[26, 1, 1, "", "PipelineMPI"]], "simulai.parallel.PipelineMPI": [[26, 2, 1, "", "inner_type"], [26, 2, 1, "", "run"], [26, 4, 1, "", "success"]], "simulai.regression": [[35, 0, 0, "-", "pytorch"], [36, 0, 0, "-", "tf"]], "simulai.simulation": [[26, 1, 1, "", "Pipeline"]], "simulai.simulation.Pipeline": [[26, 2, 1, "", "batchwise_pipeline_loop"], [26, 2, 1, "", "eval"], [26, 2, 1, "", "exec"], [26, 4, 1, "", "input_data"], [26, 2, 1, "", "pipeline_loop"], [26, 2, 1, "", "predict"], [26, 2, 1, "", "project_data"], [26, 2, 1, "", "reconstruct_data"], [26, 2, 1, "", "save"], [26, 2, 1, "", "test"]], "simulai.special": [[26, 1, 1, "", "Scattering"], [26, 5, 1, "", "bidimensional_map_lin"], [26, 5, 1, "", "bidimensional_map_nonlin_1"], [26, 5, 1, "", "bidimensional_map_nonlin_2"], [26, 5, 1, "", "bidimensional_map_nonlin_3"], [26, 5, 1, "", "bidimensional_map_nonlin_4"], [26, 5, 1, "", "bidimensional_map_nonlin_5"], [26, 5, 1, "", "bidimensional_map_nonlin_6"], [26, 5, 1, "", "reservoir_generator"], [26, 5, 1, "", "time_function"]], "simulai.special.Scattering": [[26, 2, 1, "", "exec"]], "simulai.tokens": [[26, 1, 1, "", "Cos"], [26, 1, 1, "", "D"], [26, 5, 1, "", "Div"], [26, 1, 1, "", "Identity"], [26, 1, 1, "", "Kronecker"], [26, 5, 1, "", "L"], [26, 1, 1, "", "Sin"], [26, 1, 1, "", "Tanh"], [26, 5, 1, "", "diff_op"], [26, 5, 1, "", "make_op"]], "simulai.tokens.Cos": [[26, 3, 1, "", "default_assumptions"], [26, 3, 1, "", "name"]], "simulai.tokens.D": [[26, 3, 1, "", "default_assumptions"], [26, 3, 1, "", "name"]], "simulai.tokens.Identity": [[26, 3, 1, "", "default_assumptions"], [26, 3, 1, "", "name"]], "simulai.tokens.Kronecker": [[26, 3, 1, "", "default_assumptions"], [26, 3, 1, "", "name"]], "simulai.tokens.Sin": [[26, 3, 1, "", "default_assumptions"], [26, 3, 1, "", "name"]], "simulai.tokens.Tanh": [[26, 3, 1, "", "default_assumptions"], [26, 3, 1, "", "name"]], "simulai.utilities": [[40, 0, 0, "-", "lorenz_solver"], [40, 0, 0, "-", "lotka_volterra_solver"], [40, 0, 0, "-", "opinf_deviation"], [40, 0, 0, "-", "oscillator_solver"], [40, 0, 0, "-", "problem_classes"]], "simulai.utilities.lorenz_solver": [[40, 5, 1, "", "lorenz_solver"], [40, 5, 1, "", "lorenz_solver_forcing"]], "simulai.utilities.lotka_volterra_solver": [[40, 1, 1, "", "LotkaVolterra"]], "simulai.utilities.lotka_volterra_solver.LotkaVolterra": [[40, 2, 1, "", "eval"], [40, 2, 1, "", "run"]], "simulai.utilities.opinf_deviation": [[40, 1, 1, "", "OpInfDeviation"]], "simulai.utilities.opinf_deviation.OpInfDeviation": [[40, 2, 1, "", "compile"], [40, 2, 1, "", "eval_error"], [40, 2, 1, "", "eval_jacobian"], [40, 2, 1, "", "lambdify"], [40, 2, 1, "", "save"]], "simulai.utilities.oscillator_solver": [[40, 5, 1, "", "main"], [40, 5, 1, "", "oscillator_solver"], [40, 5, 1, "", "oscillator_solver_forcing"]], "simulai.utilities.problem_classes": [[40, 1, 1, "", "LorenzSystem"], [40, 1, 1, "", "NonlinearOscillator"]], "simulai.utilities.problem_classes.LorenzSystem": [[40, 2, 1, "", "jacobian"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"welcom": [0, 4], "simulai": [0, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "": [0, 4], "document": [0, 4], "content": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "indic": [0, 4], "tabl": [0, 4], "instal": 5, "stabl": 5, "releas": 5, "from": 5, "sourc": 5, "packag": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "subpackag": [8, 9, 16, 26, 27, 34], "submodul": [8, 9, 10, 11, 12, 13, 22, 26, 27, 28, 29, 30, 31, 40], "abstract": [8, 26], "modul": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "activ": [8, 26], "batch": [8, 26], "file": [8, 26], "initi": [8, 26], "io": [8, 26], "mesh": [8, 26], "metric": [8, 26], "normal": [8, 26], "output": [8, 26], "parallel": [8, 26], "simul": [8, 26], "special": [8, 26], "token": [8, 26], "backup": [9, 10, 11, 12, 27, 28, 29, 30], "test_autoencod": [9, 27], "network": [10, 28], "test_convolution_net": [10, 28], "test_deeponet": [10, 28], "test_dense_net_tf_predict": [10, 28], "test_densenetwork": [10, 28], "test_lstm_net_predict": [10, 28], "optim": [11, 15, 29, 33], "test_nomad": [11, 29], "test_optuna_redi": [11, 29], "pipelin": [12, 30], "test_pipelin": [12, 30], "math": [13, 31], "differenti": [13, 31], "express": [13, 31], "filter": [13, 31], "integr": [13, 31], "kansa": [13, 31], "product": [13, 31], "progress": [13, 31], "quadratur": [13, 31], "space": [13, 31], "model": [14, 32], "regress": [16, 17, 18, 34, 35, 36], "pytorch": [17, 35], "tf": [18, 36], "residu": [19, 37], "rom": [20, 38], "templat": [21, 39], "util": [22, 40], "lorenz_solv": [22, 40], "paramet": [22, 40], "return": [22, 40], "lotka_volterra_solv": [22, 40], "opinf_devi": [22, 40], "oscillator_solv": [22, 40], "problem_class": [22, 40], "workflow": [23, 41], "usag": 24}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Welcome to simulai\u2019s documentation!": [[0, "welcome-to-simulai-s-documentation"], [4, "welcome-to-simulai-s-documentation"]], "Contents:": [[0, null], [4, null]], "Indices and tables": [[0, "indices-and-tables"], [4, "indices-and-tables"]], "Installation": [[5, "installation"]], "Stable release": [[5, "stable-release"]], "From sources": [[5, "from-sources"]], "simulai": [[6, "simulai"], [25, "simulai"]], "simulai package": [[8, "simulai-package"], [26, "simulai-package"]], "Subpackages": [[8, "subpackages"], [9, "subpackages"], [16, "subpackages"], [26, "subpackages"], [27, "subpackages"], [34, "subpackages"]], "Submodules": [[8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [22, "submodules"], [26, "submodules"], [27, "submodules"], [28, "submodules"], [29, "submodules"], [30, "submodules"], [31, "submodules"], [40, "submodules"]], "simulai.abstract module": [[8, "module-simulai.abstract"], [26, "module-simulai.abstract"]], "simulai.activations module": [[8, "module-simulai.activations"], [26, "module-simulai.activations"]], "simulai.batching module": [[8, "module-simulai.batching"], [26, "module-simulai.batching"]], "simulai.file module": [[8, "module-simulai.file"], [26, "module-simulai.file"]], "simulai.initialization module": [[8, "simulai-initialization-module"], [26, "simulai-initialization-module"]], "simulai.io module": [[8, "module-simulai.io"], [26, "module-simulai.io"]], "simulai.mesh module": [[8, "module-simulai.mesh"], [26, "module-simulai.mesh"]], "simulai.metrics module": [[8, "module-simulai.metrics"], [26, "module-simulai.metrics"]], "simulai.normalization module": [[8, "module-simulai.normalization"], [26, "module-simulai.normalization"]], "simulai.output module": [[8, "module-simulai.output"], [26, "module-simulai.output"]], "simulai.parallel module": [[8, "module-simulai.parallel"], [26, "module-simulai.parallel"]], "simulai.simulation module": [[8, "module-simulai.simulation"], [26, "module-simulai.simulation"]], "simulai.special module": [[8, "module-simulai.special"], [26, "module-simulai.special"]], "simulai.tokens module": [[8, "module-simulai.tokens"], [26, "module-simulai.tokens"]], "Module contents": [[8, "module-simulai"], [9, "module-simulai.backup"], [10, "module-simulai.backup.Network"], [11, "module-simulai.backup.Optimization"], [12, "module-simulai.backup.Pipeline"], [13, "module-simulai.math"], [14, "module-simulai.models"], [15, "module-simulai.optimization"], [16, "module-simulai.regression"], [17, "module-simulai.regression.pytorch"], [18, "module-simulai.regression.tf"], [19, "module-simulai.residuals"], [20, "module-simulai.rom"], [21, "module-simulai.templates"], [22, "module-simulai.utilities"], [23, "module-simulai.workflows"], [26, "module-simulai"], [27, "module-simulai.backup"], [28, "module-simulai.backup.Network"], [29, "module-simulai.backup.Optimization"], [30, "module-simulai.backup.Pipeline"], [31, "module-simulai.math"], [32, "module-simulai.models"], [33, "module-simulai.optimization"], [34, "module-simulai.regression"], [35, "module-simulai.regression.pytorch"], [36, "module-simulai.regression.tf"], [37, "module-simulai.residuals"], [38, "module-simulai.rom"], [39, "module-simulai.templates"], [40, "module-simulai.utilities"], [41, "module-simulai.workflows"]], "simulai.backup package": [[9, "simulai-backup-package"], [27, "simulai-backup-package"]], "simulai.backup.test_autoencoder module": [[9, "simulai-backup-test-autoencoder-module"], [27, "simulai-backup-test-autoencoder-module"]], "simulai.backup.Network package": [[10, "simulai-backup-network-package"], [28, "simulai-backup-network-package"]], "simulai.backup.Network.test_convolution_net module": [[10, "module-simulai.backup.Network.test_convolution_net"], [28, "module-simulai.backup.Network.test_convolution_net"]], "simulai.backup.Network.test_deeponet module": [[10, "module-simulai.backup.Network.test_deeponet"], [28, "module-simulai.backup.Network.test_deeponet"]], "simulai.backup.Network.test_dense_net_tf_prediction module": [[10, "simulai-backup-network-test-dense-net-tf-prediction-module"], [28, "simulai-backup-network-test-dense-net-tf-prediction-module"]], "simulai.backup.Network.test_densenetwork module": [[10, "module-simulai.backup.Network.test_densenetwork"], [28, "module-simulai.backup.Network.test_densenetwork"]], "simulai.backup.Network.test_lstm_net_prediction module": [[10, "module-simulai.backup.Network.test_lstm_net_prediction"], [28, "module-simulai.backup.Network.test_lstm_net_prediction"]], "simulai.backup.Optimization package": [[11, "simulai-backup-optimization-package"], [29, "simulai-backup-optimization-package"]], "simulai.backup.Optimization.test_nomad module": [[11, "module-simulai.backup.Optimization.test_nomad"], [29, "module-simulai.backup.Optimization.test_nomad"]], "simulai.backup.Optimization.test_optuna_redis module": [[11, "module-simulai.backup.Optimization.test_optuna_redis"], [29, "module-simulai.backup.Optimization.test_optuna_redis"]], "simulai.backup.Pipeline package": [[12, "simulai-backup-pipeline-package"], [30, "simulai-backup-pipeline-package"]], "simulai.backup.Pipeline.test_pipeline module": [[12, "module-simulai.backup.Pipeline.test_pipeline"], [30, "module-simulai.backup.Pipeline.test_pipeline"]], "simulai.math package": [[13, "simulai-math-package"], [31, "simulai-math-package"]], "simulai.math.differentiation module": [[13, "module-simulai.math.differentiation"], [31, "module-simulai.math.differentiation"]], "simulai.math.expressions module": [[13, "module-simulai.math.expressions"], [31, "module-simulai.math.expressions"]], "simulai.math.filtering module": [[13, "module-simulai.math.filtering"], [31, "module-simulai.math.filtering"]], "simulai.math.integration module": [[13, "module-simulai.math.integration"], [31, "module-simulai.math.integration"]], "simulai.math.kansas module": [[13, "module-simulai.math.kansas"], [31, "module-simulai.math.kansas"]], "simulai.math.products module": [[13, "module-simulai.math.products"], [31, "module-simulai.math.products"]], "simulai.math.progression module": [[13, "module-simulai.math.progression"], [31, "module-simulai.math.progression"]], "simulai.math.quadratures module": [[13, "module-simulai.math.quadratures"], [31, "module-simulai.math.quadratures"]], "simulai.math.spaces module": [[13, "module-simulai.math.spaces"], [31, "module-simulai.math.spaces"]], "simulai.models package": [[14, "simulai-models-package"], [32, "simulai-models-package"]], "simulai.optimization package": [[15, "simulai-optimization-package"], [33, "simulai-optimization-package"]], "simulai.regression package": [[16, "simulai-regression-package"], [34, "simulai-regression-package"]], "simulai.regression.pytorch package": [[17, "simulai-regression-pytorch-package"], [35, "simulai-regression-pytorch-package"]], "simulai.regression.tf package": [[18, "simulai-regression-tf-package"], [36, "simulai-regression-tf-package"]], "simulai.residuals package": [[19, "simulai-residuals-package"], [37, "simulai-residuals-package"]], "simulai.rom package": [[20, "simulai-rom-package"], [38, "simulai-rom-package"]], "simulai.templates package": [[21, "simulai-templates-package"], [39, "simulai-templates-package"]], "simulai.utilities package": [[22, "simulai-utilities-package"], [40, "simulai-utilities-package"]], "simulai.utilities.lorenz_solver module": [[22, "module-simulai.utilities.lorenz_solver"], [40, "module-simulai.utilities.lorenz_solver"]], "Parameters": [[22, "parameters"], [22, "id1"], [22, "id3"], [22, "id5"], [40, "parameters"], [40, "id1"], [40, "id3"], [40, "id5"]], "Returns": [[22, "returns"], [22, "id2"], [22, "id4"], [22, "id6"], [40, "returns"], [40, "id2"], [40, "id4"], [40, "id6"]], "simulai.utilities.lotka_volterra_solver module": [[22, "module-simulai.utilities.lotka_volterra_solver"], [40, "module-simulai.utilities.lotka_volterra_solver"]], "simulai.utilities.opinf_deviation module": [[22, "module-simulai.utilities.opinf_deviation"], [40, "module-simulai.utilities.opinf_deviation"]], "simulai.utilities.oscillator_solver module": [[22, "module-simulai.utilities.oscillator_solver"], [40, "module-simulai.utilities.oscillator_solver"]], "simulai.utilities.problem_classes module": [[22, "module-simulai.utilities.problem_classes"], [40, "module-simulai.utilities.problem_classes"]], "simulai.workflows package": [[23, "simulai-workflows-package"], [41, "simulai-workflows-package"]], "Usage": [[24, "usage"]]}, "indexentries": {"baseframework (class in simulai.abstract)": [[8, "simulai.abstract.BaseFramework"], [26, "simulai.abstract.BaseFramework"]], "batchcopy (class in simulai.io)": [[8, "simulai.io.BatchCopy"], [26, "simulai.io.BatchCopy"]], "batchnormalization (class in simulai.normalization)": [[8, "simulai.normalization.BatchNormalization"], [26, "simulai.normalization.BatchNormalization"]], "batchwiseextrapolation (class in simulai.io)": [[8, "simulai.io.BatchwiseExtrapolation"], [26, "simulai.io.BatchwiseExtrapolation"]], "batchwisesampler (class in simulai.batching)": [[8, "simulai.batching.BatchwiseSampler"], [26, "simulai.batching.BatchwiseSampler"]], "bypass (class in simulai.metrics)": [[8, "simulai.metrics.ByPass"], [26, "simulai.metrics.ByPass"]], "bypassintegrator (class in simulai.abstract)": [[8, "simulai.abstract.ByPassIntegrator"], [26, "simulai.abstract.ByPassIntegrator"]], "bypasspreparer (class in simulai.io)": [[8, "simulai.io.ByPassPreparer"], [26, "simulai.io.ByPassPreparer"]], "cos (class in simulai.tokens)": [[8, "simulai.tokens.Cos"], [26, "simulai.tokens.Cos"]], "cumulativenorm (class in simulai.metrics)": [[8, "simulai.metrics.CumulativeNorm"], [26, "simulai.metrics.CumulativeNorm"]], "d (class in simulai.tokens)": [[8, "simulai.tokens.D"], [26, "simulai.tokens.D"]], "datapreparer (class in simulai.abstract)": [[8, "simulai.abstract.DataPreparer"], [26, "simulai.abstract.DataPreparer"]], "dataset (class in simulai.abstract)": [[8, "simulai.abstract.Dataset"], [26, "simulai.abstract.Dataset"]], "determinationcoeff (class in simulai.metrics)": [[8, "simulai.metrics.DeterminationCoeff"], [26, "simulai.metrics.DeterminationCoeff"]], "div() (in module simulai.tokens)": [[8, "simulai.tokens.Div"], [26, "simulai.tokens.Div"]], "featurewiseerrornorm (class in simulai.metrics)": [[8, "simulai.metrics.FeatureWiseErrorNorm"], [26, "simulai.metrics.FeatureWiseErrorNorm"]], "gaussiannoise (class in simulai.io)": [[8, "simulai.io.GaussianNoise"], [26, "simulai.io.GaussianNoise"]], "identity (class in simulai.tokens)": [[8, "simulai.tokens.Identity"], [26, "simulai.tokens.Identity"]], "integral (class in simulai.abstract)": [[8, "simulai.abstract.Integral"], [26, "simulai.abstract.Integral"]], "intersectingbatches (class in simulai.io)": [[8, "simulai.io.IntersectingBatches"], [26, "simulai.io.IntersectingBatches"]], "kronecker (class in simulai.tokens)": [[8, "simulai.tokens.Kronecker"], [26, "simulai.tokens.Kronecker"]], "l() (in module simulai.tokens)": [[8, "simulai.tokens.L"], [26, "simulai.tokens.L"]], "l2norm (class in simulai.metrics)": [[8, "simulai.metrics.L2Norm"], [26, "simulai.metrics.L2Norm"]], "lyapunovunits (class in simulai.metrics)": [[8, "simulai.metrics.LyapunovUnits"], [26, "simulai.metrics.LyapunovUnits"]], "maketensor (class in simulai.io)": [[8, "simulai.io.MakeTensor"], [26, "simulai.io.MakeTensor"]], "mapvalid (class in simulai.io)": [[8, "simulai.io.MapValid"], [26, "simulai.io.MapValid"]], "meanevaluation (class in simulai.metrics)": [[8, "simulai.metrics.MeanEvaluation"], [26, "simulai.metrics.MeanEvaluation"]], "memorysizeeval (class in simulai.metrics)": [[8, "simulai.metrics.MemorySizeEval"], [26, "simulai.metrics.MemorySizeEval"]], "meshformatterhelper (class in simulai.output)": [[8, "simulai.output.MeshFormatterHelper"], [26, "simulai.output.MeshFormatterHelper"]], "minmaxevaluation (class in simulai.metrics)": [[8, "simulai.metrics.MinMaxEvaluation"], [26, "simulai.metrics.MinMaxEvaluation"]], "model (class in simulai.abstract)": [[8, "simulai.abstract.Model"], [26, "simulai.abstract.Model"]], "movingwindow (class in simulai.io)": [[8, "simulai.io.MovingWindow"], [26, "simulai.io.MovingWindow"]], "normalization (class in simulai.abstract)": [[8, "simulai.abstract.Normalization"], [26, "simulai.abstract.Normalization"]], "perturbationmethod (class in simulai.metrics)": [[8, "simulai.metrics.PerturbationMethod"], [26, "simulai.metrics.PerturbationMethod"]], "pipeline (class in simulai.simulation)": [[8, "simulai.simulation.Pipeline"], [26, "simulai.simulation.Pipeline"]], "pipelinempi (class in simulai.parallel)": [[8, "simulai.parallel.PipelineMPI"], [26, "simulai.parallel.PipelineMPI"]], "pointwiseerror (class in simulai.metrics)": [[8, "simulai.metrics.PointwiseError"], [26, "simulai.metrics.PointwiseError"]], "rom (class in simulai.abstract)": [[8, "simulai.abstract.ROM"], [26, "simulai.abstract.ROM"]], "regression (class in simulai.abstract)": [[8, "simulai.abstract.Regression"], [26, "simulai.abstract.Regression"]], "reshaper (class in simulai.io)": [[8, "simulai.io.Reshaper"], [26, "simulai.io.Reshaper"]], "rosensteinkantz (class in simulai.metrics)": [[8, "simulai.metrics.RosensteinKantz"], [26, "simulai.metrics.RosensteinKantz"]], "spfile (class in simulai.file)": [[8, "simulai.file.SPFile"], [26, "simulai.file.SPFile"]], "samplewiseerrornorm (class in simulai.metrics)": [[8, "simulai.metrics.SampleWiseErrorNorm"], [26, "simulai.metrics.SampleWiseErrorNorm"]], "sampling (class in simulai.io)": [[8, "simulai.io.Sampling"], [26, "simulai.io.Sampling"]], "scalerreshaper (class in simulai.io)": [[8, "simulai.io.ScalerReshaper"], [26, "simulai.io.ScalerReshaper"]], "scattering (class in simulai.special)": [[8, "simulai.special.Scattering"], [26, "simulai.special.Scattering"]], "sin (class in simulai.tokens)": [[8, "simulai.tokens.Sin"], [26, "simulai.tokens.Sin"]], "siren (class in simulai.activations)": [[8, "simulai.activations.Siren"], [26, "simulai.activations.Siren"]], "slidingwindow (class in simulai.io)": [[8, "simulai.io.SlidingWindow"], [26, "simulai.io.SlidingWindow"]], "standardnormalization (class in simulai.normalization)": [[8, "simulai.normalization.StandardNormalization"], [26, "simulai.normalization.StandardNormalization"]], "structuredmesh (class in simulai.mesh)": [[8, "simulai.mesh.StructuredMesh"], [26, "simulai.mesh.StructuredMesh"]], "tanh (class in simulai.tokens)": [[8, "simulai.tokens.Tanh"], [26, "simulai.tokens.Tanh"]], "transformation (class in simulai.abstract)": [[8, "simulai.abstract.Transformation"], [26, "simulai.abstract.Transformation"]], "unitarynormalization (class in simulai.normalization)": [[8, "simulai.normalization.UnitaryNormalization"], [26, "simulai.normalization.UnitaryNormalization"]], "unitarysymmetricalnormalization (class in simulai.normalization)": [[8, "simulai.normalization.UnitarySymmetricalNormalization"], [26, "simulai.normalization.UnitarySymmetricalNormalization"]], "apply_descaling() (simulai.normalization.standardnormalization method)": [[8, "simulai.normalization.StandardNormalization.apply_descaling"], [26, "simulai.normalization.StandardNormalization.apply_descaling"]], "apply_descaling() (simulai.normalization.unitarynormalization method)": [[8, "simulai.normalization.UnitaryNormalization.apply_descaling"], [26, "simulai.normalization.UnitaryNormalization.apply_descaling"]], "apply_rescaling() (simulai.normalization.standardnormalization method)": [[8, "simulai.normalization.StandardNormalization.apply_rescaling"], [26, "simulai.normalization.StandardNormalization.apply_rescaling"]], "apply_rescaling() (simulai.normalization.unitarynormalization method)": [[8, "simulai.normalization.UnitaryNormalization.apply_rescaling"], [26, "simulai.normalization.UnitaryNormalization.apply_rescaling"]], "apply_transform() (simulai.normalization.unitarynormalization method)": [[8, "simulai.normalization.UnitaryNormalization.apply_transform"], [26, "simulai.normalization.UnitaryNormalization.apply_transform"]], "available_memory_in_gb (simulai.metrics.memorysizeeval property)": [[8, "simulai.metrics.MemorySizeEval.available_memory_in_GB"], [26, "simulai.metrics.MemorySizeEval.available_memory_in_GB"]], "batchdomain_constructor() (in module simulai.batching)": [[8, "simulai.batching.batchdomain_constructor"], [26, "simulai.batching.batchdomain_constructor"]], "batchwise_pipeline_loop() (simulai.simulation.pipeline method)": [[8, "simulai.simulation.Pipeline.batchwise_pipeline_loop"], [26, "simulai.simulation.Pipeline.batchwise_pipeline_loop"]], "bidimensional_map_lin() (in module simulai.special)": [[8, "simulai.special.bidimensional_map_lin"], [26, "simulai.special.bidimensional_map_lin"]], "bidimensional_map_nonlin_1() (in module simulai.special)": [[8, "simulai.special.bidimensional_map_nonlin_1"], [26, "simulai.special.bidimensional_map_nonlin_1"]], "bidimensional_map_nonlin_2() (in module simulai.special)": [[8, "simulai.special.bidimensional_map_nonlin_2"], [26, "simulai.special.bidimensional_map_nonlin_2"]], "bidimensional_map_nonlin_3() (in module simulai.special)": [[8, "simulai.special.bidimensional_map_nonlin_3"], [26, "simulai.special.bidimensional_map_nonlin_3"]], "bidimensional_map_nonlin_4() (in module simulai.special)": [[8, "simulai.special.bidimensional_map_nonlin_4"], [26, "simulai.special.bidimensional_map_nonlin_4"]], "bidimensional_map_nonlin_5() (in module simulai.special)": [[8, "simulai.special.bidimensional_map_nonlin_5"], [26, "simulai.special.bidimensional_map_nonlin_5"]], "bidimensional_map_nonlin_6() (in module simulai.special)": [[8, "simulai.special.bidimensional_map_nonlin_6"], [26, "simulai.special.bidimensional_map_nonlin_6"]], "bypass() (simulai.io.movingwindow method)": [[8, "simulai.io.MovingWindow.bypass"], [26, "simulai.io.MovingWindow.bypass"]], "copy() (simulai.io.batchcopy method)": [[8, "simulai.io.BatchCopy.copy"], [26, "simulai.io.BatchCopy.copy"]], "default_assumptions (simulai.tokens.cos attribute)": [[8, "simulai.tokens.Cos.default_assumptions"], [26, "simulai.tokens.Cos.default_assumptions"]], "default_assumptions (simulai.tokens.d attribute)": [[8, "simulai.tokens.D.default_assumptions"], [26, "simulai.tokens.D.default_assumptions"]], "default_assumptions (simulai.tokens.identity attribute)": [[8, "simulai.tokens.Identity.default_assumptions"], [26, "simulai.tokens.Identity.default_assumptions"]], "default_assumptions (simulai.tokens.kronecker attribute)": [[8, "simulai.tokens.Kronecker.default_assumptions"], [26, "simulai.tokens.Kronecker.default_assumptions"]], "default_assumptions (simulai.tokens.sin attribute)": [[8, "simulai.tokens.Sin.default_assumptions"], [26, "simulai.tokens.Sin.default_assumptions"]], "default_assumptions (simulai.tokens.tanh attribute)": [[8, "simulai.tokens.Tanh.default_assumptions"], [26, "simulai.tokens.Tanh.default_assumptions"]], "diff_op() (in module simulai.tokens)": [[8, "simulai.tokens.diff_op"], [26, "simulai.tokens.diff_op"]], "eval() (simulai.abstract.baseframework method)": [[8, "simulai.abstract.BaseFramework.eval"], [26, "simulai.abstract.BaseFramework.eval"]], "eval() (simulai.simulation.pipeline method)": [[8, "simulai.simulation.Pipeline.eval"], [26, "simulai.simulation.Pipeline.eval"]], "eval_batch() (simulai.abstract.baseframework method)": [[8, "simulai.abstract.BaseFramework.eval_batch"], [26, "simulai.abstract.BaseFramework.eval_batch"]], "eval_h5() (simulai.metrics.minmaxevaluation method)": [[8, "simulai.metrics.MinMaxEvaluation.eval_h5"], [26, "simulai.metrics.MinMaxEvaluation.eval_h5"]], "exec() (simulai.simulation.pipeline method)": [[8, "simulai.simulation.Pipeline.exec"], [26, "simulai.simulation.Pipeline.exec"]], "exec() (simulai.special.scattering method)": [[8, "simulai.special.Scattering.exec"], [26, "simulai.special.Scattering.exec"]], "fit() (simulai.abstract.baseframework method)": [[8, "simulai.abstract.BaseFramework.fit"], [26, "simulai.abstract.BaseFramework.fit"]], "fit() (simulai.abstract.rom method)": [[8, "simulai.abstract.ROM.fit"], [26, "simulai.abstract.ROM.fit"]], "forward() (simulai.activations.siren method)": [[8, "simulai.activations.Siren.forward"], [26, "simulai.activations.Siren.forward"]], "forward() (simulai.activations.sin method)": [[8, "simulai.activations.sin.forward"], [26, "simulai.activations.sin.forward"]], "get_indices() (simulai.io.intersectingbatches method)": [[8, "simulai.io.IntersectingBatches.get_indices"], [26, "simulai.io.IntersectingBatches.get_indices"]], "get_last_item() (simulai.io.movingwindow method)": [[8, "simulai.io.MovingWindow.get_last_item"], [26, "simulai.io.MovingWindow.get_last_item"]], "indices (simulai.io.sampling property)": [[8, "simulai.io.Sampling.indices"], [26, "simulai.io.Sampling.indices"]], "indices_batchdomain_constructor() (in module simulai.batching)": [[8, "simulai.batching.indices_batchdomain_constructor"], [26, "simulai.batching.indices_batchdomain_constructor"]], "inner_type() (simulai.parallel.pipelinempi static method)": [[8, "simulai.parallel.PipelineMPI.inner_type"], [26, "simulai.parallel.PipelineMPI.inner_type"]], "input_data (simulai.simulation.pipeline property)": [[8, "simulai.simulation.Pipeline.input_data"], [26, "simulai.simulation.Pipeline.input_data"]], "input_data() (simulai.batching.batchwisesampler method)": [[8, "simulai.batching.BatchwiseSampler.input_data"], [26, "simulai.batching.BatchwiseSampler.input_data"]], "input_shape (simulai.batching.batchwisesampler property)": [[8, "simulai.batching.BatchwiseSampler.input_shape"], [26, "simulai.batching.BatchwiseSampler.input_shape"]], "internal_boundary_product() (simulai.mesh.structuredmesh method)": [[8, "simulai.mesh.StructuredMesh.internal_boundary_product"], [26, "simulai.mesh.StructuredMesh.internal_boundary_product"]], "internal_product() (simulai.mesh.structuredmesh method)": [[8, "simulai.mesh.StructuredMesh.internal_product"], [26, "simulai.mesh.StructuredMesh.internal_product"]], "load_pkl() (in module simulai.file)": [[8, "simulai.file.load_pkl"], [26, "simulai.file.load_pkl"]], "make_op() (in module simulai.tokens)": [[8, "simulai.tokens.make_op"], [26, "simulai.tokens.make_op"]], "map_to_boundary_element() (simulai.mesh.structuredmesh method)": [[8, "simulai.mesh.StructuredMesh.map_to_boundary_element"], [26, "simulai.mesh.StructuredMesh.map_to_boundary_element"]], "map_to_element() (simulai.mesh.structuredmesh method)": [[8, "simulai.mesh.StructuredMesh.map_to_element"], [26, "simulai.mesh.StructuredMesh.map_to_element"]], "minmax() (simulai.batching.batchwisesampler method)": [[8, "simulai.batching.BatchwiseSampler.minmax"], [26, "simulai.batching.BatchwiseSampler.minmax"]], "module": [[8, "module-simulai"], [8, "module-simulai.abstract"], [8, "module-simulai.activations"], [8, "module-simulai.batching"], [8, "module-simulai.file"], [8, "module-simulai.io"], [8, "module-simulai.mesh"], [8, "module-simulai.metrics"], [8, "module-simulai.normalization"], [8, "module-simulai.output"], [8, "module-simulai.parallel"], [8, "module-simulai.simulation"], [8, "module-simulai.special"], [8, "module-simulai.tokens"], [9, "module-simulai.backup"], [10, "module-simulai.backup.Network"], [10, "module-simulai.backup.Network.test_convolution_net"], [10, "module-simulai.backup.Network.test_deeponet"], [10, "module-simulai.backup.Network.test_densenetwork"], [10, "module-simulai.backup.Network.test_lstm_net_prediction"], [11, "module-simulai.backup.Optimization"], [11, "module-simulai.backup.Optimization.test_nomad"], [11, "module-simulai.backup.Optimization.test_optuna_redis"], [12, "module-simulai.backup.Pipeline"], [12, "module-simulai.backup.Pipeline.test_pipeline"], [13, "module-simulai.math"], [13, "module-simulai.math.differentiation"], [13, "module-simulai.math.expressions"], [13, "module-simulai.math.filtering"], [13, "module-simulai.math.integration"], [13, "module-simulai.math.kansas"], [13, "module-simulai.math.products"], [13, "module-simulai.math.progression"], [13, "module-simulai.math.quadratures"], [13, "module-simulai.math.spaces"], [14, "module-simulai.models"], [15, "module-simulai.optimization"], [16, "module-simulai.regression"], [17, "module-simulai.regression.pytorch"], [18, "module-simulai.regression.tf"], [19, "module-simulai.residuals"], [20, "module-simulai.rom"], [21, "module-simulai.templates"], [22, "module-simulai.utilities"], [22, "module-simulai.utilities.lorenz_solver"], [22, "module-simulai.utilities.lotka_volterra_solver"], [22, "module-simulai.utilities.opinf_deviation"], [22, "module-simulai.utilities.oscillator_solver"], [22, "module-simulai.utilities.problem_classes"], [23, "module-simulai.workflows"], [26, "module-simulai"], [26, "module-simulai.abstract"], [26, "module-simulai.activations"], [26, "module-simulai.batching"], [26, "module-simulai.file"], [26, "module-simulai.io"], [26, "module-simulai.mesh"], [26, "module-simulai.metrics"], [26, "module-simulai.normalization"], [26, "module-simulai.output"], [26, "module-simulai.parallel"], [26, "module-simulai.simulation"], [26, "module-simulai.special"], [26, "module-simulai.tokens"], [27, "module-simulai.backup"], [28, "module-simulai.backup.Network"], [28, "module-simulai.backup.Network.test_convolution_net"], [28, "module-simulai.backup.Network.test_deeponet"], [28, "module-simulai.backup.Network.test_densenetwork"], [28, "module-simulai.backup.Network.test_lstm_net_prediction"], [29, "module-simulai.backup.Optimization"], [29, "module-simulai.backup.Optimization.test_nomad"], [29, "module-simulai.backup.Optimization.test_optuna_redis"], [30, "module-simulai.backup.Pipeline"], [30, "module-simulai.backup.Pipeline.test_pipeline"], [31, "module-simulai.math"], [31, "module-simulai.math.differentiation"], [31, "module-simulai.math.expressions"], [31, "module-simulai.math.filtering"], [31, "module-simulai.math.integration"], [31, "module-simulai.math.kansas"], [31, "module-simulai.math.products"], [31, "module-simulai.math.progression"], [31, "module-simulai.math.quadratures"], [31, "module-simulai.math.spaces"], [32, "module-simulai.models"], [33, "module-simulai.optimization"], [34, "module-simulai.regression"], [35, "module-simulai.regression.pytorch"], [36, "module-simulai.regression.tf"], [37, "module-simulai.residuals"], [38, "module-simulai.rom"], [39, "module-simulai.templates"], [40, "module-simulai.utilities"], [40, "module-simulai.utilities.lorenz_solver"], [40, "module-simulai.utilities.lotka_volterra_solver"], [40, "module-simulai.utilities.opinf_deviation"], [40, "module-simulai.utilities.oscillator_solver"], [40, "module-simulai.utilities.problem_classes"], [41, "module-simulai.workflows"]], "name (simulai.abstract.bypassintegrator attribute)": [[8, "simulai.abstract.ByPassIntegrator.name"], [26, "simulai.abstract.ByPassIntegrator.name"]], "name (simulai.activations.siren attribute)": [[8, "simulai.activations.Siren.name"], [26, "simulai.activations.Siren.name"]], "name (simulai.activations.sin attribute)": [[8, "simulai.activations.sin.name"], [26, "simulai.activations.sin.name"]], "name (simulai.io.bypasspreparer attribute)": [[8, "simulai.io.ByPassPreparer.name"], [26, "simulai.io.ByPassPreparer.name"]], "name (simulai.io.mapvalid attribute)": [[8, "simulai.io.MapValid.name"], [26, "simulai.io.MapValid.name"]], "name (simulai.io.reshaper attribute)": [[8, "simulai.io.Reshaper.name"], [26, "simulai.io.Reshaper.name"]], "name (simulai.io.sampling attribute)": [[8, "simulai.io.Sampling.name"], [26, "simulai.io.Sampling.name"]], "name (simulai.io.scalerreshaper attribute)": [[8, "simulai.io.ScalerReshaper.name"], [26, "simulai.io.ScalerReshaper.name"]], "name (simulai.metrics.bypass attribute)": [[8, "simulai.metrics.ByPass.name"], [26, "simulai.metrics.ByPass.name"]], "name (simulai.metrics.featurewiseerrornorm attribute)": [[8, "simulai.metrics.FeatureWiseErrorNorm.name"], [26, "simulai.metrics.FeatureWiseErrorNorm.name"]], "name (simulai.metrics.l2norm attribute)": [[8, "simulai.metrics.L2Norm.name"], [26, "simulai.metrics.L2Norm.name"]], "name (simulai.metrics.rosensteinkantz attribute)": [[8, "simulai.metrics.RosensteinKantz.name"], [26, "simulai.metrics.RosensteinKantz.name"]], "name (simulai.metrics.samplewiseerrornorm attribute)": [[8, "simulai.metrics.SampleWiseErrorNorm.name"], [26, "simulai.metrics.SampleWiseErrorNorm.name"]], "name (simulai.normalization.standardnormalization attribute)": [[8, "simulai.normalization.StandardNormalization.name"], [26, "simulai.normalization.StandardNormalization.name"]], "name (simulai.normalization.unitarynormalization attribute)": [[8, "simulai.normalization.UnitaryNormalization.name"], [26, "simulai.normalization.UnitaryNormalization.name"]], "name (simulai.normalization.unitarysymmetricalnormalization attribute)": [[8, "simulai.normalization.UnitarySymmetricalNormalization.name"], [26, "simulai.normalization.UnitarySymmetricalNormalization.name"]], "name (simulai.tokens.cos attribute)": [[8, "simulai.tokens.Cos.name"], [26, "simulai.tokens.Cos.name"]], "name (simulai.tokens.d attribute)": [[8, "simulai.tokens.D.name"], [26, "simulai.tokens.D.name"]], "name (simulai.tokens.identity attribute)": [[8, "simulai.tokens.Identity.name"], [26, "simulai.tokens.Identity.name"]], "name (simulai.tokens.kronecker attribute)": [[8, "simulai.tokens.Kronecker.name"], [26, "simulai.tokens.Kronecker.name"]], "name (simulai.tokens.sin attribute)": [[8, "simulai.tokens.Sin.name"], [26, "simulai.tokens.Sin.name"]], "name (simulai.tokens.tanh attribute)": [[8, "simulai.tokens.Tanh.name"], [26, "simulai.tokens.Tanh.name"]], "pipeline_loop() (simulai.simulation.pipeline method)": [[8, "simulai.simulation.Pipeline.pipeline_loop"], [26, "simulai.simulation.Pipeline.pipeline_loop"]], "plot_figures2d() (in module simulai.output)": [[8, "simulai.output.plot_figures2D"], [26, "simulai.output.plot_figures2D"]], "predict() (simulai.simulation.pipeline method)": [[8, "simulai.simulation.Pipeline.predict"], [26, "simulai.simulation.Pipeline.predict"]], "prepare_input_data() (simulai.abstract.datapreparer method)": [[8, "simulai.abstract.DataPreparer.prepare_input_data"], [26, "simulai.abstract.DataPreparer.prepare_input_data"]], "prepare_input_data() (simulai.io.bypasspreparer method)": [[8, "simulai.io.ByPassPreparer.prepare_input_data"], [26, "simulai.io.ByPassPreparer.prepare_input_data"]], "prepare_input_data() (simulai.io.mapvalid method)": [[8, "simulai.io.MapValid.prepare_input_data"], [26, "simulai.io.MapValid.prepare_input_data"]], "prepare_input_data() (simulai.io.reshaper method)": [[8, "simulai.io.Reshaper.prepare_input_data"], [26, "simulai.io.Reshaper.prepare_input_data"]], "prepare_input_data() (simulai.io.sampling method)": [[8, "simulai.io.Sampling.prepare_input_data"], [26, "simulai.io.Sampling.prepare_input_data"]], "prepare_input_data() (simulai.io.scalerreshaper method)": [[8, "simulai.io.ScalerReshaper.prepare_input_data"], [26, "simulai.io.ScalerReshaper.prepare_input_data"]], "prepare_input_structured_data() (simulai.abstract.datapreparer method)": [[8, "simulai.abstract.DataPreparer.prepare_input_structured_data"], [26, "simulai.abstract.DataPreparer.prepare_input_structured_data"]], "prepare_input_structured_data() (simulai.io.bypasspreparer method)": [[8, "simulai.io.ByPassPreparer.prepare_input_structured_data"], [26, "simulai.io.ByPassPreparer.prepare_input_structured_data"]], "prepare_input_structured_data() (simulai.io.mapvalid method)": [[8, "simulai.io.MapValid.prepare_input_structured_data"], [26, "simulai.io.MapValid.prepare_input_structured_data"]], "prepare_input_structured_data() (simulai.io.reshaper method)": [[8, "simulai.io.Reshaper.prepare_input_structured_data"], [26, "simulai.io.Reshaper.prepare_input_structured_data"]], "prepare_input_structured_data() (simulai.io.sampling method)": [[8, "simulai.io.Sampling.prepare_input_structured_data"], [26, "simulai.io.Sampling.prepare_input_structured_data"]], "prepare_input_structured_data() (simulai.io.scalerreshaper method)": [[8, "simulai.io.ScalerReshaper.prepare_input_structured_data"], [26, "simulai.io.ScalerReshaper.prepare_input_structured_data"]], "prepare_output_data() (simulai.abstract.datapreparer method)": [[8, "simulai.abstract.DataPreparer.prepare_output_data"], [26, "simulai.abstract.DataPreparer.prepare_output_data"]], "prepare_output_data() (simulai.io.bypasspreparer method)": [[8, "simulai.io.ByPassPreparer.prepare_output_data"], [26, "simulai.io.ByPassPreparer.prepare_output_data"]], "prepare_output_data() (simulai.io.mapvalid method)": [[8, "simulai.io.MapValid.prepare_output_data"], [26, "simulai.io.MapValid.prepare_output_data"]], "prepare_output_data() (simulai.io.reshaper method)": [[8, "simulai.io.Reshaper.prepare_output_data"], [26, "simulai.io.Reshaper.prepare_output_data"]], "prepare_output_data() (simulai.io.scalerreshaper method)": [[8, "simulai.io.ScalerReshaper.prepare_output_data"], [26, "simulai.io.ScalerReshaper.prepare_output_data"]], "prepare_output_structured_data() (simulai.abstract.datapreparer method)": [[8, "simulai.abstract.DataPreparer.prepare_output_structured_data"], [26, "simulai.abstract.DataPreparer.prepare_output_structured_data"]], "prepare_output_structured_data() (simulai.io.bypasspreparer method)": [[8, "simulai.io.ByPassPreparer.prepare_output_structured_data"], [26, "simulai.io.ByPassPreparer.prepare_output_structured_data"]], "prepare_output_structured_data() (simulai.io.mapvalid method)": [[8, "simulai.io.MapValid.prepare_output_structured_data"], [26, "simulai.io.MapValid.prepare_output_structured_data"]], "prepare_output_structured_data() (simulai.io.reshaper method)": [[8, "simulai.io.Reshaper.prepare_output_structured_data"], [26, "simulai.io.Reshaper.prepare_output_structured_data"]], "prepare_output_structured_data() (simulai.io.scalerreshaper method)": [[8, "simulai.io.ScalerReshaper.prepare_output_structured_data"], [26, "simulai.io.ScalerReshaper.prepare_output_structured_data"]], "project() (simulai.abstract.rom method)": [[8, "simulai.abstract.ROM.project"], [26, "simulai.abstract.ROM.project"]], "project_data() (simulai.simulation.pipeline method)": [[8, "simulai.simulation.Pipeline.project_data"], [26, "simulai.simulation.Pipeline.project_data"]], "purpose (simulai.abstract.integral attribute)": [[8, "simulai.abstract.Integral.purpose"], [26, "simulai.abstract.Integral.purpose"]], "read() (simulai.file.spfile method)": [[8, "simulai.file.SPFile.read"], [26, "simulai.file.SPFile.read"]], "reconstruct() (simulai.abstract.rom method)": [[8, "simulai.abstract.ROM.reconstruct"], [26, "simulai.abstract.ROM.reconstruct"]], "reconstruct_data() (simulai.simulation.pipeline method)": [[8, "simulai.simulation.Pipeline.reconstruct_data"], [26, "simulai.simulation.Pipeline.reconstruct_data"]], "rescale() (simulai.normalization.standardnormalization method)": [[8, "simulai.normalization.StandardNormalization.rescale"], [26, "simulai.normalization.StandardNormalization.rescale"]], "rescale() (simulai.normalization.unitarynormalization method)": [[8, "simulai.normalization.UnitaryNormalization.rescale"], [26, "simulai.normalization.UnitaryNormalization.rescale"]], "rescale() (simulai.normalization.unitarysymmetricalnormalization method)": [[8, "simulai.normalization.UnitarySymmetricalNormalization.rescale"], [26, "simulai.normalization.UnitarySymmetricalNormalization.rescale"]], "reservoir_generator() (in module simulai.special)": [[8, "simulai.special.reservoir_generator"], [26, "simulai.special.reservoir_generator"]], "run() (simulai.parallel.pipelinempi method)": [[8, "simulai.parallel.PipelineMPI.run"], [26, "simulai.parallel.PipelineMPI.run"]], "save() (simulai.abstract.baseframework method)": [[8, "simulai.abstract.BaseFramework.save"], [26, "simulai.abstract.BaseFramework.save"]], "save() (simulai.simulation.pipeline method)": [[8, "simulai.simulation.Pipeline.save"], [26, "simulai.simulation.Pipeline.save"]], "share_to_host (simulai.activations.siren property)": [[8, "simulai.activations.Siren.share_to_host"], [26, "simulai.activations.Siren.share_to_host"]], "simulai": [[8, "module-simulai"], [26, "module-simulai"]], "simulai.abstract": [[8, "module-simulai.abstract"], [26, "module-simulai.abstract"]], "simulai.activations": [[8, "module-simulai.activations"], [26, "module-simulai.activations"]], "simulai.batching": [[8, "module-simulai.batching"], [26, "module-simulai.batching"]], "simulai.file": [[8, "module-simulai.file"], [26, "module-simulai.file"]], "simulai.io": [[8, "module-simulai.io"], [26, "module-simulai.io"]], "simulai.mesh": [[8, "module-simulai.mesh"], [26, "module-simulai.mesh"]], "simulai.metrics": [[8, "module-simulai.metrics"], [26, "module-simulai.metrics"]], "simulai.normalization": [[8, "module-simulai.normalization"], [26, "module-simulai.normalization"]], "simulai.output": [[8, "module-simulai.output"], [26, "module-simulai.output"]], "simulai.parallel": [[8, "module-simulai.parallel"], [26, "module-simulai.parallel"]], "simulai.simulation": [[8, "module-simulai.simulation"], [26, "module-simulai.simulation"]], "simulai.special": [[8, "module-simulai.special"], [26, "module-simulai.special"]], "simulai.tokens": [[8, "module-simulai.tokens"], [26, "module-simulai.tokens"]], "sin (class in simulai.activations)": [[8, "simulai.activations.sin"], [26, "simulai.activations.sin"]], "size() (simulai.io.gaussiannoise method)": [[8, "simulai.io.GaussianNoise.size"], [26, "simulai.io.GaussianNoise.size"]], "success (simulai.parallel.pipelinempi property)": [[8, "simulai.parallel.PipelineMPI.success"], [26, "simulai.parallel.PipelineMPI.success"]], "target_data() (simulai.batching.batchwisesampler method)": [[8, "simulai.batching.BatchwiseSampler.target_data"], [26, "simulai.batching.BatchwiseSampler.target_data"]], "test() (simulai.abstract.baseframework method)": [[8, "simulai.abstract.BaseFramework.test"], [26, "simulai.abstract.BaseFramework.test"]], "test() (simulai.simulation.pipeline method)": [[8, "simulai.simulation.Pipeline.test"], [26, "simulai.simulation.Pipeline.test"]], "time_function() (in module simulai.special)": [[8, "simulai.special.time_function"], [26, "simulai.special.time_function"]], "training (simulai.activations.siren attribute)": [[8, "simulai.activations.Siren.training"], [26, "simulai.activations.Siren.training"]], "training (simulai.activations.sin attribute)": [[8, "simulai.activations.sin.training"], [26, "simulai.activations.sin.training"]], "transform() (simulai.abstract.rom method)": [[8, "simulai.abstract.ROM.transform"], [26, "simulai.abstract.ROM.transform"]], "transform() (simulai.abstract.transformation method)": [[8, "simulai.abstract.Transformation.transform"], [26, "simulai.abstract.Transformation.transform"]], "transform() (simulai.normalization.batchnormalization method)": [[8, "simulai.normalization.BatchNormalization.transform"], [26, "simulai.normalization.BatchNormalization.transform"]], "transform() (simulai.normalization.unitarynormalization method)": [[8, "simulai.normalization.UnitaryNormalization.transform"], [26, "simulai.normalization.UnitaryNormalization.transform"]], "transform() (simulai.normalization.unitarysymmetricalnormalization method)": [[8, "simulai.normalization.UnitarySymmetricalNormalization.transform"], [26, "simulai.normalization.UnitarySymmetricalNormalization.transform"]], "transform_inv() (simulai.abstract.rom method)": [[8, "simulai.abstract.ROM.transform_inv"], [26, "simulai.abstract.ROM.transform_inv"]], "transform_inv() (simulai.abstract.transformation method)": [[8, "simulai.abstract.Transformation.transform_inv"], [26, "simulai.abstract.Transformation.transform_inv"]], "transform_inv() (simulai.normalization.unitarysymmetricalnormalization method)": [[8, "simulai.normalization.UnitarySymmetricalNormalization.transform_inv"], [26, "simulai.normalization.UnitarySymmetricalNormalization.transform_inv"]], "update_global_parameters() (simulai.normalization.unitarynormalization method)": [[8, "simulai.normalization.UnitaryNormalization.update_global_parameters"], [26, "simulai.normalization.UnitaryNormalization.update_global_parameters"]], "write() (simulai.file.spfile method)": [[8, "simulai.file.SPFile.write"], [26, "simulai.file.SPFile.write"]], "simulai.backup": [[9, "module-simulai.backup"], [27, "module-simulai.backup"]], "antiderivative (class in simulai.backup.network.test_deeponet)": [[10, "simulai.backup.Network.test_deeponet.Antiderivative"], [28, "simulai.backup.Network.test_deeponet.Antiderivative"]], "nonlinearode (class in simulai.backup.network.test_deeponet)": [[10, "simulai.backup.Network.test_deeponet.NonlinearODE"], [28, "simulai.backup.Network.test_deeponet.NonlinearODE"]], "testautoencoder (class in simulai.backup.network.test_convolution_net)": [[10, "simulai.backup.Network.test_convolution_net.TestAutoencoder"], [28, "simulai.backup.Network.test_convolution_net.TestAutoencoder"]], "testdeeponet (class in simulai.backup.network.test_deeponet)": [[10, "simulai.backup.Network.test_deeponet.TestDeepONet"], [28, "simulai.backup.Network.test_deeponet.TestDeepONet"]], "testdensenettfprediction (class in simulai.backup.network.test_lstm_net_prediction)": [[10, "simulai.backup.Network.test_lstm_net_prediction.TestDenseNetTFPrediction"], [28, "simulai.backup.Network.test_lstm_net_prediction.TestDenseNetTFPrediction"]], "testdensenetwork (class in simulai.backup.network.test_densenetwork)": [[10, "simulai.backup.Network.test_densenetwork.TestDenseNetwork"], [28, "simulai.backup.Network.test_densenetwork.TestDenseNetwork"]], "generate_grf_data() (simulai.backup.network.test_deeponet.testdeeponet method)": [[10, "simulai.backup.Network.test_deeponet.TestDeepONet.generate_GRF_data"], [28, "simulai.backup.Network.test_deeponet.TestDeepONet.generate_GRF_data"]], "setup() (simulai.backup.network.test_convolution_net.testautoencoder method)": [[10, "simulai.backup.Network.test_convolution_net.TestAutoencoder.setUp"], [28, "simulai.backup.Network.test_convolution_net.TestAutoencoder.setUp"]], "setup() (simulai.backup.network.test_deeponet.testdeeponet method)": [[10, "simulai.backup.Network.test_deeponet.TestDeepONet.setUp"], [28, "simulai.backup.Network.test_deeponet.TestDeepONet.setUp"]], "setup() (simulai.backup.network.test_densenetwork.testdensenetwork method)": [[10, "simulai.backup.Network.test_densenetwork.TestDenseNetwork.setUp"], [28, "simulai.backup.Network.test_densenetwork.TestDenseNetwork.setUp"]], "setup() (simulai.backup.network.test_lstm_net_prediction.testdensenettfprediction method)": [[10, "simulai.backup.Network.test_lstm_net_prediction.TestDenseNetTFPrediction.setUp"], [28, "simulai.backup.Network.test_lstm_net_prediction.TestDenseNetTFPrediction.setUp"]], "simulai.backup.network": [[10, "module-simulai.backup.Network"], [28, "module-simulai.backup.Network"]], "simulai.backup.network.test_convolution_net": [[10, "module-simulai.backup.Network.test_convolution_net"], [28, "module-simulai.backup.Network.test_convolution_net"]], "simulai.backup.network.test_deeponet": [[10, "module-simulai.backup.Network.test_deeponet"], [28, "module-simulai.backup.Network.test_deeponet"]], "simulai.backup.network.test_densenetwork": [[10, "module-simulai.backup.Network.test_densenetwork"], [28, "module-simulai.backup.Network.test_densenetwork"]], "simulai.backup.network.test_lstm_net_prediction": [[10, "module-simulai.backup.Network.test_lstm_net_prediction"], [28, "module-simulai.backup.Network.test_lstm_net_prediction"]], "sin2x_forcing() (in module simulai.backup.network.test_deeponet)": [[10, "simulai.backup.Network.test_deeponet.sin2x_forcing"], [28, "simulai.backup.Network.test_deeponet.sin2x_forcing"]], "sinx_forcing() (in module simulai.backup.network.test_deeponet)": [[10, "simulai.backup.Network.test_deeponet.sinx_forcing"], [28, "simulai.backup.Network.test_deeponet.sinx_forcing"]], "solver() (in module simulai.backup.network.test_deeponet)": [[10, "simulai.backup.Network.test_deeponet.solver"], [28, "simulai.backup.Network.test_deeponet.solver"]], "test_convolution_2d() (simulai.backup.network.test_convolution_net.testautoencoder method)": [[10, "simulai.backup.Network.test_convolution_net.TestAutoencoder.test_convolution_2D"], [28, "simulai.backup.Network.test_convolution_net.TestAutoencoder.test_convolution_2D"]], "test_deeponet_scalar_scattered() (simulai.backup.network.test_deeponet.testdeeponet method)": [[10, "simulai.backup.Network.test_deeponet.TestDeepONet.test_deeponet_scalar_scattered"], [28, "simulai.backup.Network.test_deeponet.TestDeepONet.test_deeponet_scalar_scattered"]], "test_dense_net_tf_predictions_lorenz() (simulai.backup.network.test_lstm_net_prediction.testdensenettfprediction method)": [[10, "simulai.backup.Network.test_lstm_net_prediction.TestDenseNetTFPrediction.test_dense_net_tf_predictions_lorenz"], [28, "simulai.backup.Network.test_lstm_net_prediction.TestDenseNetTFPrediction.test_dense_net_tf_predictions_lorenz"]], "test_dense_net_tf_predictions_oscillator() (simulai.backup.network.test_lstm_net_prediction.testdensenettfprediction method)": [[10, "simulai.backup.Network.test_lstm_net_prediction.TestDenseNetTFPrediction.test_dense_net_tf_predictions_oscillator"], [28, "simulai.backup.Network.test_lstm_net_prediction.TestDenseNetTFPrediction.test_dense_net_tf_predictions_oscillator"]], "test_identity_dense_network_default_named_outputs() (simulai.backup.network.test_densenetwork.testdensenetwork method)": [[10, "simulai.backup.Network.test_densenetwork.TestDenseNetwork.test_identity_dense_network_default_named_outputs"], [28, "simulai.backup.Network.test_densenetwork.TestDenseNetwork.test_identity_dense_network_default_named_outputs"]], "test_identity_dense_network_without_names() (simulai.backup.network.test_densenetwork.testdensenetwork method)": [[10, "simulai.backup.Network.test_densenetwork.TestDenseNetwork.test_identity_dense_network_without_names"], [28, "simulai.backup.Network.test_densenetwork.TestDenseNetwork.test_identity_dense_network_without_names"]], "x_forcing() (in module simulai.backup.network.test_deeponet)": [[10, "simulai.backup.Network.test_deeponet.x_forcing"], [28, "simulai.backup.Network.test_deeponet.x_forcing"]], "simulai.backup.optimization": [[11, "module-simulai.backup.Optimization"], [29, "module-simulai.backup.Optimization"]], "simulai.backup.optimization.test_nomad": [[11, "module-simulai.backup.Optimization.test_nomad"], [29, "module-simulai.backup.Optimization.test_nomad"]], "simulai.backup.optimization.test_optuna_redis": [[11, "module-simulai.backup.Optimization.test_optuna_redis"], [29, "module-simulai.backup.Optimization.test_optuna_redis"]], "testpipeline (class in simulai.backup.pipeline.test_pipeline)": [[12, "simulai.backup.Pipeline.test_pipeline.TestPipeline"], [30, "simulai.backup.Pipeline.test_pipeline.TestPipeline"]], "projection() (simulai.backup.pipeline.test_pipeline.testpipeline method)": [[12, "simulai.backup.Pipeline.test_pipeline.TestPipeline.projection"], [30, "simulai.backup.Pipeline.test_pipeline.TestPipeline.projection"]], "simulai.backup.pipeline": [[12, "module-simulai.backup.Pipeline"], [30, "module-simulai.backup.Pipeline"]], "simulai.backup.pipeline.test_pipeline": [[12, "module-simulai.backup.Pipeline.test_pipeline"], [30, "module-simulai.backup.Pipeline.test_pipeline"]], "test_data_preparer_pod_pipeline_linear_comb() (simulai.backup.pipeline.test_pipeline.testpipeline method)": [[12, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_data_preparer_POD_pipeline_linear_comb"], [30, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_data_preparer_POD_pipeline_linear_comb"]], "test_if_projection_is_equal() (simulai.backup.pipeline.test_pipeline.testpipeline method)": [[12, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_if_projection_is_equal"], [30, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_if_projection_is_equal"]], "test_mini_batching() (simulai.backup.pipeline.test_pipeline.testpipeline method)": [[12, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_mini_batching"], [30, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_mini_batching"]], "test_pipeline() (simulai.backup.pipeline.test_pipeline.testpipeline method)": [[12, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_pipeline"], [30, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_pipeline"]], "test_sampling_batch_indices_copy_mean_data_preparer_ipod_pipeline() (simulai.backup.pipeline.test_pipeline.testpipeline method)": [[12, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_sampling_batch_indices_copy_mean_data_preparer_IPOD_pipeline"], [30, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_sampling_batch_indices_copy_mean_data_preparer_IPOD_pipeline"]], "test_sampling_copy_mean_data_preparer_ipod_pipeline() (simulai.backup.pipeline.test_pipeline.testpipeline method)": [[12, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_sampling_copy_mean_data_preparer_IPOD_pipeline"], [30, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_sampling_copy_mean_data_preparer_IPOD_pipeline"]], "test_sampling_copy_mean_data_preparer_ipod_pipeline_linear_comb() (simulai.backup.pipeline.test_pipeline.testpipeline method)": [[12, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_sampling_copy_mean_data_preparer_IPOD_pipeline_linear_comb"], [30, "simulai.backup.Pipeline.test_pipeline.TestPipeline.test_sampling_copy_mean_data_preparer_IPOD_pipeline_linear_comb"]], "centeredderivative (class in simulai.math.differentiation)": [[13, "simulai.math.differentiation.CenteredDerivative"], [31, "simulai.math.differentiation.CenteredDerivative"]], "classwrapper (class in simulai.math.integration)": [[13, "simulai.math.integration.ClassWrapper"], [31, "simulai.math.integration.ClassWrapper"]], "collocationderivative (class in simulai.math.differentiation)": [[13, "simulai.math.differentiation.CollocationDerivative"], [31, "simulai.math.differentiation.CollocationDerivative"]], "derivative (class in simulai.math.differentiation)": [[13, "simulai.math.differentiation.Derivative"], [31, "simulai.math.differentiation.Derivative"]], "explicitintegrator (class in simulai.math.integration)": [[13, "simulai.math.integration.ExplicitIntegrator"], [31, "simulai.math.integration.ExplicitIntegrator"]], "fromsymbol2flambda (class in simulai.math.expressions)": [[13, "simulai.math.expressions.FromSymbol2FLambda"], [31, "simulai.math.expressions.FromSymbol2FLambda"]], "functionwrapper (class in simulai.math.integration)": [[13, "simulai.math.integration.FunctionWrapper"], [31, "simulai.math.integration.FunctionWrapper"]], "gausslegendre (class in simulai.math.quadratures)": [[13, "simulai.math.quadratures.GaussLegendre"], [31, "simulai.math.quadratures.GaussLegendre"]], "gaussianrandomfields (class in simulai.math.spaces)": [[13, "simulai.math.spaces.GaussianRandomFields"], [31, "simulai.math.spaces.GaussianRandomFields"]], "hardpositivitylimiting (class in simulai.math.filtering)": [[13, "simulai.math.filtering.HardPositivityLimiting"], [31, "simulai.math.filtering.HardPositivityLimiting"]], "kansas (class in simulai.math.kansas)": [[13, "simulai.math.kansas.Kansas"], [31, "simulai.math.kansas.Kansas"]], "lsoda (class in simulai.math.integration)": [[13, "simulai.math.integration.LSODA"], [31, "simulai.math.integration.LSODA"]], "lelederivative (class in simulai.math.differentiation)": [[13, "simulai.math.differentiation.LeleDerivative"], [31, "simulai.math.differentiation.LeleDerivative"]], "marcenko_pastur_integral() (simulai.math.filtering.svdthreshold method)": [[13, "simulai.math.filtering.SVDThreshold.Marcenko_Pastur_integral"], [31, "simulai.math.filtering.SVDThreshold.Marcenko_Pastur_integral"]], "medianmarcenkopastur() (simulai.math.filtering.svdthreshold method)": [[13, "simulai.math.filtering.SVDThreshold.MedianMarcenkoPastur"], [31, "simulai.math.filtering.SVDThreshold.MedianMarcenkoPastur"]], "rk4 (class in simulai.math.integration)": [[13, "simulai.math.integration.RK4"], [31, "simulai.math.integration.RK4"]], "svdthreshold (class in simulai.math.filtering)": [[13, "simulai.math.filtering.SVDThreshold"], [31, "simulai.math.filtering.SVDThreshold"]], "spacederivative (class in simulai.math.differentiation)": [[13, "simulai.math.differentiation.SpaceDerivative"], [31, "simulai.math.differentiation.SpaceDerivative"]], "timeaveraging (class in simulai.math.filtering)": [[13, "simulai.math.filtering.TimeAveraging"], [31, "simulai.math.filtering.TimeAveraging"]], "timederivative (class in simulai.math.differentiation)": [[13, "simulai.math.differentiation.TimeDerivative"], [31, "simulai.math.differentiation.TimeDerivative"]], "timeseriesextremes (class in simulai.math.filtering)": [[13, "simulai.math.filtering.TimeSeriesExtremes"], [31, "simulai.math.filtering.TimeSeriesExtremes"]], "apply() (simulai.math.filtering.svdthreshold method)": [[13, "simulai.math.filtering.SVDThreshold.apply"], [31, "simulai.math.filtering.SVDThreshold.apply"]], "apply() (simulai.math.filtering.timeseriesextremes method)": [[13, "simulai.math.filtering.TimeSeriesExtremes.apply"], [31, "simulai.math.filtering.TimeSeriesExtremes.apply"]], "beta_parameter() (simulai.math.filtering.svdthreshold method)": [[13, "simulai.math.filtering.SVDThreshold.beta_parameter"], [31, "simulai.math.filtering.SVDThreshold.beta_parameter"]], "clean_engines() (simulai.math.expressions.fromsymbol2flambda method)": [[13, "simulai.math.expressions.FromSymbol2FLambda.clean_engines"], [31, "simulai.math.expressions.FromSymbol2FLambda.clean_engines"]], "convert() (simulai.math.expressions.fromsymbol2flambda method)": [[13, "simulai.math.expressions.FromSymbol2FLambda.convert"], [31, "simulai.math.expressions.FromSymbol2FLambda.convert"]], "delta_0() (simulai.math.differentiation.lelederivative method)": [[13, "simulai.math.differentiation.LeleDerivative.delta_0"], [31, "simulai.math.differentiation.LeleDerivative.delta_0"]], "delta_1() (simulai.math.differentiation.lelederivative method)": [[13, "simulai.math.differentiation.LeleDerivative.delta_1"], [31, "simulai.math.differentiation.LeleDerivative.delta_1"]], "delta_2() (simulai.math.differentiation.lelederivative method)": [[13, "simulai.math.differentiation.LeleDerivative.delta_2"], [31, "simulai.math.differentiation.LeleDerivative.delta_2"]], "delta_3() (simulai.math.differentiation.lelederivative method)": [[13, "simulai.math.differentiation.LeleDerivative.delta_3"], [31, "simulai.math.differentiation.LeleDerivative.delta_3"]], "delta_4() (simulai.math.differentiation.lelederivative method)": [[13, "simulai.math.differentiation.LeleDerivative.delta_4"], [31, "simulai.math.differentiation.LeleDerivative.delta_4"]], "delta_5() (simulai.math.differentiation.lelederivative method)": [[13, "simulai.math.differentiation.LeleDerivative.delta_5"], [31, "simulai.math.differentiation.LeleDerivative.delta_5"]], "eval() (simulai.math.integration.classwrapper method)": [[13, "simulai.math.integration.ClassWrapper.eval"], [31, "simulai.math.integration.ClassWrapper.eval"]], "exec() (simulai.math.filtering.svdthreshold method)": [[13, "simulai.math.filtering.SVDThreshold.exec"], [31, "simulai.math.filtering.SVDThreshold.exec"]], "exec() (simulai.math.filtering.timeaveraging method)": [[13, "simulai.math.filtering.TimeAveraging.exec"], [31, "simulai.math.filtering.TimeAveraging.exec"]], "gen_f1() (simulai.math.kansas.kansas method)": [[13, "simulai.math.kansas.Kansas.gen_f1"], [31, "simulai.math.kansas.Kansas.gen_f1"]], "generate_boundaries() (simulai.math.quadratures.gausslegendre method)": [[13, "simulai.math.quadratures.GaussLegendre.generate_boundaries"], [31, "simulai.math.quadratures.GaussLegendre.generate_boundaries"]], "generate_domain() (simulai.math.quadratures.gausslegendre method)": [[13, "simulai.math.quadratures.GaussLegendre.generate_domain"], [31, "simulai.math.quadratures.GaussLegendre.generate_domain"]], "generate_u() (simulai.math.spaces.gaussianrandomfields method)": [[13, "simulai.math.spaces.GaussianRandomFields.generate_u"], [31, "simulai.math.spaces.GaussianRandomFields.generate_u"]], "get_cross_derivative_matrix() (simulai.math.kansas.kansas method)": [[13, "simulai.math.kansas.Kansas.get_cross_derivative_matrix"], [31, "simulai.math.kansas.Kansas.get_cross_derivative_matrix"]], "get_cross_derivative_matrix_optimized() (simulai.math.kansas.kansas method)": [[13, "simulai.math.kansas.Kansas.get_cross_derivative_matrix_optimized"], [31, "simulai.math.kansas.Kansas.get_cross_derivative_matrix_optimized"]], "get_first_derivative_matrix() (simulai.math.kansas.kansas method)": [[13, "simulai.math.kansas.Kansas.get_first_derivative_matrix"], [31, "simulai.math.kansas.Kansas.get_first_derivative_matrix"]], "get_first_derivative_matrix_aux() (simulai.math.kansas.kansas method)": [[13, "simulai.math.kansas.Kansas.get_first_derivative_matrix_aux"], [31, "simulai.math.kansas.Kansas.get_first_derivative_matrix_aux"]], "get_first_derivative_matrix_optimized() (simulai.math.kansas.kansas method)": [[13, "simulai.math.kansas.Kansas.get_first_derivative_matrix_optimized"], [31, "simulai.math.kansas.Kansas.get_first_derivative_matrix_optimized"]], "get_interpolation_matrix() (simulai.math.kansas.kansas method)": [[13, "simulai.math.kansas.Kansas.get_interpolation_matrix"], [31, "simulai.math.kansas.Kansas.get_interpolation_matrix"]], "get_interpolation_matrix_optimized() (simulai.math.kansas.kansas method)": [[13, "simulai.math.kansas.Kansas.get_interpolation_matrix_optimized"], [31, "simulai.math.kansas.Kansas.get_interpolation_matrix_optimized"]], "get_laplacian_matrix() (simulai.math.kansas.kansas method)": [[13, "simulai.math.kansas.Kansas.get_laplacian_matrix"], [31, "simulai.math.kansas.Kansas.get_laplacian_matrix"]], "get_second_derivative_matrix() (simulai.math.kansas.kansas method)": [[13, "simulai.math.kansas.Kansas.get_second_derivative_matrix"], [31, "simulai.math.kansas.Kansas.get_second_derivative_matrix"]], "get_second_derivative_matrix_optimized() (simulai.math.kansas.kansas method)": [[13, "simulai.math.kansas.Kansas.get_second_derivative_matrix_optimized"], [31, "simulai.math.kansas.Kansas.get_second_derivative_matrix_optimized"]], "gp() (in module simulai.math.progression)": [[13, "simulai.math.progression.gp"], [31, "simulai.math.progression.gp"]], "integrand() (simulai.math.filtering.svdthreshold method)": [[13, "simulai.math.filtering.SVDThreshold.integrand"], [31, "simulai.math.filtering.SVDThreshold.integrand"]], "interpolate_and_solve() (simulai.math.differentiation.collocationderivative method)": [[13, "simulai.math.differentiation.CollocationDerivative.interpolate_and_solve"], [31, "simulai.math.differentiation.CollocationDerivative.interpolate_and_solve"]], "kernel() (simulai.math.kansas.kansas method)": [[13, "simulai.math.kansas.Kansas.kernel"], [31, "simulai.math.kansas.Kansas.kernel"]], "kernel_dx() (simulai.math.kansas.kansas method)": [[13, "simulai.math.kansas.Kansas.kernel_Dx"], [31, "simulai.math.kansas.Kansas.kernel_Dx"]], "kernel_dxx() (simulai.math.kansas.kansas method)": [[13, "simulai.math.kansas.Kansas.kernel_Dxx"], [31, "simulai.math.kansas.Kansas.kernel_Dxx"]], "kernel_dxy() (simulai.math.kansas.kansas method)": [[13, "simulai.math.kansas.Kansas.kernel_Dxy"], [31, "simulai.math.kansas.Kansas.kernel_Dxy"]], "kernel_laplacian() (simulai.math.kansas.kansas method)": [[13, "simulai.math.kansas.Kansas.kernel_Laplacian"], [31, "simulai.math.kansas.Kansas.kernel_Laplacian"]], "kronecker() (in module simulai.math.products)": [[13, "simulai.math.products.kronecker"], [31, "simulai.math.products.kronecker"]], "lambda_function() (simulai.math.filtering.svdthreshold method)": [[13, "simulai.math.filtering.SVDThreshold.lambda_function"], [31, "simulai.math.filtering.SVDThreshold.lambda_function"]], "lambda_special() (simulai.math.filtering.svdthreshold method)": [[13, "simulai.math.filtering.SVDThreshold.lambda_special"], [31, "simulai.math.filtering.SVDThreshold.lambda_special"]], "name (simulai.math.integration.explicitintegrator attribute)": [[13, "simulai.math.integration.ExplicitIntegrator.name"], [31, "simulai.math.integration.ExplicitIntegrator.name"]], "name (simulai.math.integration.rk4 attribute)": [[13, "simulai.math.integration.RK4.name"], [31, "simulai.math.integration.RK4.name"]], "random_u() (simulai.math.spaces.gaussianrandomfields method)": [[13, "simulai.math.spaces.GaussianRandomFields.random_u"], [31, "simulai.math.spaces.GaussianRandomFields.random_u"]], "run() (simulai.math.integration.lsoda method)": [[13, "simulai.math.integration.LSODA.run"], [31, "simulai.math.integration.LSODA.run"]], "simulai.math": [[13, "module-simulai.math"], [31, "module-simulai.math"]], "simulai.math.differentiation": [[13, "module-simulai.math.differentiation"], [31, "module-simulai.math.differentiation"]], "simulai.math.expressions": [[13, "module-simulai.math.expressions"], [31, "module-simulai.math.expressions"]], "simulai.math.filtering": [[13, "module-simulai.math.filtering"], [31, "module-simulai.math.filtering"]], "simulai.math.integration": [[13, "module-simulai.math.integration"], [31, "module-simulai.math.integration"]], "simulai.math.kansas": [[13, "module-simulai.math.kansas"], [31, "module-simulai.math.kansas"]], "simulai.math.products": [[13, "module-simulai.math.products"], [31, "module-simulai.math.products"]], "simulai.math.progression": [[13, "module-simulai.math.progression"], [31, "module-simulai.math.progression"]], "simulai.math.quadratures": [[13, "module-simulai.math.quadratures"], [31, "module-simulai.math.quadratures"]], "simulai.math.spaces": [[13, "module-simulai.math.spaces"], [31, "module-simulai.math.spaces"]], "solve() (simulai.math.differentiation.centeredderivative method)": [[13, "simulai.math.differentiation.CenteredDerivative.solve"], [31, "simulai.math.differentiation.CenteredDerivative.solve"]], "solve() (simulai.math.differentiation.collocationderivative method)": [[13, "simulai.math.differentiation.CollocationDerivative.solve"], [31, "simulai.math.differentiation.CollocationDerivative.solve"]], "solve() (simulai.math.differentiation.lelederivative method)": [[13, "simulai.math.differentiation.LeleDerivative.solve"], [31, "simulai.math.differentiation.LeleDerivative.solve"]], "step() (simulai.math.integration.explicitintegrator method)": [[13, "simulai.math.integration.ExplicitIntegrator.step"], [31, "simulai.math.integration.ExplicitIntegrator.step"]], "step_with_forcings() (simulai.math.integration.explicitintegrator method)": [[13, "simulai.math.integration.ExplicitIntegrator.step_with_forcings"], [31, "simulai.math.integration.ExplicitIntegrator.step_with_forcings"]], "step_with_forcings_separated() (simulai.math.integration.explicitintegrator method)": [[13, "simulai.math.integration.ExplicitIntegrator.step_with_forcings_separated"], [31, "simulai.math.integration.ExplicitIntegrator.step_with_forcings_separated"]], "simulai.models": [[14, "module-simulai.models"], [32, "module-simulai.models"]], "simulai.optimization": [[15, "module-simulai.optimization"], [33, "module-simulai.optimization"]], "simulai.regression": [[16, "module-simulai.regression"], [34, "module-simulai.regression"]], "simulai.regression.pytorch": [[17, "module-simulai.regression.pytorch"], [35, "module-simulai.regression.pytorch"]], "simulai.regression.tf": [[18, "module-simulai.regression.tf"], [36, "module-simulai.regression.tf"]], "simulai.residuals": [[19, "module-simulai.residuals"], [37, "module-simulai.residuals"]], "simulai.rom": [[20, "module-simulai.rom"], [38, "module-simulai.rom"]], "simulai.templates": [[21, "module-simulai.templates"], [39, "module-simulai.templates"]], "lorenzsystem (class in simulai.utilities.problem_classes)": [[22, "simulai.utilities.problem_classes.LorenzSystem"], [40, "simulai.utilities.problem_classes.LorenzSystem"]], "lotkavolterra (class in simulai.utilities.lotka_volterra_solver)": [[22, "simulai.utilities.lotka_volterra_solver.LotkaVolterra"], [40, "simulai.utilities.lotka_volterra_solver.LotkaVolterra"]], "nonlinearoscillator (class in simulai.utilities.problem_classes)": [[22, "simulai.utilities.problem_classes.NonlinearOscillator"], [40, "simulai.utilities.problem_classes.NonlinearOscillator"]], "opinfdeviation (class in simulai.utilities.opinf_deviation)": [[22, "simulai.utilities.opinf_deviation.OpInfDeviation"], [40, "simulai.utilities.opinf_deviation.OpInfDeviation"]], "compile() (simulai.utilities.opinf_deviation.opinfdeviation method)": [[22, "simulai.utilities.opinf_deviation.OpInfDeviation.compile"], [40, "simulai.utilities.opinf_deviation.OpInfDeviation.compile"]], "eval() (simulai.utilities.lotka_volterra_solver.lotkavolterra method)": [[22, "simulai.utilities.lotka_volterra_solver.LotkaVolterra.eval"], [40, "simulai.utilities.lotka_volterra_solver.LotkaVolterra.eval"]], "eval_error() (simulai.utilities.opinf_deviation.opinfdeviation method)": [[22, "simulai.utilities.opinf_deviation.OpInfDeviation.eval_error"], [40, "simulai.utilities.opinf_deviation.OpInfDeviation.eval_error"]], "eval_jacobian() (simulai.utilities.opinf_deviation.opinfdeviation method)": [[22, "simulai.utilities.opinf_deviation.OpInfDeviation.eval_jacobian"], [40, "simulai.utilities.opinf_deviation.OpInfDeviation.eval_jacobian"]], "jacobian() (simulai.utilities.problem_classes.lorenzsystem method)": [[22, "simulai.utilities.problem_classes.LorenzSystem.jacobian"], [40, "simulai.utilities.problem_classes.LorenzSystem.jacobian"]], "lambdify() (simulai.utilities.opinf_deviation.opinfdeviation method)": [[22, "simulai.utilities.opinf_deviation.OpInfDeviation.lambdify"], [40, "simulai.utilities.opinf_deviation.OpInfDeviation.lambdify"]], "lorenz_solver() (in module simulai.utilities.lorenz_solver)": [[22, "simulai.utilities.lorenz_solver.lorenz_solver"], [40, "simulai.utilities.lorenz_solver.lorenz_solver"]], "lorenz_solver_forcing() (in module simulai.utilities.lorenz_solver)": [[22, "simulai.utilities.lorenz_solver.lorenz_solver_forcing"], [40, "simulai.utilities.lorenz_solver.lorenz_solver_forcing"]], "main() (in module simulai.utilities.oscillator_solver)": [[22, "simulai.utilities.oscillator_solver.main"], [40, "simulai.utilities.oscillator_solver.main"]], "oscillator_solver() (in module simulai.utilities.oscillator_solver)": [[22, "simulai.utilities.oscillator_solver.oscillator_solver"], [40, "simulai.utilities.oscillator_solver.oscillator_solver"]], "oscillator_solver_forcing() (in module simulai.utilities.oscillator_solver)": [[22, "simulai.utilities.oscillator_solver.oscillator_solver_forcing"], [40, "simulai.utilities.oscillator_solver.oscillator_solver_forcing"]], "run() (simulai.utilities.lotka_volterra_solver.lotkavolterra method)": [[22, "simulai.utilities.lotka_volterra_solver.LotkaVolterra.run"], [40, "simulai.utilities.lotka_volterra_solver.LotkaVolterra.run"]], "save() (simulai.utilities.opinf_deviation.opinfdeviation method)": [[22, "simulai.utilities.opinf_deviation.OpInfDeviation.save"], [40, "simulai.utilities.opinf_deviation.OpInfDeviation.save"]], "simulai.utilities": [[22, "module-simulai.utilities"], [40, "module-simulai.utilities"]], "simulai.utilities.lorenz_solver": [[22, "module-simulai.utilities.lorenz_solver"], [40, "module-simulai.utilities.lorenz_solver"]], "simulai.utilities.lotka_volterra_solver": [[22, "module-simulai.utilities.lotka_volterra_solver"], [40, "module-simulai.utilities.lotka_volterra_solver"]], "simulai.utilities.opinf_deviation": [[22, "module-simulai.utilities.opinf_deviation"], [40, "module-simulai.utilities.opinf_deviation"]], "simulai.utilities.oscillator_solver": [[22, "module-simulai.utilities.oscillator_solver"], [40, "module-simulai.utilities.oscillator_solver"]], "simulai.utilities.problem_classes": [[22, "module-simulai.utilities.problem_classes"], [40, "module-simulai.utilities.problem_classes"]], "simulai.workflows": [[23, "module-simulai.workflows"], [41, "module-simulai.workflows"]]}})